(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1172986,      22060]
NotebookOptionsPosition[   1168904,      21921]
NotebookOutlinePosition[   1169280,      21937]
CellTagsIndexPosition[   1169237,      21934]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Phase Boundary Calculations", "Title",
 CellChangeTimes->{{3.801864483130115*^9, 3.801864486608676*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8018815492558355`*^9, 3.80188156067794*^9}, {
  3.803091466973034*^9, 3.8030914825886335`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"convention", "=", "\"\<Curnoe\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8018815492558355`*^9, 3.80188156067794*^9}, {
  3.803091466973034*^9, 3.8030914825886335`*^9}, {3.80309178294276*^9, 
  3.8030917835602846`*^9}}],

Cell[CellGroupData[{

Cell["Exact Hamiltonian", "Section",
 CellChangeTimes->{{3.80186449315863*^9, 3.801864495628701*^9}}],

Cell[CellGroupData[{

Cell["Eigenstates", "Subsection",
 CellChangeTimes->{{3.8018645535187764`*^9, 3.801864554698451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Ground", "-", 
    RowBox[{
    "states", " ", "and", " ", "first", " ", "excited", " ", "states"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plusState", "[", 
     RowBox[{"a1_", ",", "a2_", ",", "a4_", ",", "a5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "a4", ",", "0", ",", "0", ",", 
      RowBox[{"-", "a1"}], ",", "0", ",", "0", ",", "a2", ",", "0", ",", "0", 
      ",", 
      RowBox[{"-", "a5"}], ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minusState", "[", 
     RowBox[{"a1_", ",", "a2_", ",", "a4_", ",", "a5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "a5", ",", "0", ",", "0", ",", "a2", ",", "0", ",", "0", ",", 
      "a1", ",", "0", ",", "0", ",", "a4", ",", "0", ",", "0"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upState", "[", 
     RowBox[{"b1_", ",", "b2_", ",", "b4_", ",", "b5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "b4", ",", "0", ",", "0", ",", "b1", ",", "0", ",", 
      "0", ",", "b2", ",", "0", ",", "0", ",", "b5", ",", "0"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"downState", "[", 
     RowBox[{"b1_", ",", "b2_", ",", "b4_", ",", "b5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "b5"}], ",", "0", ",", "0", ",", "b2", ",", "0", ",", "0", 
      ",", 
      RowBox[{"-", "b1"}], ",", "0", ",", "0", ",", "b4", ",", "0", ",", 
      "0"}], "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "a1", "=", 
     "0.0960023006569961009317604323639708844716307460964755250591787622584529\
813089767698810571800909907200936626013310387`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "a2", "=", 
     "0.1388976829934512769899363793643009436431045855160542453041384163665907\
376155181566008226602983001450395344287920164`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "a4", "=", 
     "0.9402137436584117102803389171690795195304604179630104367516510172338664\
876161921960814106181068536878355883513006478`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a5", "=", 
     RowBox[{
     "-", "0.29578557801801107314893451198428232799867699782942812905144325395\
19923893431000063944642632227447313723561228891602`100."}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "b1", "=", 
     "0.0809031712516095451371563547034817715595304871573509109207424435287669\
9682114508866445549236451570901970918703058`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "b2", "=", 
     "0.1917008150552997468777642490225760918592058666335852191883543088451498\
31841360096334160179449731245038678965028986`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b4", "=", 
     RowBox[{
     "-", "0.31172264723204881932869284495927195442219972813401190305781058160\
66006378278671108417326679997032775713005252249615`100."}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "b5", "=", 
     "0.9271108162410846058075149011383053038963114115323363041768748809065148\
838751133789071431892027360344146560344223858`100."}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plusState", "[", 
        RowBox[{"a1", ",", "a2", ",", "a4", ",", "a5"}], "]"}], ",", 
       RowBox[{"minusState", "[", 
        RowBox[{"a1", ",", "a2", ",", "a4", ",", "a5"}], "]"}], ",", 
       RowBox[{"upState", "[", 
        RowBox[{"b1", ",", "b2", ",", "b4", ",", "b5"}], "]"}], ",", 
       RowBox[{"downState", "[", 
        RowBox[{"b1", ",", "b2", ",", "b4", ",", "b5"}], "]"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.801864577598671*^9, 3.8018645966386347`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Position Conventions", "Subsection",
 CellChangeTimes->{{3.801864629528754*^9, 3.801864633788577*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Position", " ", "conventions", " ", "for", " ", "atoms", " ", "in", " ", 
    "the", " ", "tetrahedron", " ", "using", " ", "Curnoe"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"convention", ",", "\"\<Curnoe\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r1", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r2", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r3", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r4", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Position", " ", "conventions", " ", "for", " ", "atoms", " ", "in", " ", 
     "the", " ", "tetrahedron", " ", "using", " ", "Ross"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"convention", ",", "\"\<Ross\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r1", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r2", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r3", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r4", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"{", 
      RowBox[{"r1", ",", "r2", ",", "r3", ",", "r4"}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8018646577087297`*^9, 3.801864658448393*^9}, {
   3.8018647589682083`*^9, 3.8018647611884937`*^9}, 3.8018648367184467`*^9, {
   3.8018648685081844`*^9, 3.8018648867084007`*^9}, {3.803091534326449*^9, 
   3.803091568761162*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Local Bases Conventions", "Subsection",
 CellChangeTimes->{{3.7777395061459293`*^9, 3.777739512222026*^9}, {
  3.7804181552976494`*^9, 3.7804181596978674`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Rotation", " ", "matrices", " ", "changing", " ", "from", " ", "global", 
    " ", "to", " ", "local", " ", "axes", " ", "using", " ", "Curnoe"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"convention", ",", "\"\<Curnoe\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"u1", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "0", ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"u2", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "0", ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"u3", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"u4", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}]}], "}"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Rotation", " ", "matrices", " ", "changing", " ", "from", " ", "global", 
     " ", "to", " ", "local", " ", "axes", " ", "using", " ", "Ross"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"convention", ",", "\"\<Ross\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"u1", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "0", ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"u2", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "0", ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"u3", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "0", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "3"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"u4", "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "6"}]}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "0", ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]",
            "\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"\[Sqrt]", "3"}], ",", 
             RowBox[{"\[Sqrt]", "2"}]}], "}"}]}], "}"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"{", 
      RowBox[{"u1", ",", "u2", ",", "u3", ",", "u4"}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7782973642704086`*^9, 
   3.7782974125254984`*^9}, {3.77980414168041*^9, 3.779804143944518*^9}, 
   3.7804170277398033`*^9, 3.7804181692976527`*^9, {3.782352867120245*^9, 
   3.7823528912829294`*^9}, {3.801865485372116*^9, 3.801865489292281*^9}, {
   3.803091589724336*^9, 3.8030916065707116`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Angular Momentum Operators", "Subsection",
 CellChangeTimes->{{3.7777395228701334`*^9, 3.777739527300748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "J"}], " ", "+", " ", "1"}], ")"}], "\[Times]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "J"}], " ", "+", " ", "1"}], ")"}], " ", "representation",
      " ", "of", " ", "angular", " ", "momentum", " ", "operators", " ", 
     "used", " ", "for", " ", "exact", " ", "diagonalization", " ", "within", 
     " ", "the", " ", "ground"}], "-", 
    RowBox[{"state", "/", "first"}], "-", 
    RowBox[{
    "excited", " ", "state", " ", "manifold", " ", "on", " ", "a", " ", 
     "single", " ", "tetrahedron"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jz", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jm", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "*", "J"}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", "J"}], "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Jm", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"m", "+", 
           RowBox[{"(", 
            RowBox[{"J", "+", "1"}], ")"}]}], ",", 
          RowBox[{"m", "+", "1", "+", 
           RowBox[{"(", 
            RowBox[{"J", "+", "1"}], ")"}]}]}], "\[RightDoubleBracket]"}], 
        "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", "*", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "-", 
           RowBox[{"m", "*", 
            RowBox[{"(", 
             RowBox[{"m", "+", "1"}], ")"}]}]}], ")"}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "J"}], ",", 
        RowBox[{"J", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jp", "=", 
     RowBox[{"Jm", "\[ConjugateTranspose]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jx", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"Jp", "+", "Jm"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jy", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "I"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"Jp", "-", "Jm"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"id", "=", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zero", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["4", "4"], " ", "\[Times]", " ", 
      SuperscriptBox["4", "4"]}], " ", "=", " ", 
     RowBox[{
     "256", " ", "\[Times]", " ", "256", " ", "representation", " ", "of", 
      " ", "angular", " ", "momentum", " ", "operators", " ", "for", " ", 
      "the", " ", "four", " ", "different", " ", "atoms", " ", "in", " ", "a",
       " ", "tetrahedron"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"JxList", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "J1x", ",", "J2x", ",", "J3x", ",", "J4x", ",", 
         "list"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "Jx", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"J1x", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J2x", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J3x", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J4x", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{"J1x", ",", "J2x", ",", "J3x", ",", "J4x"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"JyList", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "J1y", ",", "J2y", ",", "J3y", ",", "J4y", ",", 
         "list"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "Jy", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"J1y", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J2y", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J3y", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J4y", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{"J1y", ",", "J2y", ",", "J3y", ",", "J4y"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"JzList", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "J1z", ",", "J2z", ",", "J3z", ",", "J4z", ",", 
         "list"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "Jz", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"J1z", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J2z", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J3z", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"J4z", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{"J1z", ",", "J2z", ",", "J3z", ",", "J4z"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Js", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"JxList", "[", "states", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"JyList", "[", "states", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"JzList", "[", "states", "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Stevens", " ", "operators"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"J", "*", 
      RowBox[{"(", 
       RowBox[{"J", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O2n2", "=", 
     RowBox[{
      RowBox[{"Jx", ".", "Jy"}], "+", 
      RowBox[{"Jy", ".", "Jx"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O2n1", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Jy", ".", "Jz"}], "+", 
        RowBox[{"Jz", ".", "Jy"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O20", "=", 
     RowBox[{
      RowBox[{"3", "*", 
       RowBox[{"Jz", ".", "Jz"}]}], "-", 
      RowBox[{"X", "*", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{
         RowBox[{"2", "*", "J"}], "+", "1"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O21", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Jx", ".", "Jz"}], "+", 
        RowBox[{"Jz", ".", "Jx"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O22", "=", 
     RowBox[{
      RowBox[{"Jx", ".", "Jx"}], "-", 
      RowBox[{"Jy", ".", "Jy"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["4", "4"], " ", "\[Times]", " ", 
      SuperscriptBox["4", "4"]}], " ", "=", " ", 
     RowBox[{
     "256", " ", "\[Times]", " ", "256", " ", "representation", " ", "of", 
      " ", "Stevens", " ", "operators", " ", "for", " ", "the", " ", "four", 
      " ", "different", " ", "atoms", " ", "in", " ", "a", " ", 
      "tetrahedron"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"O2n2List", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "O2n2\[LetterSpace]1", ",", "O2n2\[LetterSpace]2", ",",
          "O2n2\[LetterSpace]3", ",", "O2n2\[LetterSpace]4", ",", "list"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "O2n2", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"O2n2\[LetterSpace]1", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O2n2\[LetterSpace]2", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O2n2\[LetterSpace]3", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O2n2\[LetterSpace]4", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{
          "O2n2\[LetterSpace]1", ",", "O2n2\[LetterSpace]2", ",", 
           "O2n2\[LetterSpace]3", ",", "O2n2\[LetterSpace]4"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"O2n1List", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "O2n1\[LetterSpace]1", ",", "O2n1\[LetterSpace]2", ",",
          "O2n1\[LetterSpace]3", ",", "O2n1\[LetterSpace]4", ",", "list"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "O2n1", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"O2n1\[LetterSpace]1", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O2n1\[LetterSpace]2", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O2n1\[LetterSpace]3", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O2n1\[LetterSpace]4", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{
          "O2n1\[LetterSpace]1", ",", "O2n1\[LetterSpace]2", ",", 
           "O2n1\[LetterSpace]3", ",", "O2n1\[LetterSpace]4"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"O20List", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "O20\[LetterSpace]1", ",", "O20\[LetterSpace]2", ",", 
         "O20\[LetterSpace]3", ",", "O20\[LetterSpace]4", ",", "list"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "O20", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"O20\[LetterSpace]1", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O20\[LetterSpace]2", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O20\[LetterSpace]3", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O20\[LetterSpace]4", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{
          "O20\[LetterSpace]1", ",", "O20\[LetterSpace]2", ",", 
           "O20\[LetterSpace]3", ",", "O20\[LetterSpace]4"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"O21List", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "O21\[LetterSpace]1", ",", "O21\[LetterSpace]2", ",", 
         "O21\[LetterSpace]3", ",", "O21\[LetterSpace]4", ",", "list"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "O21", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"O21\[LetterSpace]1", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O21\[LetterSpace]2", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O21\[LetterSpace]3", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O21\[LetterSpace]4", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{
          "O21\[LetterSpace]1", ",", "O21\[LetterSpace]2", ",", 
           "O21\[LetterSpace]3", ",", "O21\[LetterSpace]4"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"O22List", "[", "states_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "matrix", ",", "O22\[LetterSpace]1", ",", "O22\[LetterSpace]2", ",", 
         "O22\[LetterSpace]3", ",", "O22\[LetterSpace]4", ",", "list"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrix", "=", "zero"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"matrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
             "states", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", "O22", ".", 
             RowBox[{
             "states", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"O22\[LetterSpace]1", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"matrix", ",", "id", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O22\[LetterSpace]2", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "matrix", ",", "id", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O22\[LetterSpace]3", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "matrix", ",", "id"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"O22\[LetterSpace]4", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"id", ",", "id", ",", "id", ",", "matrix"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{
          "O22\[LetterSpace]1", ",", "O22\[LetterSpace]2", ",", 
           "O22\[LetterSpace]3", ",", "O22\[LetterSpace]4"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroFull", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8018695529388666`*^9, 3.8018696906786833`*^9}, {
   3.8018697598487463`*^9, 3.8018698093486843`*^9}, {3.80186989390872*^9, 
   3.8018699124685154`*^9}, {3.8018802019395204`*^9, 3.801880247182637*^9}, {
   3.8018803245986834`*^9, 3.8018803410189033`*^9}, {3.802019583916913*^9, 
   3.8020196010830407`*^9}, 3.8020206313245983`*^9, {3.8020207992970915`*^9, 
   3.802020810317408*^9}, {3.803089270196183*^9, 3.80308931005486*^9}, {
   3.803089355552438*^9, 3.8030894762739277`*^9}, {3.8030895204968204`*^9, 
   3.8030895480729036`*^9}, {3.803089713688571*^9, 3.8030898352533293`*^9}, {
   3.8030900258168507`*^9, 3.803090049296629*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Crystal Field Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["H", "cf"], ")"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.777739641164362*^9, 3.777739646131135*^9}, {
  3.777742184928277*^9, 3.777742187836734*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Crystal", " ", "field", " ", "Hamiltonians", " ", "on", " ", "a", " ", 
    "single", " ", "tetrahedra"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hcf", "[", "\[CapitalDelta]_", "]"}], ":=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "\[CapitalDelta]", ",", "\[CapitalDelta]"}], "}"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hcf1", "[", "\[CapitalDelta]_", "]"}], ":=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"Hcf", "[", "\[CapitalDelta]", "]"}], ",", "id", ",", "id", 
       ",", "id"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hcf2", "[", "\[CapitalDelta]_", "]"}], ":=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", 
       RowBox[{"Hcf", "[", "\[CapitalDelta]", "]"}], ",", "id", ",", "id"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hcf3", "[", "\[CapitalDelta]_", "]"}], ":=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", 
       RowBox[{"Hcf", "[", "\[CapitalDelta]", "]"}], ",", "id"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hcf4", "[", "\[CapitalDelta]_", "]"}], ":=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "id", ",", 
       RowBox[{"Hcf", "[", "\[CapitalDelta]", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HcfFull", "[", "\[CapitalDelta]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Hcf1", "[", "\[CapitalDelta]", "]"}], "+", 
      RowBox[{"Hcf2", "[", "\[CapitalDelta]", "]"}], "+", 
      RowBox[{"Hcf3", "[", "\[CapitalDelta]", "]"}], "+", 
      RowBox[{"Hcf4", "[", "\[CapitalDelta]", "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7777395582466288`*^9, 
   3.7777395828939037`*^9}, 3.7777396693165517`*^9, {3.8018803698816967`*^9, 
   3.801880380763075*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Interaction Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["H", "int"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["H", "ex"], " ", "+", " ", 
      SubscriptBox["H", "d"]}]}], ")"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.7777396751316376`*^9, 3.7777396905594816`*^9}, {
  3.7812386880883203`*^9, 3.781238688681933*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Coupling", " ", "constant"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{
      "i_", ",", "j_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", 
       "\[ScriptCapitalJ]_", ",", "\[ScriptCapitalD]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"\[ScriptCapitalJ]", "*", 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "+", 
      RowBox[{"\[ScriptCapitalD]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"KroneckerDelta", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
         RowBox[{"3", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Alpha]"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Alpha]"}], "\[RightDoubleBracket]"}]}], 
           ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Beta]"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Beta]"}], "\[RightDoubleBracket]"}]}], 
           ")"}]}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Interaction", " ", "Hamiltonian"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Note", " ", "that", " ", 
     SubscriptBox["J", "i\[Alpha]"], " ", "in", " ", "the", " ", "global", 
     " ", "frame", " ", "is", " ", "given", " ", "by", " ", 
     RowBox[{
      SubscriptBox["\[Sum]", "\[Beta]"], " ", 
      RowBox[{
       SubscriptBox["u", 
        RowBox[{"i", ",", "\[Alpha]\[Beta]"}]], " ", 
       SuperscriptBox[
        SubscriptBox["J", "i"], "\[Beta]"], " ", "in", " ", "the", " ", 
       "local", " ", "frame"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hint", "[", 
      RowBox[{"\[ScriptCapitalJ]_", ",", "\[ScriptCapitalD]_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
         "i", ",", "j", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
          "\[ScriptCapitalJ]", ",", "\[ScriptCapitalD]"}], "]"}], "*", 
        RowBox[{"u", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "\[Alpha]1", ",", "\[Alpha]2"}], 
         "\[RightDoubleBracket]"}], "*", 
        RowBox[{"u", "\[LeftDoubleBracket]", 
         RowBox[{"j", ",", "\[Beta]1", ",", "\[Beta]2"}], 
         "\[RightDoubleBracket]"}], "*", 
        RowBox[{
         RowBox[{"Js", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "\[Alpha]2"}], "\[RightDoubleBracket]"}], ".", 
         RowBox[{"Js", "\[LeftDoubleBracket]", 
          RowBox[{"j", ",", "\[Beta]2"}], "\[RightDoubleBracket]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"i", "+", "1"}], ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]2", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7777395582466288`*^9, 
   3.7777395828939037`*^9}, 3.7777396693165517`*^9, 3.7777397038503647`*^9, {
   3.7782843832204356`*^9, 3.778284462768835*^9}, {3.778284496381651*^9, 
   3.778284565192321*^9}, {3.7782845978030567`*^9, 3.778284627849484*^9}, {
   3.778284662233942*^9, 3.778284670058066*^9}, {3.778285147622698*^9, 
   3.7782851558559437`*^9}, {3.778285458086672*^9, 3.7782854633193684`*^9}, 
   3.778286335271011*^9, {3.778286373349909*^9, 3.7782863932152467`*^9}, 
   3.778296054630414*^9, {3.7782960957281733`*^9, 3.778296106816414*^9}, {
   3.778297715442156*^9, 3.778297717638828*^9}, {3.7782978605058384`*^9, 
   3.7782978787178593`*^9}, {3.77829790891337*^9, 3.778297923990964*^9}, {
   3.7782979547437873`*^9, 3.7782980045602303`*^9}, {3.7798041726612916`*^9, 
   3.779804178465397*^9}, {3.7804181047478156`*^9, 3.780418105387769*^9}, {
   3.7804181633575754`*^9, 3.7804181752328415`*^9}, {3.7804182165378284`*^9, 
   3.7804183196126533`*^9}, 3.780418385987652*^9, {3.8018806504353285`*^9, 
   3.8018807198806458`*^9}, {3.8018808310998173`*^9, 
   3.8018809033628693`*^9}, {3.8018814470152607`*^9, 3.801881447162447*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Electric Quadrupole-Quadrupole Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["H", "EQQ"], ")"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.7777396751316376`*^9, 3.7777396905594816`*^9}, {
  3.7812386880883203`*^9, 3.781238688681933*^9}, {3.8030886235039463`*^9, 
  3.8030886370021534`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Defining", " ", "the", " ", "electric", " ", "quadrupole"}], "-", 
   RowBox[{
   "quadrupole", " ", "interaction", " ", "between", " ", "nearest", " ", 
    "neighbours", " ", "given", " ", "the", " ", "ground", " ", "states", " ",
     "and", " ", "first"}], "-", 
   RowBox[{
   "excited", " ", "states", " ", "on", " ", "a", " ", "single", " ", 
    "tetrahedron"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8030886930341225`*^9, 3.803088693967681*^9}, {
  3.8030887330661373`*^9, 3.8030887345932217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Defining", " ", "properties", " ", "of", " ", 
    RowBox[{"CircleTimes", " ", "\[CircleTimes]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Unprotect", "[", "CircleTimes", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "CircleTimes", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CircleTimes", "[", "]"}], ":=", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CircleTimes", "[", "a_", "]"}], ":=", "a"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CircleTimes", "[", 
      RowBox[{"a___", ",", 
       RowBox[{"i_", "/;", 
        RowBox[{"NumericQ", "[", "i", "]"}]}], ",", "b___"}], "]"}], ":=", 
     RowBox[{"i", "*", 
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CircleTimes", "[", 
      RowBox[{"a___", ",", 
       RowBox[{"Times", "[", 
        RowBox[{
         RowBox[{"i_", "/;", 
          RowBox[{"NumericQ", "[", "i", "]"}]}], ",", "b___"}], "]"}], ",", 
       "c___"}], "]"}], ":=", 
     RowBox[{"i", "*", 
      RowBox[{"CircleTimes", "[", 
       RowBox[{"a", ",", "b", ",", "c"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"CircleTimes", ",", 
      RowBox[{"{", 
       RowBox[{"Flat", ",", "NumericFunction", ",", "OneIdentity"}], "}"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Protect", "[", "CircleTimes", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.803092657194803*^9, 3.8030926578505764`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HEQQ", "[", 
   RowBox[{"\[ScriptCapitalQ]_", ",", "states_", ",", "convention_"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Heqq", ",", "X", ",", "O2n2", ",", "O2n1", ",", "O20", ",", "O21", ",", 
      "O22", ",", "Q", ",", "Qxx", ",", "Qxy", ",", "Qxz", ",", "Qyy", ",", 
      "Qyz", ",", "Qzz", ",", "term1", ",", "term2", ",", "term3", ",", 
      "replaceQijCurnoe", ",", "replaceQijRoss", ",", "total"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Returns", " ", "a", " ", "zero", " ", "matrix", " ", "if", " ", "Q", 
      " ", "is", " ", "zero"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalQ]", "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", "zeroFull", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"replaceQijCurnoe", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Qxx", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "1", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "+", 
          RowBox[{"O22", "[", "1", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "1", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "1", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "1", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "1", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "+", 
          RowBox[{"O22", "[", "1", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxx", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "2", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "+", 
          RowBox[{"O22", "[", "2", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "2", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "2", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "2", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "2", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "+", 
          RowBox[{"O22", "[", "2", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxx", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "3", "]"}], "2"]}], "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "-", 
          RowBox[{"O22", "[", "3", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "3", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "3", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "3", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "3", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "+", 
          RowBox[{"O22", "[", "3", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxx", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "-", 
          RowBox[{"O22", "[", "4", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "4", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "4", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "4", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "4", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "+", 
          RowBox[{"O22", "[", "4", "]"}]}]}]}], "\[IndentingNewLine]", 
       "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"replaceQijRoss", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Qxx", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "+", 
          RowBox[{"O22", "[", "1", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "1", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "1", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "1", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "1", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "1", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "+", 
          RowBox[{"O22", "[", "1", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "1", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "1", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "1", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "1", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "1", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxx", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "+", 
          RowBox[{"O22", "[", "2", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "2", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "2", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "2", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "2", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "2", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "+", 
          RowBox[{"O22", "[", "2", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "2", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "2", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "2", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "2", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "2", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxx", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "+", 
          RowBox[{"O22", "[", "3", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "3", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "3", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "3", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "3", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "3", "]"}], "2"]}], "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "-", 
          RowBox[{"O22", "[", "3", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "3", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "3", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "3", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "3", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "3", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxx", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "+", 
          RowBox[{"O22", "[", "4", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxy", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"O20", "[", "4", "]"}], "2"], "-", 
          FractionBox[
           RowBox[{"O21", "[", "4", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qxz", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "4", "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"O21", "[", "4", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["3", "2"]], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyy", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qyz", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"O20", "[", "4", "]"}], "2"]}], "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "-", 
          RowBox[{"O22", "[", "4", "]"}]}]}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"Qzz", "[", "4", "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"O21", "[", "4", "]"}]}], "-", 
          FractionBox[
           RowBox[{"O22", "[", "4", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"O2n1", "[", "4", "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"O2n2", "[", "4", "]"}]}], "2"]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxx", "[", "1", "]"}], ",", 
            RowBox[{"Qxy", "[", "1", "]"}], ",", 
            RowBox[{"Qxz", "[", "1", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxy", "[", "1", "]"}], ",", 
            RowBox[{"Qyy", "[", "1", "]"}], ",", 
            RowBox[{"Qyz", "[", "1", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxz", "[", "1", "]"}], ",", 
            RowBox[{"Qyz", "[", "1", "]"}], ",", 
            RowBox[{"Qzz", "[", "1", "]"}]}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxx", "[", "2", "]"}], ",", 
            RowBox[{"Qxy", "[", "2", "]"}], ",", 
            RowBox[{"Qxz", "[", "2", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxy", "[", "2", "]"}], ",", 
            RowBox[{"Qyy", "[", "2", "]"}], ",", 
            RowBox[{"Qyz", "[", "2", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxz", "[", "2", "]"}], ",", 
            RowBox[{"Qyz", "[", "2", "]"}], ",", 
            RowBox[{"Qzz", "[", "2", "]"}]}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxx", "[", "3", "]"}], ",", 
            RowBox[{"Qxy", "[", "3", "]"}], ",", 
            RowBox[{"Qxz", "[", "3", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxy", "[", "3", "]"}], ",", 
            RowBox[{"Qyy", "[", "3", "]"}], ",", 
            RowBox[{"Qyz", "[", "3", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxz", "[", "3", "]"}], ",", 
            RowBox[{"Qyz", "[", "3", "]"}], ",", 
            RowBox[{"Qzz", "[", "3", "]"}]}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxx", "[", "4", "]"}], ",", 
            RowBox[{"Qxy", "[", "4", "]"}], ",", 
            RowBox[{"Qxz", "[", "4", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxy", "[", "4", "]"}], ",", 
            RowBox[{"Qyy", "[", "4", "]"}], ",", 
            RowBox[{"Qyz", "[", "4", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qxz", "[", "4", "]"}], ",", 
            RowBox[{"Qyz", "[", "4", "]"}], ",", 
            RowBox[{"Qzz", "[", "4", "]"}]}], "}"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"term1", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "*", 
       RowBox[{"(", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "\[Mu]", ",", "\[Nu]"}], 
            "\[RightDoubleBracket]"}], "\[CircleTimes]", 
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "\[Nu]", ",", "\[Mu]"}], 
            "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "+", "1"}], ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Nu]", ",", "3"}], "}"}]}], "]"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"term2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "10"}], "/", "3"}], "*", 
       RowBox[{"(", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "\[Alpha]"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"r", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "\[Alpha]"}], "\[RightDoubleBracket]"}]}], 
            ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "\[Beta]"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"r", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "\[Beta]"}], "\[RightDoubleBracket]"}]}], 
            ")"}], "*", 
           RowBox[{
            RowBox[{"Q", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Alpha]", ",", "\[Mu]"}], 
             "\[RightDoubleBracket]"}], "\[CircleTimes]", 
            RowBox[{"Q", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Mu]", ",", "\[Beta]"}], 
             "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "+", "1"}], ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "3"}], "}"}]}], "]"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"term3", "=", 
      RowBox[{
       RowBox[{"35", "/", "6"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Alpha]"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Alpha]"}], "\[RightDoubleBracket]"}]}], 
           ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Beta]"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Beta]"}], "\[RightDoubleBracket]"}]}], 
           ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Mu]"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Mu]"}], "\[RightDoubleBracket]"}]}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "\[Nu]"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"r", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "\[Nu]"}], "\[RightDoubleBracket]"}]}], ")"}], 
          "*", 
          RowBox[{
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "\[Alpha]", ",", "\[Beta]"}], 
            "\[RightDoubleBracket]"}], "\[CircleTimes]", 
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "\[Mu]", ",", "\[Nu]"}], 
            "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"i", "+", "1"}], ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Mu]", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Nu]", ",", "3"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"total", "=", 
      RowBox[{"term1", "+", "term2", "+", "term3"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringMatchQ", "[", 
        RowBox[{"convention", ",", "\"\<Curnoe\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"total", "=", 
         RowBox[{"total", "/.", "replaceQijCurnoe"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringMatchQ", "[", 
        RowBox[{"convention", ",", "\"\<Ross\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"total", "=", 
         RowBox[{"total", "/.", "replaceQijRoss"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"total", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Distribute", ",", 
        RowBox[{"\[ScriptCapitalQ]", "*", "total"}], ",", "All"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"total", "=", 
      RowBox[{"total", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CircleTimes", "[", 
          RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Dot", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"O2n2", "[", "1", "]"}], ",", 
        RowBox[{"O2n2", "[", "2", "]"}], ",", 
        RowBox[{"O2n2", "[", "3", "]"}], ",", 
        RowBox[{"O2n2", "[", "4", "]"}]}], "}"}], "=", 
      RowBox[{"O2n2List", "[", "states", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"O2n1", "[", "1", "]"}], ",", 
        RowBox[{"O2n1", "[", "2", "]"}], ",", 
        RowBox[{"O2n1", "[", "3", "]"}], ",", 
        RowBox[{"O2n1", "[", "4", "]"}]}], "}"}], "=", 
      RowBox[{"O2n1List", "[", "states", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"O20", "[", "1", "]"}], ",", 
        RowBox[{"O20", "[", "2", "]"}], ",", 
        RowBox[{"O20", "[", "3", "]"}], ",", 
        RowBox[{"O20", "[", "4", "]"}]}], "}"}], "=", 
      RowBox[{"O20List", "[", "states", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"O21", "[", "1", "]"}], ",", 
        RowBox[{"O21", "[", "2", "]"}], ",", 
        RowBox[{"O21", "[", "3", "]"}], ",", 
        RowBox[{"O21", "[", "4", "]"}]}], "}"}], "=", 
      RowBox[{"O21List", "[", "states", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"O22", "[", "1", "]"}], ",", 
        RowBox[{"O22", "[", "2", "]"}], ",", 
        RowBox[{"O22", "[", "3", "]"}], ",", 
        RowBox[{"O22", "[", "4", "]"}]}], "}"}], "=", 
      RowBox[{"O22List", "[", "states", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"total", "=", 
      RowBox[{"Chop", "[", "total", "]"}]}], ";", "\[IndentingNewLine]", 
     "total"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8030890632449923`*^9, 3.8030891037691064`*^9}, {
   3.8030891356678505`*^9, 3.8030891810554094`*^9}, {3.8030892855823812`*^9, 
   3.803089321223463*^9}, {3.8030900559484234`*^9, 3.8030900560800467`*^9}, {
   3.8030900939707446`*^9, 3.803090121597067*^9}, {3.803090189730995*^9, 
   3.803090257079009*^9}, {3.803090310899098*^9, 3.803090316130349*^9}, {
   3.8030906100115705`*^9, 3.8030906799583297`*^9}, {3.8030908120471616`*^9, 
   3.8030908753986015`*^9}, {3.8030909561046886`*^9, 
   3.8030910122351084`*^9}, {3.803091097654942*^9, 3.8030911700594645`*^9}, {
   3.803091215783555*^9, 3.8030912370488114`*^9}, {3.803091274895789*^9, 
   3.8030914085902896`*^9}, {3.8030914575815735`*^9, 3.803091460683359*^9}, {
   3.803091681742208*^9, 3.8030916848051305`*^9}, {3.8030917288207045`*^9, 
   3.8030917735763683`*^9}, {3.8030918236023006`*^9, 3.803091824204507*^9}, {
   3.80309189879545*^9, 3.803091905510744*^9}, {3.803091948606226*^9, 
   3.8030919627410374`*^9}, {3.8030920451573844`*^9, 
   3.8030921743730125`*^9}, {3.803092204606183*^9, 3.803092276026023*^9}, {
   3.803092700719963*^9, 3.8030927906661887`*^9}, {3.8030928437472258`*^9, 
   3.803092850468007*^9}, {3.8032554425057354`*^9, 3.80325545443533*^9}, {
   3.803255506258335*^9, 3.803255524004125*^9}, {3.803255862056075*^9, 
   3.803255882713356*^9}, {3.8032560309640565`*^9, 3.8032560412386646`*^9}, {
   3.8032562530971184`*^9, 3.803256285952462*^9}, {3.803256431315195*^9, 
   3.803256468214796*^9}, {3.8032565772051473`*^9, 3.8032565783449726`*^9}, {
   3.803264187747774*^9, 3.8032641916232576`*^9}, {3.803264336161858*^9, 
   3.8032643362464857`*^9}, {3.80326475709828*^9, 3.8032647824337683`*^9}, {
   3.8032648176549897`*^9, 3.8032648602010202`*^9}, {3.8032650221447*^9, 
   3.803265103737876*^9}, {3.8032651649981155`*^9, 3.8032652423223763`*^9}, 
   3.803265298237109*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Determination of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalJ]", "c"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.777739765206789*^9, 3.7777397751189113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", "/", "\[CapitalDelta]"}], " ", "points"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Inverse\[CapitalDelta]List", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.000046656298600308496", ",", "0.0009331259720062202", ",", 
       "0.0019595645412130644", ",", "0.0033125972006220836", ",", 
       "0.004992223950233283", ",", "0.0066718506998444775", ",", 
       "0.009984447900466563", ",", "0.01250388802488336", ",", "0.015", ",", 
       "0.01665629860031104", ",", "0.0175", ",", "0.020808709175738727", ",",
        "0.0225", ",", "0.025007776049766724", ",", "0.0275", ",", 
       "0.028506998444790047", ",", "0.03", ",", "0.0325", ",", 
       "0.03331259720062209", ",", "0.035", ",", "0.0375", ",", 
       "0.03998444790046657", ",", "0.0425", ",", "0.04544323483670297", ",", 
       "0.0475", ",", "0.05", ",", "0.05351477449455676"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]List", "=", 
     RowBox[{"1.", "/", "Inverse\[CapitalDelta]List"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Critical", " ", "\[ScriptCapitalJ]", " ", "points", " ", "signifying", 
      " ", "the", " ", "change", " ", "in", " ", "ground"}], "-", 
     RowBox[{"state", " ", "degeneracy", " ", 
      RowBox[{"(", 
       RowBox[{"change", " ", "of", " ", "phase"}], ")"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]List", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.0", ",", "0.05", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.25", 
       ",", "0.3", ",", "0.35", ",", "0.4", ",", "0.45", ",", "0.5", ",", 
       "0.55", ",", "0.6", ",", "0.65", ",", "0.7", ",", "0.75", ",", "0.8", 
       ",", "0.85", ",", "0.9", ",", "0.95", ",", "1.0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalJ]cList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalD]", "=", "0.0315"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalQ]", "=", 
     RowBox[{"1.517", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startTime", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Heqq", "=", 
     RowBox[{"HEQQ", "[", 
      RowBox[{"\[ScriptCapitalQ]", ",", "states", ",", "convention"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Binary", " ", "search", " ", "to", " ", "determine", " ", 
          SubscriptBox["\[ScriptCapitalJ]", "c"], " ", "phase"}], "-", 
         RowBox[{
         "boundary", " ", "between", " ", "the", " ", "singlet", " ", "and", 
          " ", "non"}], "-", 
         RowBox[{"singlet", " ", "states", " ", "for", " ", "H"}]}], " ", "=",
         " ", 
        RowBox[{
         SubscriptBox["H", "cf"], " ", "+", " ", 
         SubscriptBox["H", 
          RowBox[{"ex", " "}]], "+", " ", 
         SubscriptBox["H", "d"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", "=", 
          RowBox[{
          "\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"-", "4.0"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"b", "=", "1.0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"crystalFieldH", "=", 
          RowBox[{"HcfFull", "[", "\[CapitalDelta]", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"HA", "=", 
          RowBox[{"crystalFieldH", "+", 
           RowBox[{"Hint", "[", 
            RowBox[{"a", ",", "\[ScriptCapitalD]"}], "]"}], "+", 
           RowBox[{"\[Lambda]", "*", "Heqq"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesA", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HA", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyA", "=", 
          RowBox[{"Min", "[", "energiesA", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyA", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesA", "-", "minEnergyA"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.00001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"HB", "=", 
          RowBox[{"crystalFieldH", "+", 
           RowBox[{"Hint", "[", 
            RowBox[{"b", ",", "\[ScriptCapitalD]"}], "]"}], "+", 
           RowBox[{"\[Lambda]", "*", "Heqq"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesB", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HB", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyB", "=", 
          RowBox[{"Min", "[", "energiesB", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyB", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesB", "-", "minEnergyB"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.00001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"b", "-", "a"}], "]"}], "\[GreaterEqual]", "0.000001"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "+", "b"}], ")"}], "/", "2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"HC", "=", 
             RowBox[{"crystalFieldH", "+", 
              RowBox[{"Hint", "[", 
               RowBox[{"c", ",", "\[ScriptCapitalD]"}], "]"}], "+", 
              RowBox[{"\[Lambda]", "*", "Heqq"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"energiesC", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Chop", "[", 
               RowBox[{"Eigenvalues", "[", "HC", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minEnergyC", "=", 
             RowBox[{"Min", "[", "energiesC", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"degeneracyC", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"energiesC", "-", "minEnergyC"}], ",", 
                RowBox[{
                 RowBox[{"#", "<", "0.00001"}], "&"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"degeneracyC", "\[Equal]", "1"}], ",", 
              RowBox[{"a", "=", "c"}], ",", 
              RowBox[{"b", "=", "c"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]cList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", "c"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "startTime"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalJ]c2List", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Binary", " ", "search", " ", "to", " ", "determine", " ", 
          SubscriptBox["\[ScriptCapitalJ]", "c"], " ", "phase"}], "-", 
         RowBox[{
         "boundary", " ", "between", " ", "the", " ", "doublet", " ", "and", 
          " ", "non"}], "-", 
         RowBox[{"doublet", " ", "states", " ", "for", " ", "H"}]}], " ", "=",
         " ", 
        RowBox[{
         SubscriptBox["H", "cf"], " ", "+", " ", 
         SubscriptBox["H", 
          RowBox[{"ex", " "}]], "+", " ", 
         SubscriptBox["H", "d"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", "=", 
          RowBox[{
          "\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"-", "4.0"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"b", "=", "1.0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"crystalFieldH", "=", 
          RowBox[{"HcfFull", "[", "\[CapitalDelta]", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"HA", "=", 
          RowBox[{"crystalFieldH", "+", 
           RowBox[{"Hint", "[", 
            RowBox[{"a", ",", "\[ScriptCapitalD]"}], "]"}], "+", 
           RowBox[{"\[Lambda]", "*", "Heqq"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesA", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HA", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyA", "=", 
          RowBox[{"Min", "[", "energiesA", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyA", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesA", "-", "minEnergyA"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.000001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"HB", "=", 
          RowBox[{"crystalFieldH", "+", 
           RowBox[{"Hint", "[", 
            RowBox[{"b", ",", "\[ScriptCapitalD]"}], "]"}], "+", 
           RowBox[{"\[Lambda]", "*", "Heqq"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesB", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HB", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyB", "=", 
          RowBox[{"Min", "[", "energiesB", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyB", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesB", "-", "minEnergyB"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.000001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"b", "-", "a"}], "]"}], "\[GreaterEqual]", "0.00001"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "+", "b"}], ")"}], "/", "2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"HC", "=", 
             RowBox[{"crystalFieldH", "+", 
              RowBox[{"Hint", "[", 
               RowBox[{"c", ",", "\[ScriptCapitalD]"}], "]"}], "+", 
              RowBox[{"\[Lambda]", "*", "Heqq"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"energiesC", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Chop", "[", 
               RowBox[{"Eigenvalues", "[", "HC", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minEnergyC", "=", 
             RowBox[{"Min", "[", "energiesC", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"degeneracyC", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"energiesC", "-", "minEnergyC"}], ",", 
                RowBox[{
                 RowBox[{"#", "<", "0.000001"}], "&"}]}], "]"}], "]"}]}], ";",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"degeneracyC", "\[Equal]", "2"}], ",", 
              RowBox[{"b", "=", "c"}], ",", 
              RowBox[{"a", "=", "c"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]c2List", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", "c"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "startTime"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7777395582466288`*^9, 
   3.7777395828939037`*^9}, 3.7777396693165517`*^9, 3.7777397038503647`*^9, {
   3.777739744112523*^9, 3.777739745051776*^9}, 3.7777397811661105`*^9, {
   3.7777402036071315`*^9, 3.7777402104913826`*^9}, {3.7779195721217785`*^9, 
   3.7779195954169793`*^9}, {3.777919768806902*^9, 3.7779197720741105`*^9}, {
   3.7779198581750336`*^9, 3.777919929940053*^9}, {3.7779202569638433`*^9, 
   3.7779202629201202`*^9}, {3.778182254405136*^9, 3.778182297620714*^9}, {
   3.778182508388516*^9, 3.77818252387066*^9}, {3.7782849978404474`*^9, 
   3.77828501003275*^9}, 3.778285112226073*^9, {3.778285209527841*^9, 
   3.778285243263448*^9}, {3.778286236213961*^9, 3.778286241218108*^9}, 
   3.7782863240595875`*^9, {3.7782866920105686`*^9, 3.7782867049865446`*^9}, {
   3.7782875188900375`*^9, 3.7782875259733405`*^9}, {3.778288851884556*^9, 
   3.7782888660735817`*^9}, {3.77828916078312*^9, 3.7782891622287364`*^9}, {
   3.778289807750908*^9, 3.778289830244421*^9}, 3.7782983486602125`*^9, 
   3.7804184264371185`*^9, {3.7810571508236685`*^9, 3.7810571697098937`*^9}, 
   3.7810581446787815`*^9, {3.7812387519734287`*^9, 3.7812387540607367`*^9}, {
   3.7812387860844216`*^9, 3.7812387868185816`*^9}, {3.7812394854162674`*^9, 
   3.781239486478487*^9}, {3.781240346156703*^9, 3.7812403865728784`*^9}, {
   3.7812406417773075`*^9, 3.78124064627625*^9}, {3.782353884925498*^9, 
   3.7823538884876285`*^9}, {3.7823546295828495`*^9, 
   3.7823546747735434`*^9}, {3.785198154201902*^9, 3.785198262621868*^9}, {
   3.7851982992619267`*^9, 3.7851983085069537`*^9}, {3.785198389262246*^9, 
   3.7851984699522*^9}, {3.7851985013622074`*^9, 3.7851985366521196`*^9}, {
   3.785203107085289*^9, 3.7852031086535172`*^9}, {3.7852034326865616`*^9, 
   3.7852034526871023`*^9}, {3.785203922148464*^9, 3.7852039223583713`*^9}, {
   3.7852040125861206`*^9, 3.785204023976022*^9}, {3.785204273028832*^9, 
   3.7852043168386126`*^9}, {3.7852046582867117`*^9, 3.785204658356521*^9}, {
   3.7852065351383123`*^9, 3.7852065649733152`*^9}, {3.785207072982994*^9, 
   3.785207150694762*^9}, {3.7852572497826777`*^9, 3.7852572773546934`*^9}, {
   3.785258061493988*^9, 3.7852581149594*^9}, 3.786411836655532*^9, {
   3.7869381148023033`*^9, 3.786938128593343*^9}, {3.787015211137886*^9, 
   3.7870152176076603`*^9}, {3.787015795107221*^9, 3.7870158418422794`*^9}, {
   3.787016388338808*^9, 3.7870164128552837`*^9}, {3.7870165197225475`*^9, 
   3.7870165221244135`*^9}, 3.7870168430262823`*^9, {3.797114754984907*^9, 
   3.7971147660603466`*^9}, {3.7971148128618207`*^9, 3.79711481842305*^9}, {
   3.797116109665139*^9, 3.7971161330814714`*^9}, {3.797116192058287*^9, 
   3.797116246006528*^9}, {3.79711629498925*^9, 3.797116305314905*^9}, {
   3.7971166979747434`*^9, 3.797116715734376*^9}, {3.797116765794797*^9, 
   3.7971167725245805`*^9}, {3.797117704229657*^9, 3.7971177069009366`*^9}, {
   3.797117741182783*^9, 3.7971177480705338`*^9}, {3.7971183694221525`*^9, 
   3.7971183973643107`*^9}, {3.797118438729569*^9, 3.79711845116413*^9}, {
   3.797118505940196*^9, 3.7971185259191713`*^9}, {3.7971197789981546`*^9, 
   3.7971197829035025`*^9}, {3.7971198602682433`*^9, 3.797119867563465*^9}, {
   3.797815484574119*^9, 3.7978154956017056`*^9}, {3.79781863392881*^9, 
   3.7978186495428886`*^9}, {3.797898209890738*^9, 3.797898210037983*^9}, 
   3.8012653470640545`*^9, {3.801299527865739*^9, 3.8012997040261173`*^9}, {
   3.8018809580209484`*^9, 3.801881096293948*^9}, {3.8018811278147755`*^9, 
   3.8018811938591595`*^9}, {3.801881233890485*^9, 3.8018813011735964`*^9}, {
   3.8018813588433113`*^9, 3.8018813625373125`*^9}, {3.8018816708831797`*^9, 
   3.8018817307882023`*^9}, 3.8018819609095144`*^9, {3.802047052623214*^9, 
   3.8020470740391436`*^9}, {3.8032653086597567`*^9, 
   3.8032653528319683`*^9}, {3.803265384195426*^9, 3.803265442736334*^9}, {
   3.8032654732592635`*^9, 3.8032654800810237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["3607.3260324`11.008730389397194"], "Print",
 CellChangeTimes->{3.802047008501786*^9, 3.8020473061608295`*^9, 
  3.8032690938103867`*^9}],

Cell[BoxData["6643.472336`11.273940124399962"], "Print",
 CellChangeTimes->{3.802047008501786*^9, 3.8020473061608295`*^9, 
  3.8032721299586844`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Boundary Plot", "Subsection",
 CellChangeTimes->{{3.7777398080908194`*^9, 3.777739808531269*^9}, {
  3.801931266959448*^9, 3.801931269112642*^9}, {3.80193137871883*^9, 
  3.8019313793203325`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Phase", " ", "boundary", " ", "plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maxX", "=", 
     RowBox[{"Max", "[", "Inverse\[CapitalDelta]List", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minY", "=", 
     RowBox[{
      RowBox[{"Min", "[", "\[ScriptCapitalJ]cList", "]"}], "-", "0.1"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxY", "=", 
     RowBox[{
      RowBox[{"Max", "[", "\[ScriptCapitalJ]cList", "]"}], "+", "0.1"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "Inverse\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[ScriptCapitalJ]cList", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "Inverse\[CapitalDelta]List", "]"}]}], 
          "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "Inverse\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[ScriptCapitalJ]c2List", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "Inverse\[CapitalDelta]List", "]"}]}], 
          "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"table", ",", "table2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda]\>\"", ",", 
        "\"\<1/\[CapitalDelta] (\!\(\*SuperscriptBox[\(K\), \(-1\)]\))\>\"", 
        ",", "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalJ]\), \(c\)]\) \
(K)\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", "Full", ",", "Full"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7777395582466288`*^9, 
   3.7777395828939037`*^9}, 3.7777396693165517`*^9, 3.7777397038503647`*^9, {
   3.777739744112523*^9, 3.777739745051776*^9}, 3.7777397811661105`*^9, {
   3.777740219856539*^9, 3.77774024563313*^9}, {3.777919965027746*^9, 
   3.777920028635236*^9}, {3.778289214867298*^9, 3.778289218880719*^9}, 
   3.778644281191668*^9, {3.7812406806923676`*^9, 3.7812407498432636`*^9}, {
   3.7812408108340282`*^9, 3.7812409867585864`*^9}, {3.781241018824711*^9, 
   3.7812410504033933`*^9}, {3.7812412537632113`*^9, 
   3.7812413252777514`*^9}, {3.781241488131584*^9, 3.7812414888345757`*^9}, {
   3.7823538366307044`*^9, 3.782353838197014*^9}, {3.786412048484284*^9, 
   3.786412082921042*^9}, {3.7864121211015368`*^9, 3.786412126287809*^9}, 
   3.7869959934894323`*^9, {3.7870128012213755`*^9, 3.787012802627287*^9}, {
   3.7870128383759727`*^9, 3.7870128685131793`*^9}, {3.7870129888978133`*^9, 
   3.7870130116666317`*^9}, {3.7870136714933715`*^9, 
   3.7870136780137043`*^9}, {3.787013855812828*^9, 3.7870138963329153`*^9}, {
   3.787014236976088*^9, 3.7870143116357656`*^9}, {3.7870148162320027`*^9, 
   3.7870148275271535`*^9}, {3.78701496945185*^9, 3.7870150294212823`*^9}, {
   3.7870150669177666`*^9, 3.7870151449578743`*^9}, {3.7871016226861205`*^9, 
   3.7871016329891577`*^9}, {3.7871017667329025`*^9, 3.787101800125018*^9}, 
   3.7871020571807685`*^9, {3.787102440408989*^9, 3.7871024628124037`*^9}, {
   3.797119792760494*^9, 3.79711981921945*^9}, {3.7971198885540266`*^9, 
   3.7971198911315465`*^9}, {3.7971199430859013`*^9, 
   3.7971199850424647`*^9}, {3.7971200156523867`*^9, 
   3.7971200202137823`*^9}, {3.7971201130637217`*^9, 
   3.7971201228270454`*^9}, {3.797120205651984*^9, 3.7971202526098304`*^9}, {
   3.8018821682995577`*^9, 3.8018822586172175`*^9}, {3.8018823006768546`*^9, 
   3.8018823127819157`*^9}, {3.8020470874675164`*^9, 3.802047111858159*^9}, {
   3.803308396699509*^9, 3.8033084320825567`*^9}, 3.803352069452096*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyMnXdUFNnWxS8i5qyjmDHnETM6jGDGjDkr5oSKOSsqKmPEnBUz+hzFjLHb
jBkk5yZnaDIiyoc0dc7unuq1Pv+Zx2+dd/rWvbtO3dPVu6rRjCUjZ5cQQpyu
LIShgH8L93ets6qMxe//aXdii0LCTgM6vXY+NKyI9zF7bSFx04ZfOm2paFP0
d7uBzEfX21nDqMnCor8vTmN+M+pU/KNlK4r+frWeedu/Mq3SRq0v+rvhceY3
iuIdNPEezPc1a7D04ql/iv5eks/crcH2xBFu+4r+7t7yDfFGBuUHTKh0oOjv
7f2YJ434/f8o5qOZb0zd4aMadqTob8/9zMv5XbT7u9yxor+X3mS+v2g8J4r+
bhbMvNXk/S+zWp4u+jun7FviaS3qWalNzxT9faLeW53xny36e7AZ80uFn+p3
0bno7+9zmDcuOq7zRX93WfVW57g0POcI805F/y4W/T38DXNHx1Z2fmsuFf19
JpP5q6yWhUdwWTMPTd/xOi6MThnT92rR34emMB9ZdAAuRX8v3M785Inf/64V
/V3rAfPnzc8ED5zzv6K//fLeWVAc69C1oKCyUuKgQ2fboRkKiYMOLfe3TCAO
OlT+9TaSOOjQ/ufNMOKgQ/ulZYKIgw7trc/4EAcd2p8t70UcdGj/RztP4qBD
+wvtPIijDkOWfyWOOry/6hNx1OGzTh+Jow79Dr0njjpc3cGdOOrw+613OuPX
6HBu/lviqMNTSW+Iow7TTr3ROS4NX/rrNXHU4d5WzFGHAQteEUcd3n7yktcR
dNi+BHPU4aTdL4ijDscYMUcd3p6gLOaP9OjwEepQ9WbID4oHHTq/3ppOHHX4
yDCJOOhQabg2hjjoUNmqUyRx1GGYeyhx1GGTP4OIow5P7/cnjjqs2NqPOOjQ
fsc/vsRBh/bq9d7EQYf2V856EQcd2ptv/UYcdGi/0MmTOOjQvqWZp874i3Ro
H/XMgzjo0N7EiDnqcO+przrHpeEXX34hjjpUnPlMHHW4/tgn4lr18MpHXkfQ
YRuXD8RRhw2NmKMOBw99Txx1WHmGu0Izvlf/0aHEQYcehrcEcdChyc8z2ZQH
dGjTvX4acdSh16pE4qjDkWtjiYMOLY/7RhAHHSodr6mIow6HdA4ljjo8uDuY
OOpw/8cg4qhDxcgA4qjDM1b+xFGH79J9iaMOZ3r4EEcdLp/jozN+jQ7feHkT
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
zvg1OnRsy34i1KG7Q4icT0pYGYXoHJeGu5RjH5xWPbwfKOeTElZbAuR8UmL8
TH85n5Qw7uAn55MS4xf4yvmkRMudPnI+KRE3VdqXqvT0KVo+KbFT3iclBsj7
pMRbeZ+USLCR9UmJZZcziaMON1mpiaMObReyHwp12HROPHEtHb5nfxPq0Lsi
c9Rh/nn2K2ldl0+x/wh16DCQfUaow/wW7BtCHT59ptIZv0aHNVoz19LhQfa1
ae0Py4fqHFexPkUIcdSh4+Eg4qhDx0GBxLV0WCuAOOpw3ic/4qjDNZm+xFGH
4/N9iKMO/e9JdTJcz3VZyycl9PikhB6flChvJOuTEiPtZH1S4vr2LOKowzrp
7IfSui7vZj8U6vC0TQJx1OGGW+xvQh2aJ7K/CXVYYzr7lVCHr4ey/0jruhzP
PiAtHbqFE0cd1hsYrjN+jQ5L/sv+NdThvE1hxFGHLimhOsel4WZeIcS16uHw
YOJa9ZCu41o+KeFyMYA46jDO3J846tDF2o846tDlb1/iqMPxH6V+J1JPv6zl
k9LiqMMuJrI+KZF2XdYnJUrZ5cn5pMSy8dnEUYdvndgPpdUvH0shjjqsNzCR
OOowyYH9TajDpIfsb9K6Lldh/xHqsJ6a/UGow6br2QeEOvTuwX401GHJN+E6
49fo8JIJc9SheTMVca3r8p0wneMq7l+2hxJHHR6PDSau1afYBhHXqoelA4lr
6XCjP3HUofsqP+K6OpQ46rDMdm85nxTsD6P+o0MZn5TQ45MSS61kfVIib/oP
+lzUYf+GOcRRhy+bpRNHHZ4+mEpc67rcOEnOJyUmD04grqXDlexv0uqXb7Pf
B3W4x4H9QajDWb8iiaMOV9yMII463NMxQmf8Gh3abg8njjr8tF5FHHXYto1K
57iKvz+sGUYcdbhmcghx1OG8V0FyPinR0jyQOOrQf5s/ca0+ZZQfcS0dBvgQ
Rx2u6Cfrk4LvbWL+o0OJow5HyPukxNxQAzmflHg+IF/OJyUuBOXI+aTEjDvs
h0IdTrRg35NWPUzm49LSYUn276AONzRnHxPq8HQ/9gdp9csVYoijDm+siCKO
OrxUI5I46nDDwQid8Wt02DQ4nDjqcPIrFXHU4dNFKp3jKr4u7wgjrlUPr4cQ
Rx2WSQoirvW9TZdA4lr1sKM/cdSh41Nf4qjDthayPinxLVTWJwV9Stx/dChx
1GG8vE9KPFok65MSBxv/pM9FHZ7dl0scdTixG/trUIcnb7K/CXVo+z/2MWn1
KbfZ74M6LPmRfUmow5JfYomjDk/vjCGOOlwRGkUcdRi8KJI46jA/KkJn/Bod
ZjZljjoc8kNFHHUYdU6lc1wa7kjPx9PySYkyn0KIa+nQP4g46tDdP4A46tD2
iKxPSvw6LOuTEoNGyPqkxONmsj4p6FPi/6NDiaMOJ8n7pERGdgk5n5S4kPGT
Phd12LP7d+Kowx332Y+DOrxZi/1NqMO2U9nHpHV/eST7klCHK2axb0hLh4Pj
iKMOP+XEEEcdTjaPJo46rPc4kjjqsHPrSJ3xa3Q4a1oEca162DicOOqwhlKl
c1zF/Ut6GHGtPuVOCHHU4Z4Osj4pkaCS9UmJQf+T9UmJ/s1lfVIi/aisT0qs
6izrk4J+JFFPn5Ko/b2NvE9KKNbJ+qTEhye/6HNRh12D2UejpcN27NNBHTZe
z/4m1OGQUuwDQh06xOv6iYr1mZFIXOt77GdxxFGHUZNjiaMO9+yLJo46nPU9
kjjq8Mb0SJ3xa3TosCuCOOqwQtdw4qjD4A8qnePScOOQMOKow6gC9nOhDqdW
kPVJiStvZX1S4nodWZ+UCJ0i65MS+67K+qRE87ayPinoR5L09ClaPikR6Snr
kxJbvhvK+aREzPoC+lzUYY817LtBHcacyySOOlwcwD4m1OHhS+xLQh2+XpVM
HHW4Z00ScdRhUrN44qhDh4exxLW+x/aJJo46rNEmijjqcMiuSJ3xa3S44lIE
cdShQ4dw4qjD/EcqneMq3h9uCCOOOrwSLuuTEssyZX1SorelrE9KjO0j65MS
++bL+qREhLOsT0p8qy/rk4J+JEVPn6LlkxL3N8j6pMTt5bI+KdGrjpDzSYmE
iuzHQR2Wq8h+KNRhuU7sb0IdfqvHfiLU4aW8ZOKowyGZScRRh0Mc4olr6bB0
HHGt/WHlGOKow6ShUcS1rssXInXGr9Fh0rUI4lr9coVw4qjDIdtUOsel4e73
Q4mjDg96yfqkxNkVsj4pcXKprE9KtB4o65MS+6bL+qTEg4OyPilx9x9ZnxT0
I2o9fYqWT0oYNZb1SYlr8SWJow5bLefPRR0+P/NDIXHU4YKVWcS1dOjIPibU
Yd4M9h9p1cOVKcS1dDg3mTjq0Ns/njjqsMLQOOKoQ/O/Y4ijDqOmRRFHHfa9
Eqkzfo0O8w9HEEcdjn6qIo46NK+r0jmu4t/bHAkhjjr8MFvWJyVe3pD1SYmp
G2V9UuJyQ1mflLh6TdYnJQb2kfVJiVtlpX42Qstnt7a7lMfVonzI+HqXpsz7
zU0q15Tm39Vi/F2R72Q94De3rrruF3F8Tl3voVnEHx/7K+Z+zKSi/HMvqImD
npWfw5KIw3gsT/lEE6/49U1V28fLfnP7vRERxFHnqs3hxPcW6WRtEffbGkZc
qw6HhRCPXTbq+D/KrUWfe+BrAHF8Pm3nOD/iY4/8XXn+CMei8afk+RDH54Va
1GC+2CZxSPOle4s+d8K/XsThPLJ8aMTcNcqt4+fzTkXxjfp/I47PMXuW5En8
0c9PLXvc0/DsI8zxPR3ei5jXtvKKLbvqcBGPHuZBHM9Hcewr8Ra/5XPqaBF/
e+kLcTxPG3VlnnKgQD0w53hR/s6/PhHH59sXLJG40uLlmdZN+xyfXZQneXg6
cZMinVgW6a2DVymllEfeZ6pEHSrnjGF9bqvU6c/z208VfW63OR+JY90YnvyB
PrdGWuCs+XfGFel/jvo7cXw+vI1TJuUpyHS7kpaieS666Z4PxLH+VLbh/Kjz
mg1Tids+Su3eoMTSIv5kAp8XpcKvb107VvMc9ekB73X0o+EWp99THnxPR2JO
HPHkylYnxkSuLuK/RsdSHk090TwHe46HO3F8PnbJFe6UB9/30XNsNHGNPrcU
8fDFkZTH8IzfQ7cMTV3d3o3zY131r8v58XrkUD+ceH2jKf/+WXpnEffpqqI8
j4v0r8njdvmdjv41z+veuOQd5cH3MZ20DCXe5MKIm3mt9hTlGZcWTHnC19W4
OSD8QlH8t69viUOdtz+x4y3lgfPaPnN6EPGe7nMa9OqiOa/b3QrkPBmJNotb
aJ7PfDDnDXF8brPBgzc681zs9wwMIL7jWnjH1A2a833PLq5jK+q0mt7ITvOc
54sdOT9ed9Zmv6Y8eL3e3Zrz33NumNfxzKEirmziz+Mf1nVQVOSVovzjFr4m
jtevm204v5b/JdaXeN+ZfzTZ31ZTZ+6u8aU8rWY7NdxRSXO92//tlY5uNfzT
tVeUB+vShQwf4kN+qezUI4vqklg0m+uzVdECa54bPKAf54frqf3IWpwf9yFb
H0u/k3G3WDc1v03EtxlF+u/2NYfyrOwT/LF+xvWiPMeOviSOzyV2n/SS8nz7
o5tfxOEOv7mbso2031PqqXvuWPfc/I+UoPhgpe+JIREnNfrs5U3jx/c4zHX1
os9dPGhdZL1No37zeX5/G1B+fI7TvPZcDyu+HGOUcUNTP/s7eBHHujdsOOeH
uucRXTGD+NGi8S/+zdVLu3D9H33Ro/b5TE2ettU4P+7ffNy/UR6oe5ZND6cQ
H5a39EXpNquK4l8fTqY8mv9q6tJy22/Ese65/PSkPPh8yMQmCcQ149lUFG/+
g+ttpNmllsYBmjw/wj2JY937quT8+ByhT4bRxKNXbBic+XR7Ud12XBNFeXYW
ne+a+nZ4F+fHundiIOfH51U2co4gHhD5sPLXiF1F8VbmEZTH6eXvAqGpezaC
82Pdu+nioTMPmue8KWJUxE+Na1VjwYH9RZ/rcltFeUKn3Bxh5KvJU3+uB3Hc
J18x5vz4PrJFuWHER4/JNr/UT/PcQlv3MMrT3KLVnLv1NfUtx+0rcax7Rq2+
Uh58Huzyppzf+vvCCpNfHyziFjv4euFmuvPysm1FdU/cufaFONa9nVW/UB58
bpjpgmDiNq2G5T98pnmu3dUWwZRHVCvx2OSjJo+B8jNxrHuXpn6mPPheoX/7
BhH/34KX6qM3NfXQLDWQ8mT/noYsTZ7HJTg/9hGVj3yiPPj8KNVHvi60tan7
JG1zUX0TSxvyvg77jh6HPlIefXWs6/J1Rrk9i+qV5YBtARSP9Uq925943f3p
MzMXaPiKpczxfTQDajG/ODvb1f2gpp6cTvcjDvXE8sNK5kUfO/lcUfzsnszx
+UJpW3yJv/a2O7H6uaaeTFrKHN8nkmXGfEyRbjV1YI0xczx/K1z3Id6zaIE1
52OnTczhfFQOiefrkaO7Xe/TDpo+tOpL4PB8y3xz5n4zWy3s91HznLcCY+b4
noga57ie96zuLwyaFOlfWXYtc3wO4dhcrs9+z5ePfrJTo+eCMOb4nMy3e7/p
zLPmOf+TljFHfYb+wTxyw8TrbyoU6dDSI53rHj7f1WeDxL0tyhX3uQaFOpy8
M4/42OI+t5C7uBwsq5Q4XGeNoyNKE39U3OcWxnuoOpcgjt/bFLQSxPG9FXFL
c+lzK3Cf69EmKpM4XNc8gs9kEN/Dfa5T5u404nCd8vD5qiYeU9znGvx+D29U
EnHsc107JRIfw32uqkd+HHH8Xsi5A/NF3Oda1j4eQxz73Hwj5tDnKl3bRhPH
5+10DYsiDn2uyngjc9yvNprI3Bj63Cm1Ionj+wFtL0UQhz5XWVCPOT4/yicp
nDj0uZb9LJjj881OG0jcH/tck3WNC4hDn+u0xlna73nrqZP+Wt8TNqxdjuK3
cp9rc3CxisaDz1Vb3ENFnwt9rs0kw1KUH99PevuKAeXHPjexJOfH51WmRYZR
fnwvRlPXPOLQ59rsaML6hz5X+Wt4GHGsz9fqcn7sc/2WZBGHPtfyZA6fL9jn
epiHEsd63jIlhPLg90V35qYThz5XeD3g86sE97nKc/8LIY7PnWt3mPPjewln
+CYTxz63XS8+Tx9xn2vftBrnx+cozo4Kpjz4fdSwQwnEoc9V1lgST3mgz7U8
3SWYOF5fBuUGUR7sc4d3jyMOfa5y4tlYzsN9ruWLyUHEcb83u3mQzjxrzmuz
vBji0OdaWt3jeoJ9rvPxQOL4vNzBcwMpD34/1nMB54c+136yA9cl6HMt930L
II7vS6p+LoDy4H7P8kAUcexzE025XmGfe9WS8+PzzFubcH7c73X5GEkc+lxl
1HCue9DnCucH/sSxz9110J/y4Ps14j9L9TAY+1znSrFcH6DPtexYkfPj+ybK
qfwojy/3uXEjn0r+EX89dU/L92Syx6QCxWOfe352BI0fn6+bkxNOn2tX3OcW
FP7rml6W8uP7LC4ZGlJ+6HPtq33jeo51b9B1zo/v6dvyPJ/48eI+t/Bjv16b
9YPyQJ9rmbWS82Pdq2/B+aHuuXo3yiEOfa6TakI25dH8V7MvXanm+o997t9n
VZQH6p51jfAM4tjn9vnB9RD6XPFxB+fHfe+ExZwfnw95rKmaOPS5zhbLUikP
9LmWJy05P95/EVU5P74vqcfHJOLQ5zqPM02iPNDniilX+fqC93F6tQzTmQfN
fmblgATi0OeqZmbFUx7scx2fhBLH7/dWDQ6lPPgc4OPpccSxzz30mest9rmf
4/j6gn3u420hlAefW5g0nvOP4D7XfmpYLOWBPtf+dT3Oj3Wv3b1gygN1T+Vv
E0Mc+lyTX+243mKf22U5X7/wPV9fOnB+fL7xwH3RxG9wn2s5ZGg05YE+1/5i
PF9fsO49Oh9EebDPdd7CdRv6XPv5AzgPfo+nSgmkPPrqGPS5Nh8HRVE87tPW
noskDn2uzZHdzPG5uCeGMoc+17JdR+ZQT0zCgrmeQ59r8+ouc6gPJmM7M4c+
16Z+S+ZwvjtPKcEc+lx7pwSuY3D+qv4+zxz6XNWqLczxe6c6Jsyxz61ZEjjs
K6Jucn2APtfy3BHmcL6YOAxkDn2uzdT2zPF7nv6vuD5An6s8eIE5Xse9e4fp
zLOGhzVgDvq0XPSQ6wP0ucqWu5mjDl0qSzzCYjLft1W5OEk6jMDrqRZ/VtzP
/iooCGuZWJo4XB/Nui03Il6xuI8uvK7FPjxgQLxScT9byBv2+/KDxoP3bSt2
zCO+r7ifLYwPW7gxhzhcj+xn7M0mHlfcz/6+nrZfnkEcri+mzWzSicN9W9fP
yWqdz9X0s3cXMZfu2xbmt5j4LoU41H+TY5WZQz9rcjs7ibjW+5qPMId+1nll
LeZQn23UiYnEpfu2heM5V214AnHcZ/79Ip449LM2/n8wx/ppGhRHHPpZm0gD
5tjPejyMJQ79muqPP6R6ruUnsvOpIekhCvtcqIcReurkf9/3JMXD/VzVkRI8
HqifqnZveDzY59arUp7y432NjftKUX7oc1U1HGIoP97XaLqY80NfrywIMaQ8
uH/rlBNN8dD/OvdI+0X5oT81ObWc47HPnXSSzyN8rq/XAI6H/lcMfPyd4uE+
rKpXI47H+7kf3Pm803qPSQ2Ox/73/oUsiof7sPbjP0RRvNbzfObzeQr136b6
HY6H/tc5dB6fv9CfOk8fwfH4noW4aWkUD9cLy0EdOR76X/tmLny+Q38qaqsi
KR773EjvVIqH64vzgrccj/3vn9U5HvpT5efNkTrzqelzzw7megLXI9XNBRyP
93kPZSbz+Lk/dX7fnOPx+7Gypzge31tUugbHQ/9rOXUz1yXoT1WrkyMoHuvP
rMlcr/C9My2jOB773z9iuY5Bf2oZ8Zzj8X7ukCUcD9dHmwdPOB7v87YI4roH
/anz5BMcj33u2b4cj8/b35XF8divTXss1R8t/5p/9Rip7sVYvOU+V6u+yde9
/75fTIqHPlf55X0cjQf3jbn0e7kYC9viPreEEMamioqUH+qey5JTpSk/9rk1
G3N+vJ/SNJuPd03x9wAGhTywaynKg/dnVZs4/nBx/1sYbzK5Cl8XNP/V9I8j
WnA87hM80/NpPPg7vc6eMRQ/pLj/LczvXDXvB8VDf6p8/ZDjse6FZ+dSPL6v
pMY5jr9f3P8W5ldWCcyheLwPu2sxx2PdU8zNpHi8v1NgwfFR3P+KvpEZFA/9
qdLDgOOh7tltGphO8Vj3PN9FU7w/979OlxLSKB770xWHOR7qnl3QGzXF4/uA
UuZw/Enufy1zDnE89qe3zTke3+9wKTOV4rV+l1KH46H/dQ57x/HQn1pmZUZR
PL7PrkdPjsf7U1ODOR7u8yqf3UiheOhPlc/fczzWvZ8pSRSP92cv1ODx431e
47scD/2p5aBKHI/vkzqVn0jxWv6LGI6H+7wm425zPN6fjT/L+sHf4838nEDx
eL+slifXkwvcVyrdbeKJ66tjXeB+7pr9CRSP9eq9D+eBPtfSQ8Ec37vhuIk5
/v6taVnmeN+2ZiiPH7/vWjSd+SvuZ+3/GMMc39NRsSPz0dzPqt7VYY7vTagQ
yHUM+9kKz5jDeWrT2Y459LP2SycAh/OuXhPmeN9WVGOO76NZls/rDv2sSQs1
c3w/yJHGfFx437a0FXNJ54X1UFW5WoLOPGv62Q6bmEu6/V0/O89PJg79rMmQ
rSnEJR0WxosXaqmeJOB1dt5fi6X9dgL2uaDDBD3X0wTqcwv7qcq9y5QnDtdH
K+/9ZYlDnzu37a+SxKHPtRh1UxCH65f1pnUFNH7oc89tsconDtcju82mP4hD
n1t56K4c4nB98fAblE0c+9yTJzN1PrfoeqE2Kc0cfp9s4+uVThx/5z98IXPo
c63zPqQRh3puev4wc+hz7U2GMof6XCWzM3P4fbLH7OG87vj+x79KMIc+17Lv
4FTieN/2QkXm0OeqhrZOIY7f+x0PSyYOfa5N65FS3dbyo9mMbCHpIUlPn5ug
p07+931hUjz0uTbqNjweqJ8mQ9J5PPi75aaVK1J+0LPlsvXlKD/0uSZV7ydR
fqi3KvV5zg99rqXTpNKUB+qwTXp3joc+17R1vxIUD32uqOWRSPH4/scDY/k8
grptM/QOx0Ofq2pAvokE7HNNGh3jeLyfm9mTzzuo8ybTnDge+lz7ssrvFI99
7qCZHI/3cx914PMUrwt35nI89LmWb8vx+Qt9rli9mePxfu7aED5/petIYX2Y
1qwqzz/+nnlhBYiH3xv/73IyxeP5fpSeV5BA153C/JvrJ6VQPPa5kR+4PkCf
67qybZrOfGr2Yzcmc7x0nfo9/ppBHA99rmpUW46HPtemTkYGxePv91b+4Hoi
Xdd+1+cWjpkUD32uSaPpHA99rnLdpSyKx/saf77l+oPvLRqRxfHQ5yr3OHI8
9LlOKWVzKB773KWDOR72e65zJ3M89Lk2TwTHQ59r9+RgLsXj75ZfL+F6CPs9
65wMjoc+V+lUU1p3Lf+jnUOgVPdS9PS5/31PohQvX/eStO7nrs9nveG+0Ws/
j0fqc3/vK5o/qET58fvqM9PLU37oc5UH53N+vJ8rBnB+6HOtNr0rS3nw+z1V
UjLFQ5/b0izSkOI1/9XUvaG3OR7qnptVoqB47HO3bef4IfB75ueTOB7vwxas
5nj83fLLfj/peLX85tc4Hvpcy5O/flA83oe9cYfjsc/9ozrrB3+Xcvsfnk/o
c5WLN7Ce8T5spX9TKR7v5567xecX7J9V/TqkUTz0ucrO/Tge+lzVw9XpFA91
r0qK4PqA92fNDTIpHvpcp2/vuf5An6vaODWL4vH3bNcbczzuzzc6ZFM89LlV
/irH8dDn2hy7mUPxeL9ghjKd4vH+bG/XXIrH3zPHL+N46HNVqSO+UzzUPadb
u7g+4/srm0ZzPPS5ro1sOR76XJNau/IoHvvcH1U5HuqeKqTZD4qHPtdpH93H
ScI+13lMHMdj3VvrwPH4++SSV/MpHvpckzGJrEN9dQz6XPWw+WqKh3pl87UB
c+hzVa1rMof641pTMIc6ozR8wuOBPlfZ4DJzrBuhQzgP9LmWYyYwhzpg7f2e
OfS5TkcKmON927Wb+DyCPtc6gN7/zr7s398TJvrxeQF9rse/p1n/cN6pzx9h
3UKf63G+JesNziP1P1dYV9Dn2k9rwXrA+7aW//C6Q59rH/iNOejcdNzlnzrz
XMSdemQwB906j/L/RRz6XI/r3QqIgw6t+reV6rmWP9fe4U9Zf67I/UPWnytK
y/tzhZm8P1fYyPtzhVLenyt2yPtzxQY9/txPevy5znr8uW7y/lzhJO/PFWby
/lwRLO/PFS31+HNHy/tzxQ09/tzMfrL+XHFY3p8rguX9ueK1raw/V0QNlffn
2uyU9+eWOSLvzxUmsv5cYRUn688V9iPk/blx8v5c0VbenwvPMdDy54qp8v5c
4TZA3p+b+1bWnyumyvtzxUR5f65YM1ven2vVVdafK6rI+3OFq7w/Vyhvyfpz
hd1iWX+u8Jb354okeX+ucLwg688V1hay/lxhJu/PFSo9/txcIe/PtYpk/+z/
x5/rocefK+bJ+nOFUztZf64Y30Xen1smRtafK1zJh6vlzxXu3WT9uYVR8v5c
9R5Zf66wvCDrzxXWk+T9uS3/J+vPFbnjZf25wt6T/bNa7+lzkvfnrkn3J47+
3CqhXA+hXxbqn+xv1XqPhhv7W7HOOO6S9+fa/yHvz7WfKO/PNflT3p8bt13e
n2uS6k158HfLpq/ZP4v3QcocfEl5sI7ldpH154qu8v5cYVxO1p8r3N6/oDzg
z7V/Ku/Phbqn5c+195b35wqz++xv1XpvSy1Zf669l7w/V8zR48+Ni2V/K9Y9
45vsn8K6FyrvzxVz9fhz3cE/i3XPuZ6sP1fU0OPPfazHnzvvEftPse65Wsj6
c0W6vD9X9JX35wrRWN6fe/wn+0+1niurjiIOv1sW1jNk/bmi5Sv2t2LdO76e
82Pds7KV9eeKO/S7Si1/rnBty/mx7lnTczy0/Lli6mFZf65ImiTrzxV2Zdk/
i3XPdRL7W7HuPW0v688VG/K5nuN94SoB7D/FulelO/tbse4dHxRKHPpZ4e0c
QnnQn+t8k/czWPfUJdnfqvVc/dHsn4V+VlhV4OsF/m7Z9MZH4lrvj7Zg3yvW
PZvqgcTRn/vpAV8v0J9rEsT7E6x71vRcES1/rri3kq8LeP/XKYz3IVrvC+79
nvLoq2Pwu2VxqTn7arFeudRgnyz0uUKZw/5WrD92h5ijP3fyQuZYT2xU7HvF
+7wOF5lrPV/Rk+s/+nP9nzPXet/uZuboz3WfxBzP309h4Ifl/ldY3WKO5+Oa
0szxd8tlgrlO4vnl1I859L/CqT5zPF+sDnE9hP5XBM9jrvUcZh+uP3if1+0x
c9Tz08keOvOs4WV6Mkd9Wl7l+gP9r7Afz1zrfcEDpHqi5c8Vo+T9ufYX5f25
IkzenytC5f259vny/lwRKe/PFa3k/bmijLw/V6jWy/pzxap7sv5cYT5R1p8r
buxMIA7+XDGjobw/d2Iv9t+BP1fc28y+NrwufAhhPxr2uXbJ7CPDOp9wlDn2
uSmtmGPdflCCOfhzRYmT7J/FOtzZmDn2uc83s/8U62qwFXPsc+PKsJ8U6+Th
9ezHwT53g7w/VyyT9+dCndT259aR9+cK27bs38T6+eku+1+wzx0n788VN+X9
ucKsO/s3sd7WqMj5Uecm8v5cEdpI1p8rkmawfxPrs7IZ+2LwvNhnI+vPFY89
Zf25om1T9m9qPbf5Hfsf8Twq0ULen7tstKw/V5Rcx/5KrP8mUzm/1vvBX7Jf
DPvcPaXYLw/+XLHhLfsfta4X+9lfqfVe3TbsF8M+VxXL5y/2uZYv/Yjj9aXM
Gj/Kg+e1+172W2Gf+1QF/lbocw8rfInj9Ui9wVdnnoufQ9WC/VbY59oEcD3B
Preklw9xvH6tOOJDebSeo7udfVjY56q3cD3BPjdf5U0cr3cO57wpD9YZB1v2
jWKfq/zF9Uerz23D+fH6aG3A+bEuOf3Dvk7sc83zuV5hn+u90Ys4Xk/VQ70o
j9b7dGazLwn7XD3+XJF56Rvlx+tvy7nfKA/4c8VweX8u1D0tf679bnl/rigT
wP5KrHtV/NjH9P/w54rL8v5c4b6J6znWvXkmnB/r3iZ5f26BzxRZf66ocoX9
j1j3chuzvxLrnmtaNnHsc0fXk/fnjp/P9VnrfZcX2J+IdU+1QtafK4atl/fn
eizg+ox1L/dPzo91z/1FCnHscyd78/MKsM89/kLXX1/83PIh7IvEuvdUxf5Z
7HNdO/HzCrDPdXnI9RnrnpVxgM48aOpe74rsb8U+95Mr+1uxzxWHuD5rvWfH
0J/yYN17u4v9rdjnBttwvcU+18qR6zPWvTWG7IvHumcfxP5W8OeKD9Zcb7HP
dbTn+ox1zyXdh/Jg3fM4xv5Q7HPNpvDzBLDPtTrL9RnrnlNvzo917+0F9oGC
P1f0GMf1Fvtc9wiun1j3nNZ5Ux6sey/ncF3FPjf3F9dJrG8uq70oj746hn1u
3+bsJ8V65Tae6y32uSa9mGP9cU9kXyf2uebXdX3lmnrSNoDrFfa5n1Yyx/qQ
343rD/a5Veowx/Pd7jH7qbHPdd3MHM9ft1dcH7DPLbOCOZ6Pxiv4fMc+d0hb
4HB+de7H5y/2uZ9KMNd6z1pbPh+xz50XzeeR1vfbBb6cH/rcYE/mWs+TNPfV
mWcNdy3DHPU5ZCrrH/vcS3WYa70/i567peXPFVfl/blaHPy5Bc3l/bn2XeT9
uZt9dsv6cwvuz5f351q4sn8QfrdcYKlkHy5ejyY/Zj8g/G654NZg9vHh9eVN
bfbrSfdtf8ffVqfofK7metH8C/vXwJ9bMHgx+86w/j89yX4x7GejxrDPC+u5
fxT7XrGfdRnBHOvzvAbMwZ9b8L4r+0ax3obuiSaO/eyM51HEsX5OXMUc+1mH
hZHEsR72r8Qc+7WSGVJd0n7f3+3v0vceWv5cqIcReurkf98zKMXj/dwdrSJo
PFg/lwWE03iwzzWW9+eK9fL+XLFrezjlx3pbcx7nx74+wEvWnyuS3vP8YP+7
wl7WnyucanE8ni8inv3sWJ9tb4dRPPa/XUNyKR7vw57ux/F4fgU/4fNO63vL
hhyP/W+p8ZkUj/dh8+n7c21/bt8gPh+x/t8oCKF47H/d3Ng/i/2pR3AwxeP5
m1+D/bB4vVixkuOx/w1eBP5W6E9P2wZRPJ7vzve5DuD1Jakix2P/6+jF9QH7
08w/AnXmU3O+N43juoHXo8NPAyge+99LWzge+1OHW/4Ur/Vey5ocj9evlkM5
HvvfGq/A/w79ae4pP4rH+sP7Ui1/rjCdyPHY/37y4HqF/al6ty/FY70a3YPj
dd9nKsVj/+u/mesb9qdJLXwoXut3y0+5vuH19PUjb4rHfu34NakOaPlz7ePd
ZP25WvVNvu79972WUjz2uafrsZ9a632OKyJoPODPtW8r788Vi+T9ueJpd/Yj
a+0zf/Dxwu+WxYQ/S1EerHtlRnE8/G7ZvoIXXxc0/y1+L4aPiuKx7g2tJO/P
dbDmePDnCuefeRSP/ema1hyPdW/3Dfbbar3fvATHw++WRevF2RSP/anrojCK
x7rXYz/7Z7HuuX4OpXj059bPZf8s9qe5v0IoHuueXyP2w2p9X9eY46XfLf8e
v9Nc9qtif+oyK5jite7nPmY/KdY9k+NBFA+/WxY3+nI89qc20YEUj3Wvni/7
Q7HuKRtxPPa/SmeOx/60zJQAise6Nz4vnuKx7qns/Ske7/OaD+R47E+tf/pR
PNa9wyaxFI91L3cWx2P/O96Hn++B/ek8d1+Kx7rXN4Gfj6FV98pzPN7nfewI
z9+AvnV8ex+Kx7pXZxw/vwLrXn6fSIqH3y0Ls+FcZ/TVMfjdsmhgyL5mrd+f
/OA82Oc2CGaO9cd+HXOsM6vecp3BfraSA3OsG2tu83kNv1sW1meYYx0wnsIc
frcsjLswx/PacgHXAexn3X/w+Y7naZVjfJ5iP/vJFDicd6pwPu+wn61izxzP
I/NufB5hP9vyPZ8veF40HcDnBfazuXmsZ63re4SvzjxruMc25pJuDQv/Otqa
fbvYzz63l/fnfkqV9eeKmFqy/lzQYYKe66mWP7dAjz9X+Mr7cwveKWX9uZsr
1JH154obzdg/iH2u6kQecbwe5U9nPyD2uR0ssohrve/Si/10+PvkpiFpOp+r
uV7sNmWOfW4HB/ZtYf3v7Mg+VuxzZxWwrxPrecc1zLHPdXuTSBzrc0dH5tjn
1u8STxzr7ZW5ccSxzzWfH0sc62e1qsyxz930Opo41sM4a+bY52afk+qP9vsi
TR6zD0u+z03QUyf/+55KKR77XLP2UTQerJ8p7yNpPNjnNpL354o/1sj6cwsv
8JGUH+ttNTPOj33uiOay/lzRdgHPD/a5d/9nQPHY587ZEE7xeL7412U/O9Zt
qxYcj31upRvst8U+92CIiuK1frfcms87rPNvX3K81u+ZR7LfFvvcB+04Hs/H
B3PYD4vXhb7JYRSPfa5DRT5/sc+t8XcoxWv9fu86n7/SdeT393VhETz/2OcO
usn1E/vcxnr8uXZjuA6AP7dgXKKsP1dUGMD1Afvcd21k/bmiqSn7zcGfWzA+
UNafK4zBP459bqN0WX+uyO/C8eDPLWi0U9afKyqcSqB47HOnXZT154qnaVx/
8DrYNlPWnyvm9eJ47HP/LSPvz+28i+sV7vdqT5L154oyF2MoHvtc8wPy/lz3
21zfcL83I13WnyvmlZPqgPb7SZuNkfXnatU3+br33/eiSvHY53aOjaLxYN0z
rxZF4wF/rlh5T9afay9Gyvpzhc1brm9a751fyceLfW7cKVl/rthwLILisc/t
1V/en2uZHE7xUPfs2xnK+3PdO3E89rl2b37R+LHPNf2lonise5vi8ige657t
S47HPnf+su8Uj31u39Ecj3XvRRqfX1rvN78RRvHY5zax5Hjsc8W0WIrHunex
HvtJcf/8ifYzWv5cEXiS6wn2uSXk/bnCtBz7N7XuzwpZf65IckyleOxz90yR
9eeKGwFcb7V+l7JN1p8rGpyE+gx97qp/Zf25YrIPP58B9/Pi1n/9ub/X957g
eOxzT1rL+nPFPdt4ise69yBS1p8r6lTleOxz9znK+nOFQ0YsxWPdM2sq688V
Ues4Hvtchxh5f66/iKF4rT73kqw/V7yewXVAXx3DPnfy0WiKx3rVtR/XK+xz
S9ZnjvWnx2n+XKwz+1y4zmCf+20wc6wbeX9w3cA+1ziXz1+t32k4Mcc+V4xk
juf1rNhQ4lKfm194nf2ZyccF/lxRS96fKz6ckvXnikOHZf25YmcLWX+u6HtZ
1p8ryjaX9+fe3ynrzxV9PGX9uWLfRVl/rpiZJuvPFb18Zf25YmMXWX+uvWgj
lC3fLa33bqmLxX5l/POSLxdapJrta7/virS+Qkj89/+Os3ltIfFH5zfsMj6w
3mKsfz2rBieYH+nwcuIxZweLZfXedRjw7bVFx90rLcyaX7OQ4teaeA66My2Q
8g+r1t/uwprdFlXbDIqcVeGNxaLyD2zKP3CxkPJULoxJoN+xC7Hte9TLsS0P
WFTcuKOn1YA39Llh8VeGTj582OJlje83qmx7Y1Hr1KXjsX2dLaT8dXeMHxG/
SUl5/gqc5z9dHLdY+OHknb0KznPsQ+uZc21PWawe0/ros/w3FqtfK3+sPXbF
QvrcvMMjB3Wr8IHyZDxOSrb1P2vR0WDzwsM93lqsuJhzuK3RDgtpPGUWnnhw
e+Q9yu8yZpx598bnLVKarz5Uee1b4r5D3QzM/S9YXDuzYVFrt7cWGy/OWfjV
0NlCGufiUht7tbl+mz63ZP/a73ruu2Tx9WKlis9zOE/Hnuv29Op7xSL0xP3E
6G7viNt0DRrRN++qxdrXH/auWsN835/mtQa4XrOYva35tLWP3ll8WhYx8N3e
vRbSPOQ+uzjn9jH2p0l6aPBu6egPxyMVEpfWd+C9l1eM1IGKIZv3btk93sVC
mh93Vd+0dq9eU7y0vsvrvRuxbocPcWm9pjv+0azTlG/Epfmvebbc17ImHoq8
jlNO3Bxy1UKaz5CybiV7XXxB8dL8dx92uJdF3c8Kk3/nrrJYtMdCmme3/LZG
7Xvep+OS5vnTyTtXSh7/QHmkeajbK8T32TF3xZtjD63bqq9aSPO/e2po731X
lRQvHW8vk9lja6a+VahiWzQe/svZQlqXVcZD+twecYHipfHP3tPh7fu9bxRr
tvo9j6pzi8Y//7vnjAMlPSheGv+Awlm6Muu1ot7Tu6/uXHaykNb3yrOaLwaU
vUfHJY2zuVGXruumvaI80ni8/+1ffdTGl8SlPE49ann8vP1CYWxndOnXWBcL
SSchz22thxo8p3iJ14ztUSoiX5qHR6STFfXevbj1KpG4pJOetRVnRONI4pIe
bly/vsDHJZS4pIeC3jdcnnUPJC7pYc7jjlNMa/kRl+bNv+IVq+wkb+LS+k4a
5VujVWcv4tL6Ki/OKeji60lcWscYy3PWfvc8iEvr1TWzdl4lx6+K0vvM2lpM
fEqfW/pwvb8WVPKleFqvtK7fKqZ+Ji6tS0eDSUeDdn4iLq3LQiPTBZ1HfCQu
rUu11PQFjXt8IC7N//h1C84/6PVekRnrs3Xk4Gd0XPesu+b2aOCl0FwXX9G6
lCjcBjbNVhOX1iXq4eD6i2fFEofz9ITlqwji0roEtX/9IbuWiri0Lr2XOpuV
WBlMXJqf/OxrrbwDA4hL65K/9bmJs7uf4vuEybUX9X1H+W+13PvV90W4wnL/
HMdeLZ7RfFr3OdPCuZQH5ZGOd1Wwf3jHpr7EpXXcN831WIK7N3FpHaeeuPmp
lYuXYsG/W/O3H3pN4+x279BqB49Aipc+18PrUna7u98U5x13DCr16hmty5n6
hzyqLPtE8dL6HviUPL1rsCdxaX2t3QwNVjT2VFQLrlCpRed3NA95RhtfpPbj
z5Xy/1xzxeXpej5ead17NVXXNPr6VWEz0fNq5cLrpzQPfePdOrw2l86L91i3
d6zdkaGYVXSd/Ur8w9J6MzvdzKJ4SQ/XW0TWOpOaQFzSQ499kaprV6OJS+uV
U/72jJvnIxRz8lddaxH5lfKcNvzn6KMfyRQv6WR0+DXXrVtUxKX5H9Z43Z8B
FUIVK+v93qB8pc8trCfxdZrFUbw0b2tf11+aeDtIYaN8udnr+mcaz1i/ZaaX
60QpSt080bp03mtax7Qnbk5tznhRHmnejjgd3TnUO4C4pJ/t5mv6txjkr3j4
4R/jNRZfafyT/74xtdmQCIqXdHXBzPr06xJ+Cs/q8TOSvn+g46qza9z+FYX7
2Lbtnv14u+wd6eF/P3fdvtCSxyONc/rEsDcTkn0UD65f2x1fuN+R9PBkdK/5
fy33pHhJbzdHl6rSM8+buJS/tOmCxbtbeivW9l6+Yu/JzzRvXePK5x1NDKF4
KX+ZV2dOXrHl8Uh6q/Pm0Z9pb74p3im7VVq17CPN28Rb70tf+Srt6zxIV++X
1hvR6FWWItpsX6RZJS/iDd8tNTa8k0Pxkk7udHeKm1A6hbi07oX///V3u8cp
Fn3PX/v01ldalwPlG1W2GBxE8dK6uw9o7jQiPEox53ZK6XdNvSh/vza2X7bP
U1O8tI6bdvTso9oZQVxaL59o22pTolWKRS9q2r6o6UXjKayfHh03JCjGx6gt
3th+pXU/6t4/au2bAMojzXPzFMcn1zqEKWYeqpFxusw3GucfcWfWTTSLUdjW
EAcW2Xykda99suB6itKX8kjzHOo/vfzsJiHEpXk4bHRl5eWlQYr9hepM/faN
juvNU5sGwa2jFLs3v/v30pGvpJNX01O3nzzvR3mk8Qc52vbNKRuoqPfs6qxW
rjwP+TtHTxk0MFxx8FCTGe0CPpOuWr6aOSZV8Dil8f8aF57yOcBfUb9qlfTh
Nz+Srk4MjHOuOtyb4qXxXL/9z9NPX3k8Uv4vh1vGVUj0Vdh52yavFd9oPi0i
9uXOpPd8eVB+w3bLl11s4Ks4l3Wy94RCnUi6nfmu5RfzgT4UL/GPxyouSJ7v
ozhafXiPxUk8z25vDhx6Vi60uN6ybmPM9i16/zqHuKSrL1v6Tvq0SE0c6qSH
el+CIv5WB7uq5b1ovaLfbK/SsDvnl/Qwp8Sz6oeTY4hL61i5RulBq6dHEZfW
xfPxC+8upyMU06608ToS/43W8W1O6PoWJ4MpXpq3LKONvVZ0DlfM//vuj/mR
vF4rc03HXT8bQPHSPOy67nOtq7GKuDT+Y/7OTZ9PDlXkptfcZfTrG63jpIh6
njmDAyme+p3clfmqgGDFMHXgscmRPP7k8N1Znb5HKPLz+0a9b/iN1r3v2Cnm
uVf8KY80TveJ9+Y/PhSkePnXX20nlfOkdXd4/aHipExfipfGM2HYqj7TV/N4
pPwVr5wPzNjGxyvlUXu7e477n7/C8Ka9d1g5L9JJTPLOFVc/+1G8xM37L/2V
kuSnmFP0z5d08m/hPrb2ye/EJZ3cdO1uWvlpGnFJJ4XXZYe8B0nEJT08Pbpt
0g2vOOKSHo7Ff1gRXTuGuDSfLar+XcupSxRxad39D3eZfet+BHFpffP3NEwr
tTOcuLS+rToX+FzfpyIurWOvwIbJEdvCFFubVPq4v6YffW5Ny/dpnffy50rr
VdDWaETLtqHEpXXZ8u3eCE+DEOLSutRObZVZrWQwcWldSu2cMO52kyDi0vxP
fddyWDebQMXPtfedvUf60XE96byhbLWU8OLrVwDuc/7wGvKDuLQu4/zrucVm
pBOX1sUp0qz55ycpxKV1SfO+P7nO6QTi0rp0nnLiz3tuscSl+dkanLZiils0
cWld1ryu36FSkyjFz7Y393S9EET5gwv31Y4PEhUeF2vP8BjoR/Np4dGi83xV
KOWRjnfIm2pV50ZFEJfWsZPvhb2fwngepHWcZtr+eF7ZcMWDsb1+vRwYSONs
X+fQojflYyhe+tzsuzUctoxTKVpeOH/whZ0frcucDnkfjVODKF5a33WufzZv
tz6MuLS+bcob/uW1OlRRbnGpndVPBtE8jPM9nOUneH6k/ClXx4TdORxCXFr3
ZOM3tZ09gxWm/8Z5ld4RSPMw6pFpf5sBkYrPn37/C6Z1Hz9mzKM+kfmKO0aT
XI2CwogbCvHg7qhfFC/pYcfnLX1v1c4kLunBQIhPJiPVxGG/UeX5kCRFp01P
vA+lhVGekMtnbee0zaJ4SSdj17Q2b94nnrg0/33TEs7/0ypWUXjdKNwxhWF9
cOzXKU1h6DfkiOHGQFqXsdGWDQ/cUlEeaT5dbrRq03NLtMLUprDW+4TSOFNr
zdjeZWIyxVPfNKWmY1DnKOKSfupXV682ax6pmBzdt8LTc2Hcd+/psGPOgQTF
0aOhG2c+CqL1fWpoED+vPI9H0tvv490xMEIR98+KDtkbQuh4q/WInrFjbSzF
S8e1rFHUi9cHwxWTfbzfZF4MJD2413wRfsQmlOIlvdm+c0vck82fK42nbOL2
S54rVArz890f9/8cSvPj2mrhh1HjYiheyr9RVK6aXpLzSHpbdnPmrAnDCvdv
qrql/3oUQvM27YT9r5eHpe+fVai36HYzfhGHOuOyxTRLsfx3X7MznOJN3i31
XvS6gOKh7y57oUcacWkdP7/43DMkPlnxYMMv81C/MFqvdx0MNmeN4fFI63Vj
p0+fes8SFHfH52ybeTCcxlOm2r/O7l2zKV5al+rGTusf7IlTtF2ee27GgzBa
x/PLvzwymhepeFjYPdrsDsf9+cdu1dIpD1x3Lj/3iiEuzdvaMa19g9ZHK7qW
s3fv6hpC614pu6Plx/hwxZ2Bu9YOKxlOxztfUSVxLT2vW0XHO/Pm4mG2s6MU
bxSRY799CCM9nDugNjlTN0JhVaja1fPDaR6qbNyxaUpBIuWRjqtf18aTOjhE
EpfGs+WPlC+PPkYo3r+vevtoUijpaktw0xbm/cMV+0JH3akxnuetRob7kPiA
OMojjWeU9UyvWqYRiv1lynxv4RdCepveIW93nK2K4qX883xvLnlyO5y4FN+2
/+ZrTgPCFWYLHmSbi3Ca5wdXbswPuxhL8ZJuM2ZvK7U/XaXwWDf0/I1CnUj8
VqZ348vhKsXHf1rU77aK16W+8pzp5gCpDofjfia9+7cCRZafsZvj9nCaf49W
U5b9cOJ4SVcrTDx7POyRTVzSSZTZvplWtdOJS+tbttuPNw9WpSpMC3exH1aE
07oknl7+pcT5KIqX1nFvh7fGe1slEZfmP7Xsm4VPo+IV988G/Ly3lNex07hu
LS7S9408bw7PnW9NqB9HXJoH9/3He3d8GqPYuLb8mxKbw2kdHz9ftmzTBM5D
+/mkyu4jnaMVmzY1To+qHE7reOlL2W7jHCMULdckD76ZxuP8dWvvqCvtEyiP
dLzH7QeLZs+iFOFn6h9tt53XPTLzyur9d8MpXjquJjPb1fluxPMjjXN76cTG
6xfzOKXxLJgxMNEgN0JRYpxlwpLCdZT0MH9b83GGvSMoXvrcelZPFnU7wVyK
N1xiUWPPaOn7wEjSSWG9Glf6pFDuW3pnROOGkTQ/wYNsPep+iKF4SSeVm04M
r9Ujhzh8D1xpS2o6cUknrz5vMkhap1a8t22/bValSJq3Wzt9DDMCoyle0smT
jlMm+O1KJi7N/5Fvbd+Hd0pUDDNbfmxY+Qiaz1p9B6S6TImieEkn3WYPPTHK
Jp64pJPn1/ya/p0bq6hZ/fLU08aRNP+3Xg45uNOZ80jzULP2wqqrA2IUtYyf
7t50LYLWpfKV8xNv+UUqXlTdGT1gN4+zV2Kp6okbEimPdLwZibkrx+REK9Z1
e9j+XYMIWi/Px2dzPcpHUrx0XPHVTxY07sfzI43T42KloXMf8Dil8SRajOv/
57AoxSl1wLayhesorfthZVDOCG/OL33u7ZnV1v1tyHmk+OdBlVsdz49U/Ho6
0XrBNZ635XGPbc1HxRVfZ6NQP3/69jFQtiw/JPGJWxTNW9SrySEvDTle0s+M
5SZLK5vmEpf0M3bMmPsrn2cQl/RTrc2gbVc6pylmlnpf79fVKJrPPT6vEj4Z
x1K8pJ8ZU02XREWkEJfWxWjZu0PlNyQpNtUc17+uZzTlrxF3ZmKl62kUL+mn
9MZe006dTSAuzUP5uL+uV+sYr3C90TO3y50oWpeS74OnDsyOpnhpHjrbJ3j2
rR6nuH17TDPjPlG0Xga7b++M/ytaMel/JpvDm0bTOBu0+KDa/SqJ8sD+f/yz
Lny8kk4+lPDq0X1vDHFpPF+s1qgdK8YojLpte1X2czQd11jfw122z0qkeGk8
Lw8s2mPwLFrRZdfy+hcL11HSw/7l9dd/eMmfK+mnW8JkYWfAnyvFt5+X/rdh
nTjF8bGZ8YZ9omneAuK6t9+7J764H4wh/RT2ax1nxxooA7a289+aHEu8cH9y
Y83mEsoXl6IdxoyMofkMuDB08zhLzoP79hf1vxOXdLU/0qxatZ2ZxKV1L7Xu
aqVZ8WmK2oopCe9zYylP6sjhNW+KPEV+4S7qWK8Ymv+0/dkD3k6JozyS3nxf
JTRyqa1W1P/9tXdaLO7/n4b2yaJ4aX1PHcjs5fU8WWHsqg67tyCWxtOsetzP
kEnpFC+t1+k7V9rGBCQSl+Zzi7LB8osLExQD+/sf+Do4htZ92OkmCdVmxCpu
LmtcKvRrLI3zgpn1053/U1MeaT4/jZ3Rp5l1vCKz72Pj9c95nOqTS6bVNEqh
eGkeppT488Xp9TwPkg4fVqvrXS4ylrg0nqEjrS8O2hCrOOtRb8rFObF0XJXz
tv6yPZtE8ZIOw/7e3uBdQqziS5OKD80L113Slf2C6We6102leEmHle84vWl8
NIG4FG/w9KeZzdpURQf13m1ngnnerk89NPyPt9LvOePwe++/5m4vodTs8+NR
h/VvGRsqJ/Xc3CA1MZbmrfZx39XTtnIeST9Xz+4517BkHnFJD4X6iGs4KIu4
tO5LsstX9T+RXrzPj6c8ie9z2x1V5SmOds8f3iEolua/o8Exy0P/xlMeaX2T
c1dOfvxcXbzPj8fvQwY1L5FN8dL6trI/2OTizxRFXSPLWXX9eR2PmG49NKBP
XPF+Pp7G6Rqtevu+bAblkdaxQ1z5xy+rJxOn831mKVP/K4mKyLClbeZHx5Ie
XHe36nC2VXzxPj+exl9CCOfRw9IojzTP6096f7lwMEERFeU4fvCqWNLJ567N
7z4Zl1C8n+fjcvcY1iChdyrlkeatsUOV3o8/xSsGlHTIP5TI+hm9eX6p3U+T
KJ5+bzDner23Q3iepfFfnfvg/rg58cX7+Xiah0ZLB5x+7cfzII1zcVnv7oFO
SYp5z65Y+xbqR9LnwvTZFhUteT6pX86OOOUleB6k+FMTx6+dND+jeP/P87zN
IrzCUwNpXx2P1+Vhdg0MlZr9fzzN54rs0lE3PyVSvKS3bX3b2KZF5hGHPrF8
3zLZxCU9pNSaEX22f0bx/j+e5nn/yX6fn1Tg/NL6lnMrObn39DTi0npdTf7z
Rmg9dfH+n+d/w0nvYc/uxFO8NM+1M43+vjk0hbg0D/efXW7kEp1UvP+Pp/U6
M7Bc63aVkilemodKK89eORGSWLz/j6f1erR6ztDKDuri/T+P09W7fZCJhZry
SMfb3uCY/bN2icX7f17HnCoV71/uk07x0nG9K5nfLrkiz480zup1vv0vbyOP
UxpP+9G7MwM904r3//Gkh7/8OqSX2MHrIn1uqwOHz9S9kUlciq8xdt3EfTey
i/d7ifi7guk/7xgW7/8TaX6urkpfebRxMsVLOpm//fN01bMfxOF6V6HyS84v
6eSkZWrm3+qM4v1/Is2btbKZSfMtSRQv6WTWng5vXxukE5fmv/7S8VNbPFYX
7/8T+HcF8QfflN6dSPGSTm62Wvih8T+pxCWdKC6H727dOqV4/59I8z/4lteS
q9/TKB7u02XN7ZxcvP9PoHXpvq3CrQnzMov3/zzOiROSrzUJVlMe6XiP2Q+2
vHwtqXj/n0Dr9dcy7wl/fMiieOm4DEbOGXN5agpxaZy5QXui7Hrw/Ejj+etM
9WEVnLKK9/+JtO5H29dVvT/6neKlz1V+2Fu+dHYOcfpd0JtHVzo9/V68/+d5
s/Ja4rJ4p7SvTsLr4461fUoW7/+TaN6SzYcuaOPI8ZJ+GnmWm7TpYD5xqDPL
81fnEJf0M7nSYt9WxzKL9/9JNJ81AxxvxG3i/JJ+DP80OPbEOZ24tC43Laur
uo9LK97/J1P+mf3mTx5vkEXxkn7e1F86wHOmmrg0D11/7lisWJVavP9PonUx
63pgwPtwzkP71Y8ioduplOL9fxKt187jrW7/G5pTvP9PpnGu7n6qc5m1aZRH
Ot6LL0c1GvqNj1fSyRibiee+NeLjpd8VRH07s7tudvH+P5mOa7pHrc5H3/Fx
SeO50LfXReeU3OL9fxLpYVX9i6rRTrxekn5eN12hnl3+B3Ep3mNU+W7L7+cX
7/+Tad4e33+0pLSvtH9Lwfqzr6dHyeL9fyrxv/ZFVlow2qh4/59C83lh+Lyz
Ew3UlEfSVUA9K+/+M34Sh+8lEta0ziUurXunLaHvP/2VVbz/T6U8S4+tW+bU
+lfx/j+F+03DN1sOt02jPJLeRt51CTjUM6N4/59KnztuzJiyrb35c6X1/WKV
p7qQmVa8/0+l8TwKaB+191IWxUvrZfvhZMdZRvy59DuxnpFXq89VF+//U2jd
60afenx3+vfi/X8q/w52ZX6e1fsMyiPN5/SAQUMUNdTF+38ep2+5zucn1kyn
eGkeymzc8fzech6PpEOzof9X15nHU719/7+Q6tKkaBJ1U9I8D4rSJNEo0mho
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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
NvV5I2P4H2lWdyw=
          "]], Polygon3DBox[CompressedData["
1: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
W0i6CneTbFW4/udq7zNsPGwrybYq20YyBX9AdWYKPyvpUvj37iu8qaSr8Hlx
Hrwv6Sy8NWeo2urPs9W/Trq2lLGQtBWezBoTPljSUb//fF37TPhzSTvhs+K8
2ltyGfZy8lqZpvtuVXvv6P/u0neTLBA+VOUrs5ezxoTbxPvfg/Ut/DZ1WKuS
t4Svzm1rYXNdKXyH+rC78G7s8XWXf42ty54nvF3hd4ENvxP2ia59obIvJZcI
fyLZS2V7ShYLX64684Xn0f+oP091X5V0FL5IslD4A8mFwqdK/iv8s+R8bNbc
74J30la4u+QP4f9JrmFO1m17YoMOr7v+XOGXOVOjHF9na8ldwrvSB/Wlk2QX
4c+TzyL2lJeEvypty2PTfyq8s9qYKfysZCfmY7T/iqSVcEr2jVoKt2vYnsX2
xQY+KLe/MFG4hfAFDdun2KL74ldI3yR3+QTJxsLLcx4HPl/lW+S2lbGZzxDe
PPfznmFPi/7g+02WbJ/bf3gws+3dVvcvp/ZmSd9LeoeG/cuHo+/tG/59jD3v
YLfc83Fr1oJkkvBDufGWNdu32LvgLThD6GNyfebuzWqvfewfU9n7Gt5PWD+P
Sh/U8Hpi7h0a17Jk/2VP5oLKz8ntezMHzhVuSh5/+nZhw/sDa4U186rwDsnz
4SrhHg3398Aop//b5h4rxnAr4TzZn8K36KT6pfQnpLdmrjbs/7+LbcN+L3yy
5C3hBVEHnfrTJSfk9vdfzPzOjhVeIVnH9++i9o7GxtbYnKtrD5f2+a+WvnFm
LmA36X2kb8p5IH33hvd19vfTKtkP0t+SfrL0+0uPz3uZ+wg/Ueh5jwsfIXyJ
6jaS5x++VGfGP/Yz9sj2wmtjw8fa6qbylZLnMmVXRH30ubHeWI/Ufy/eB+uV
vYUz4GLhdXX/h5w1rE3dv34y/8FYXCp9s+T9g73laukbJ69n1mZX6Ssn7wfs
HVdJXyd5LtL2lbGft9S73F7yRG57hPPyAeEbGz5/ed/4YH/F/oXvDwdwt/Bd
pccSX/eQhvkNzl7O4B+FB6l8e+GJwgeqfGJpW3oWdoH0AaX3D/aWvaX/W/oe
0u+Rvo/0m0vbF9gO+0sfKH1b6fdyTku/o7Ttgu94gPQhpfdX+raX9OfivKdP
8C23qXxH5pfwoSofV9pfnyL9IJ4X/eeeQXWfn+sKryMZUPf5/4/M1zhP4a/Y
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
h/DIsA9uDn9oq2T7oV/4q3yrAH9BriD5hrdX3p+/zx1v4VsH+IU7c+dn8u0F
/jy5iOT0bpvsL5ALSA7mkPC/yTUkH3GX5HxxvqXgG4XDhPdI5irWi/6xR+8R
+9tFyf7VXsH3XFuZHyEXnBzh3pX9u7Njja+V7E8+nPsZPAt/c3acbyMqfw+z
Qc0xNdrH3zsi+I1+lf07crc/kT6gsn9I3jc5jjdWnuPMdfiDU5L9z2NjDa+S
zAccn5vzgfvBHyPXnBzLGyrzTeTevyK9V+Xz+rHc+x+58sxp5jbvjO8j4b/I
zV6KDViZ/yGPjHyyPpX9O3K9ydm8vvL3Iqz1ppg/HZN9ZTgVvq9kfyd2iL0/
IJkf41secvT53gcOEC4Qfvbpypz3mOBc14h8OXhJ+Ml1pO+dPFcYU74vgn85
qbD/SywbjhWulZjqjMr+C7kn+AhjK58XxMqJn/dL/n4FbmfrmB/7J3MH7Dl8
r8n3ZPhmrWJ+830LZ2XzOA/h5OHm+aZttcgnhDsl5/OpyhwCXAKc0klh/xC7
JcY5pnJMgdgCOXnPVOZ04XbhbDdssr1DrJV47o3J/gW5snBIt1b2x8iVISdg
XGX+jNzab7DxK3/vD9fUMuYPfBm5719ikwcfRy49fOWgyvY5ucdLpG+azH+S
G0/+/c2V7YMluePFfKvF982cVY043zlP+TaJnHm+34O/I894ke7fMPn7PfYK
9gy+T4YvJFef74E2ivOfXBr8yVGV/YPewY8Nlv5/KzXWIw==
          "]], Polygon3DBox[CompressedData["
1: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

          "]]}],
       Lighting->"Neutral"]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QiRsXA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmwe0FEUThR+7KzPr9OzDnDCgSFAQREBFUURFEETBgCgqJsCEOeecc0Ix
62/OOeeEOYsZFRNKEkWC4H8/bp3z6ryq7Z6Znpnurlu3atrsdfDQsZWmpqal
a01N+mv6o2VT0076YUfJDOkpa2o6T/r5klL69JZu20EyTfpfksOkHy75W/of
RVPTN9IvUd/lmpuaprZ03+0luX67Su0nSe8vvYXaN9P//8m+XdJX+pGSa6SP
kxwh/Vb1v0z6btJz9b9N9hWyu8qe3/D4DpF9sKQu/VS17ym9n+Qo6YNytVfV
LhmQ+/yPqO1R2qXvqN8OV9thku2ln6dj9lPb2mqbp/PfVXg89G3W9XdNTU0j
1PdoyVjph+iYW6Tfyjmkr6t+x6n/sTHGu3X8eOnHSW+l45fU/71l7yVplj5e
v+1Vb2rqqYffXdfrqd8OVNsBkvUy9z+x4me2VOb2s6SfLVlf+hWFr9dd+gId
31L/D634mfC+Lix8PvouVPv1hY89UHapax9d+H3P1HuaovbjZA+X/Q/vUvbZ
skfJXlX9Z9Oue3xY9/qI5ITcz3uk2hdT+28Nv++x8T6YHxPU/oz0M9S+lK73
sOxbZJ8jexnZ9+j/EjrXkpJ7pW+oc54h/UxJL+lnZ+5/s+SszPaz0p+Lc1wg
+Ur6l5I7pB+ld3Ksjt1dcqj0i/Tb1xX3uVD6/br+DdJP4dnq+ofqGleo75WS
w6UfE/e/iWQf6Zer31zp8yRXSN9Xv20qfRfJftL31TXG6NieOnarZl9vNs9P
crH08zOvh6/DvrjwWlle+iw9r2dkPyB7X9mL6/hLZB8hu7Xsv9X+r57hCNm7
SuZLP5NrSl9J7X+p/YTC7QvUNk32ZbKPlt2Bccs+V/YY2e1lz5E9Sv+vrHgN
cc0DMs8H5tQY6c+p/0PSD5KeNJ6tMq/Fa2LNnqL2PaRXpc/Q+U7VfZ+v+z9P
cpL0DXknsV+wniuZ++8uaSH98sJrA316w89759g7fm/4esx15vwWMT7e/S0x
Zy8qPL9bSZ+p/hvH/nQuc176jYWvv6X0Jo1/vOwzZI+UXZe9Zubnc5SkrfSd
9P6Ga+xHSPaTfozu4Xbpd0jOkL4Ma0h9L4p3xv3+r+o+p0m/U+e/Wm191Paf
xjNGdl/2K8lY6acXXu+s3T8b3u94Nox5E+mvq/1J1jfrQON7UfbDsg+T3Wj2
fsxaPjTW6C6Z98NLJcOlr6K9YzXtHatKVpJeK3Ut6WtIP1vHz9c91WXP1VhP
lL2i2jvJXlntZzX7+F6yN+Ic0leo+1yrSLaRvrqkTS2uIb1VaXt56efo+F90
/pl6Fl+wt8rO1L6M2tdW+7nNXs/782wlG0jvoN97q30TyVrSO0q6SO8ax0zM
fb4Zks+l/6fzN9T2jfSjdL4tuQ/2Hsnx0n9U+1TpH0o/TO2b6/+hVe/520if
rPZp0j9mn1f797J/l/0m/WS/m9ueInlH+ujk8bL39Ff7FNl/yf5O9tGy95E9
WnZ32f1kr6v/p8g+VdJN+t5qHxX6lmr/Nvfxs6q+h+Xqfj9LStpIb6Hn1Sx9
Celnqv9fOn6h+raUfYrs85hjsu+SXCD9ErVfK/1Y6buq/WT9v0b2uNiPb1L7
PdKvkL672i+TfZ3s82XvJntPziH7Usne0o9X+2nSd5G+XZyPvf1RySnSj0u+
t52kb6v2Q5L95TDZ28g+V/8fl/1EXONs9twY6wi1nyH7glhLu8g+Pff4r4nz
7yAZX/UYucbWkpOqfsdbSX8797v5TfKW9Fk63wLpFT2fk3S+qv4nPb9C0kJ6
k2Q55mfNffZX/4PUvw/nVv/mup83c6qkr55/x9BPb/b1arIXq3k+/KPjW/C+
1H6G2g9L3it2Vdtg2a3qbgc8NaQvTB7PYtJPU/sH6pfJzmueoyer/Wwdv4n0
AWrfNPf4DozfJmX2hfjEb9izuD7zV/pa6v8pflt2Q/KZ9JXVvgrzU3ontX8V
/rSVpFnnW6j9ZLr2itf1+5pq/x9+IPwT/pbrdVLfzpLv8eGSLtK7Sv6Qfnv4
s7/xYeznut6siq+9NvNV5/+Z/ZmxyC7UvpiO/UX2OjFe+v8p+Uj60mpfSu2T
pXfm+WS+vybJ+9KXVfuyrH/p66r9Z/1fVfZqcc6JmY9fMsZLO9erSX6UfriO
Pyrm9hAd30Z2W9n/qK2b7BVkrxTX6iB7GdnLxL12kd1Z9nqy58heT3aSncme
Lrsr+xvrU/fyhux2sv/T/c+Q/Zbs9rIvV/v16n+xrr9H4BueNc/wTunT1H+S
9Kukr8D8TX4fD7CXy64lY40nZK8me676/yH7adltZM9Re0vNpR91/mNl/6P2
KWp/mOck+1GecdX3xDn+yo3t2ZNnS/9BMofnwT1Ln8H1qm47rtnrb1ysz4HS
5zJO6cvHM2lW/8Wlz5feXf3nJc/tv9X3BNl/yp6v9nnsLbJn6f/q+KPoM1Pj
/VHjvU7Hr6T233L7G/zLFOlTc9/fYmGPz9z/B8m10qcmj38aWE3H35x5/v0k
uUn6Q5mfx2+S+8NmbjBHeEaTY31XJStqjb6a+X0ukLySeTxcmz4/S/9X452q
tufVtoautxj3J/sZ2avLvjYZD4B9hss+KRm7jpK9I/4itw2m3Uv6JmrvK30N
6X3wv/q/KfuTZFXpGyXbK9O32fgPrHJ0YLw11L5m9N1U7V9ofO9UjNneAltl
jjeulRwj/QT1Px08rP5D2b/UZ5uKMeFp0t+TvMLclDwWxz8m/fGKY5bH9dtd
0l+VPFV4vFy/bYwRfAeeOy4w4fmFY5ftwOfSO+ETuXfJ2uyFmbEa+Id4bR39
tk/VfTpLb5d5bKMla7Dn5T52T0k/fHjg0asDI3UKPHBSHH+wrrl1xRj5ROl9
dP+bq21NtW2m+2+n/x1ld4jfiF/Bn8Mks6QfXxjbz5U+teF4l1gGDEY8zPhO
k356YGrGA14jpiRefbtwfEKssnSz8dq9su+rOIbdVXJ9xTHIiLA5F+fcmTUv
f9RNc289zc3zw1+znx0p2QP/XhiLbsNerParZZ/C85ZdZT4WPh/nzpqNj2+r
OMYGb95b+PpcazHWe+Z3f1ec82a1Xyx9COum2fEC8cmDkv1YT4XxOLFC0Wy8
T+x+R2DukzPf2/WBabHBt09VHHOxHm7UvdwUa4R47RjpB4AF8Bc6/wTWruRl
6R9KXpd+j+TZwngIfHGh5Jzc4+d5gNEHSN8889wYF/HDtpmfz8mSQdFObHFC
YHbaWSvj4xmCR8A7YLqh0p8s/P7A2i0jfgB7g8GJsYj3iaWIqYjBr0uOHR7R
sfup/+P6/4rsV9mPpe+ZPN9/11zaQu3P6rfXZb8heU768uyX0ttIlpN+s/rf
G20Hqv/tsh+U/RpzXfbzsifIfgkcIfvGZKzItfaHb0jGCoXsXrJfzX38A5JX
pL+o9rdCH6v2Z5LH84zsA8CfyVhxnOyRsq/KjS/vjd+In4+rOuY+OHf8BN4j
JiQ+OiKZKxktfXsdPxgMFOsV/3JQMl7fVvpAtfeQvSH4h71Q9qmyz6maW9lZ
9jHJx28he1Cz+Qj81dWS+3PzOcwN5ggYFX6G48FcY6VfnczXoO8E/5E8fmL/
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
vQq169SPUkcKH83afSqu/3/NEk4y
          "]], Polygon3DBox[CompressedData["
1:eJwt13mU1lUdx/EfDMvALIAswzIDDKuswx4KiNTJI+qxBEutWKTMLeXUcaEA
lVWg2GXYZAAhWUVLQCQDkWOgEhaiFFppWVJWspjs0Ot7nvvH+4/P+3x/997f
8tzvfcrHjB32YPUsy7aiJp4uyLJpxPdqZ9ndeE4uLsqyshpZ1qROljVCodwE
V3J15NroXJxlzbguXGO5Ibok15m7Tr4ebeQhGM59X74Lg+X15qk07wPm/CFe
LMitZTrXW+6FP6hbyI3jusrdsER+DCO4y7XcADddnouHuNPcF9jv2kXceK6/
msGokp/BPO4b8jfxrLwWC7k75THYJF8ozLICaz6Sn2XvoY17285vVHeLmpvx
J3Osirm5UrkZfse1RR/XjnSvo9DbteeNV5d711iHUc51UNefu1HNULSTz6ir
zb2t5iBaqevBf4W7Rs1A9OBacz252+U70Ks4N29fbrA8CGUxPm7gbpWHx3uT
d1rzlnS/I/Eh1wjt1fVS0wdN5a64Nrke6G6OSdY3My/LvmxtQ1DMjeemcP3k
vijg9prjJXNMMP54/N1Ym+MdJzcRu+UD2MXNkmfiE3X7uZ3cZHkS/sH91BwL
zXG/8e/FNHk2nuLGyg9ghvy8a1ema6fgdXlq1KobruYW/Fiug+rcWjVr8B9z
TOZmcUPVXI967qMul8dtVLMB/1X3FLeSG6NmNBqqq+RWc/fJ96ARN4er5B6V
H8bP5EYB96KxXsBnxpvATeX6q/kSCl27hzvA7ZN/g93yTzCZ6yP3Rl11a7jn
uN3yqyjjFnAruG/Jt6MBN4tbwN0t34Up8pOYy31bvgMT5QYo5PLkWvHdy83Q
nMvkamgt78Bebpu8FRvlVdjIvSzvRKl5l3JruUfkh9CYK+FKuM/d///QQn4M
07mBagagSF0515ZrEWOhl9wOHbjyWBv6y1fhmlTXPNbt2kHckFTXGrW5edxy
bpj8ddTniuNb4F6zjj2xntjr0vp2y6/gJLfBd7TMd3WTfCM+4JbFt8V1kTvj
vfg20p5TU66BA2kfmsAVyHXxW25N2nNiX+uEd7mfc4u4e+X74vuQf4k13Fj5
QfytKPeNr0p79nfxV24O9yPulL3vJPZxi7lJXCs1LXGoKPfsm7q3vfKr+Lwo
tyfOV9dOLsc7XCX3OFciN8Hb3Mb0+71VHo6/cC9xm9J+Ogx/5pameaPuNqyL
3yRmc43kBjiY6iZzbeU2OMytTvtza7kMv+fqxV5szW/Kb+A0N5Obx43yHkfg
icLc86tM+31f/FFdbf4yVyWvwL+5Aq6Wa7fL23CcK+TyuV3yr3Eqeg9XxY00
/ndwhe9lM/cyt1Cej6ZcLe6iOZa5bik+dW1N7gK3RF6Mf3HzrO9h7qz3cwZv
cPO5R7jz8jm8ya3gZnADXHc1jnILUh+MnncJb3FbufXcUDXX4X1uD7eNGyc/
io+55anHV8jdcYQrQgt7e3H0d+SnZxr7wTz3tQDN3Ns93P3pdzkIY+XFaa9b
Ka9GVWFuT6xKz2URlsjL0m9/k/w81sVvEl/lOslXIt8cm2I/4ebKs1FSnNvb
Y79fJT+DFtzqtNc9LS/D8tgL0JFrK7fDwOif8Rt2b+fkM7jItU+9cbR7vTN6
nPEGcl9LfXoE+skr0x4Wz2BO3Itcnvr5ADVXoUV6fs1Trx2CnrGvpTNS9Olr
0VLekvrRaM99FD7irsZNqXffhgr5XOxD3DvmPBR7lvGq8/XT+aoU9VKf7sBV
ky+r66SuIK2lbrxH1Ix1YBDXIc4V6KquTnouFbHemJcr5Sq4jnJ7NJCrpXk/
Mv6H8VzTWhpwx+RP0J67ZM1F3PvyUbTlasQauZPycZxVsxOvp76wI74F+RXs
T31rF7bLx3AyLzfeB/gsftPYwu2RX0PLdB8l5rgkX0AmN0znl4vy+fi21NXn
2nAnYix04Lpwg7nu8UzQLXo814yrJddAntwy3rt5P43fLi7GM+ZKuXxj1Yln
IP8i7cVT1UzDvoJcj+qYemh15JmjguubeuhFddW4xlwT7lfyDpwwxzjuCa6H
uoqYJ54pd94clWoW4Z9FuXNJnF+OxJ6LhvHszP1x2utW4lzs1/x6dTOMNT32
rMLcOWdm6skTMTf6bOqrl113CdXN+2zcH7c5+jvWyi/Eu0u//RXRb9MZZEv6
rVaFL8z1/TXcOnlD/IblsoArjN4b7yieEzpzxdHzUSPeEdeTOx7nslhPnEW5
XunMcAKXuVbpDBzfczc0ljupq1B3LM6cuFCU6/Gxt5+Sv0Cp3CqdLcKdRGbe
K9S2M95Z6ziNjtzl9I3H/54C1Ir/Ltx21z6pZhqaxLVcPe5o9B2cj+8l/T+6
wXU3o6PcT91AdSVxHWoW585cRdyh6Hc4q65pOnO9Je+Pdafvryy988PxfrnH
07kpzp0/iHcs109nuINx1sAZdfmpD8Z4B1AU51qc5RbI83FM3f8B+MOrhw==

          "]]}],
       Lighting->"Neutral"]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0kkvnWEYgOHPrIZjnmelOMdUNfwB3ZhiiggNYlViCJGKc+xZdFVhYdEF
6yb8AMQWidjpHyCxZddFXRLJd+d6nt37vvlq5ldHV+KCINjTm/FKUKK+fwiC
JCZrwZzCRaZyib4gTSuGdK4yg5laM4e4zixmK0cb9lzm6Yc5n5ssYKG2zEWM
spgxlrBU2+YyduvCAUf4zCWGHHSHRzrTjP2ev/jMPwy5YJN69c8+y3aXi7Kf
+zzRtQ7tD7xlnEd5Yjl7NOuy3ezSjLmT3/iF0+zgZ02Z2znJNrZqwtzCZkU0
bg9zjE1s1Ii5gcP8xHoNmes4yI8cYC1r1GeuZpUqVaF43Tnzozv85g0XeMoD
xdRhn+N/b/GVVwwzSy9v/4T9L+d4zgiPuatlvXj7UV6yhz9Z/v4fvQKzWTZN

       "],
       VertexColors->None]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klOVFEUgOFjYSKEKI4YkEjCENgAoNJX0belYkNXhfRQEMA4gAWAUxJd
ACRMDAkuQIZOYAESpwYWAHO+GwZ/vnMmL/fd9+qKG+OlRxFxqKZMRLNa9FKF
yohXfK2iuZVzbOM829mhRXMnl9jFbq2Ys1xljj3q1bq9j/3aMA9wk4Mc0pZ5
mNsc4Q5HOaYv5vH0jHS+JxH76Rk84jf+5l/d6speVRbxrDyigfXMcla7+mr/
zp884x9e8FqZxxHVFREvOMAmLjDPkt4/dQauacK8yrdc4Rsuc0l58yLHuMB5
jZg/c05FDdkLHOQsZ9RvnmYfpzipHvMn5viRWX5IZ1GXeYLv0jnSGdScnu3M
taxhGf97xxvvd6lfOrX/SPfBPeZYSKpRVfbn/Ocu79zpCa94ruP03ewH6f9g
ieXMZx7+o3vPxj5U
       "],
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2408, 2407, 2430, 3638, 3417, 2453, 3645, 3424, 2470, 3660, 
       3437, 2491, 2492, 2517, 2518, 2547, 3683, 3450, 2570, 3690, 3457, 2587,
        3705, 3470, 2608, 2609, 2634, 2636, 2664, 3728, 3483, 2687, 3736, 
       3490, 2711, 3751, 3496, 2735, 2736, 2762, 2763, 2792, 3773, 3505, 2815,
        3781, 3512, 2839, 3796, 3518, 2863, 2864, 2890},
       VertexColors->None], 
      Line3DBox[{2409, 2411, 2431, 3639, 3418, 2454, 3647, 3426, 2471, 3662, 
       3439, 2493, 2496, 2519, 2523, 2548, 3684, 3451, 2571, 3692, 3459, 2588,
        3707, 3472, 2610, 2613, 2635, 2641, 2666, 3729, 3484, 2689, 3739, 
       3491, 2713, 3753, 3497, 2738, 2741, 2765, 2768, 2794, 3774, 3506, 2817,
        3784, 3513, 2841, 3798, 3519, 2866, 2869, 2892},
       VertexColors->None], 
      Line3DBox[{2410, 2413, 2433, 3640, 3419, 2455, 3649, 3427, 2472, 3664, 
       3440, 2494, 2499, 2520, 2526, 2549, 3685, 3452, 2572, 3694, 3460, 2589,
        3709, 3473, 2611, 2616, 2637, 2644, 2667, 3730, 3485, 2690, 3740, 
       3492, 2714, 3755, 3498, 2739, 2744, 2766, 2771, 2795, 3775, 3507, 2818,
        3785, 3514, 2842, 3800, 3520, 2867, 2872, 2893},
       VertexColors->None], 
      Line3DBox[{2412, 2416, 2434, 3641, 3420, 2456, 3651, 3429, 2473, 2477, 
       3666, 2495, 2501, 2522, 2529, 2551, 3686, 3453, 2573, 3696, 3462, 2590,
        2594, 3711, 2612, 2619, 2638, 2648, 2668, 3731, 3486, 2691, 3742, 
       3493, 2715, 2719, 3757, 2740, 2746, 2767, 2774, 2796, 3776, 3508, 2819,
        3787, 3515, 2843, 2847, 3802, 2868, 2874, 2894},
       VertexColors->None], 
      Line3DBox[{2414, 2419, 2435, 3642, 3421, 2457, 3653, 3431, 2474, 3668, 
       3442, 2497, 2505, 2524, 2533, 2552, 3687, 3454, 2574, 3698, 3464, 2591,
        3713, 3475, 2614, 2622, 2640, 2651, 2670, 3732, 3487, 2693, 3745, 
       3494, 2717, 3759, 3500, 2743, 2750, 2770, 2778, 2798, 3777, 3509, 2821,
        3790, 3516, 2845, 3804, 3522, 2871, 2878, 2896},
       VertexColors->None], 
      Line3DBox[{2415, 2421, 2437, 2445, 3643, 2458, 2463, 3655, 2475, 2482, 
       3670, 2498, 2507, 2525, 2536, 2553, 2561, 3688, 2575, 2580, 3700, 2592,
        2599, 3715, 2615, 2625, 2642, 2655, 2671, 2678, 3733, 2694, 2701, 
       3746, 2718, 2725, 3761, 2745, 2752, 2772, 2781, 2799, 2806, 3778, 2822,
        2829, 3791, 2846, 2853, 3806, 2873, 2880, 2897},
       VertexColors->None], 
      Line3DBox[{2417, 2424, 2439, 3644, 3422, 2459, 3657, 3435, 2476, 2487, 
       3672, 2500, 2513, 2528, 2542, 2555, 3689, 3455, 2576, 3702, 3468, 2593,
        2604, 3717, 2618, 2630, 2645, 2660, 2673, 3734, 3488, 2696, 3748, 
       3495, 2720, 2729, 3763, 2747, 2756, 2775, 2786, 2801, 3779, 3510, 2824,
        3793, 3517, 2848, 2857, 3808, 2875, 2884, 2899},
       VertexColors->None], 
      Line3DBox[{2418, 2429, 2440, 3637, 3423, 2460, 2469, 3659, 2479, 2490, 
       3674, 2503, 2516, 2531, 2546, 2557, 3682, 3456, 2577, 2586, 3704, 2596,
        2607, 3719, 2620, 2633, 2646, 2663, 2674, 3727, 3489, 2697, 2710, 
       3749, 2721, 2734, 3764, 2748, 2761, 2776, 2791, 2802, 3772, 3511, 2825,
        2838, 3794, 2849, 2862, 3809, 2876, 2889, 2900},
       VertexColors->None], 
      Line3DBox[{2420, 2432, 2442, 3646, 3425, 2461, 3661, 3438, 2480, 3675, 
       3446, 2504, 2521, 2532, 2550, 2558, 3691, 3458, 2578, 3706, 3471, 2597,
        3720, 3479, 2621, 2639, 2649, 2665, 2676, 3735, 2688, 2699, 3750, 
       2712, 2723, 3765, 2737, 2751, 2764, 2779, 2793, 2804, 3780, 2816, 2827,
        3795, 2840, 2851, 3810, 2865, 2879, 2891, 2902},
       VertexColors->None], 
      Line3DBox[{2422, 2436, 2444, 3648, 3428, 2462, 3663, 3441, 2481, 3676, 
       3447, 2506, 2527, 2535, 2554, 2560, 3693, 3461, 2579, 3708, 3474, 2598,
        3721, 3480, 2624, 2643, 2652, 2669, 2679, 3737, 2692, 2702, 3752, 
       2716, 2726, 3766, 2742, 2753, 2769, 2782, 2797, 2807, 3782, 2820, 2830,
        3797, 2844, 2854, 3811, 2870, 2881, 2895, 2904},
       VertexColors->None], 
      Line3DBox[{2423, 2438, 2446, 3650, 3430, 2464, 2478, 3665, 2483, 2502, 
       3677, 2509, 2530, 2538, 2556, 2563, 3695, 3463, 2581, 2595, 3710, 2600,
        2617, 3722, 2626, 2647, 2653, 2672, 2681, 3738, 2695, 2704, 3499, 
       3754, 2727, 3502, 3767, 2754, 2773, 2784, 2800, 2809, 3783, 2823, 2832,
        3521, 3799, 2855, 3524, 3812, 2882, 2898, 2906},
       VertexColors->None], 
      Line3DBox[{2425, 2441, 2448, 3652, 3432, 2465, 3667, 3443, 2485, 3678, 
       3448, 2511, 2534, 2540, 2559, 2565, 3697, 3465, 2582, 3712, 3476, 2602,
        3723, 3481, 2628, 2650, 2656, 2675, 2682, 3741, 2698, 2705, 3756, 
       2722, 2728, 3768, 2749, 2755, 2777, 2785, 2803, 2810, 3786, 2826, 2833,
        3801, 2850, 2856, 3813, 2877, 2883, 2901, 2907},
       VertexColors->None], 
      Line3DBox[{2426, 2443, 2449, 3654, 3433, 2466, 3669, 3444, 2486, 2508, 
       3679, 2512, 2537, 2541, 2562, 2566, 3699, 3466, 2583, 3714, 3477, 2603,
        2623, 3724, 2629, 2654, 2658, 2677, 2683, 3743, 2700, 2706, 3758, 
       2724, 2730, 3503, 3769, 2757, 2780, 2787, 2805, 2811, 3788, 2828, 2834,
        3803, 2852, 2858, 3525, 3814, 2885, 2903, 2908},
       VertexColors->None], 
      Line3DBox[{2427, 2447, 2450, 3656, 3434, 2467, 2484, 3671, 2488, 2510, 
       3680, 2514, 2539, 2543, 2564, 2567, 3701, 3467, 2584, 2601, 3716, 2605,
        2627, 3725, 2631, 2657, 2659, 2680, 2685, 3744, 2703, 2708, 3501, 
       3760, 2732, 3504, 3770, 2759, 2783, 2789, 2808, 2813, 3789, 2831, 2836,
        3523, 3805, 2860, 3526, 3815, 2887, 2905, 2910},
       VertexColors->None], 
      Line3DBox[{2428, 2451, 2452, 3658, 3436, 2468, 3673, 3445, 2489, 3681, 
       3449, 2515, 2544, 2545, 2568, 2569, 3703, 3469, 2585, 3718, 3478, 2606,
        3726, 3482, 2632, 2662, 2661, 2684, 2686, 3747, 2707, 2709, 3762, 
       2731, 2733, 3771, 2758, 2760, 2788, 2790, 2812, 2814, 3792, 2835, 2837,
        3807, 2859, 2861, 3816, 2886, 2888, 2909, 2911},
       VertexColors->None], 
      Line3DBox[{2913, 2912, 2935, 3818, 3527, 2958, 3825, 3534, 2975, 3840, 
       3547, 2996, 2997, 3022, 3023, 3052, 3863, 3560, 3075, 3870, 3567, 3092,
        3885, 3580, 3113, 3114, 3139, 3141, 3169, 3908, 3593, 3192, 3916, 
       3600, 3216, 3931, 3606, 3240, 3241, 3267, 3268, 3297, 3953, 3615, 3320,
        3961, 3622, 3344, 3976, 3628, 3368, 3369, 3395},
       VertexColors->None], 
      Line3DBox[{2914, 2916, 2936, 3819, 3528, 2959, 3827, 3536, 2976, 3842, 
       3549, 2998, 3001, 3024, 3028, 3053, 3864, 3561, 3076, 3872, 3569, 3093,
        3887, 3582, 3115, 3118, 3140, 3146, 3171, 3909, 3594, 3194, 3919, 
       3601, 3218, 3933, 3607, 3243, 3246, 3270, 3273, 3299, 3954, 3616, 3322,
        3964, 3623, 3346, 3978, 3629, 3371, 3374, 3397},
       VertexColors->None], 
      Line3DBox[{2915, 2918, 2938, 3820, 3529, 2960, 3829, 3537, 2977, 3844, 
       3550, 2999, 3004, 3025, 3031, 3054, 3865, 3562, 3077, 3874, 3570, 3094,
        3889, 3583, 3116, 3121, 3142, 3149, 3172, 3910, 3595, 3195, 3920, 
       3602, 3219, 3935, 3608, 3244, 3249, 3271, 3276, 3300, 3955, 3617, 3323,
        3965, 3624, 3347, 3980, 3630, 3372, 3377, 3398},
       VertexColors->None], 
      Line3DBox[{2917, 2921, 2939, 3821, 3530, 2961, 3831, 3539, 2978, 2982, 
       3846, 3000, 3006, 3027, 3034, 3056, 3866, 3563, 3078, 3876, 3572, 3095,
        3099, 3891, 3117, 3124, 3143, 3153, 3173, 3911, 3596, 3196, 3922, 
       3603, 3220, 3224, 3937, 3245, 3251, 3272, 3279, 3301, 3956, 3618, 3324,
        3967, 3625, 3348, 3352, 3982, 3373, 3379, 3399},
       VertexColors->None], 
      Line3DBox[{2919, 2924, 2940, 3822, 3531, 2962, 3833, 3541, 2979, 3848, 
       3552, 3002, 3010, 3029, 3038, 3057, 3867, 3564, 3079, 3878, 3574, 3096,
        3893, 3585, 3119, 3127, 3145, 3156, 3175, 3912, 3597, 3198, 3925, 
       3604, 3222, 3939, 3610, 3248, 3255, 3275, 3283, 3303, 3957, 3619, 3326,
        3970, 3626, 3350, 3984, 3632, 3376, 3383, 3401},
       VertexColors->None], 
      Line3DBox[{2920, 2926, 2942, 2950, 3823, 2963, 2968, 3835, 2980, 2987, 
       3850, 3003, 3012, 3030, 3041, 3058, 3066, 3868, 3080, 3085, 3880, 3097,
        3104, 3895, 3120, 3130, 3147, 3160, 3176, 3183, 3913, 3199, 3206, 
       3926, 3223, 3230, 3941, 3250, 3257, 3277, 3286, 3304, 3311, 3958, 3327,
        3334, 3971, 3351, 3358, 3986, 3378, 3385, 3402},
       VertexColors->None], 
      Line3DBox[{2922, 2929, 2944, 3824, 3532, 2964, 3837, 3545, 2981, 2992, 
       3852, 3005, 3018, 3033, 3047, 3060, 3869, 3565, 3081, 3882, 3578, 3098,
        3109, 3897, 3123, 3135, 3150, 3165, 3178, 3914, 3598, 3201, 3928, 
       3605, 3225, 3234, 3943, 3252, 3261, 3280, 3291, 3306, 3959, 3620, 3329,
        3973, 3627, 3353, 3362, 3988, 3380, 3389, 3404},
       VertexColors->None], 
      Line3DBox[{2923, 2934, 2945, 3817, 3533, 2965, 2974, 3839, 2984, 2995, 
       3854, 3008, 3021, 3036, 3051, 3062, 3862, 3566, 3082, 3091, 3884, 3101,
        3112, 3899, 3125, 3138, 3151, 3168, 3179, 3907, 3599, 3202, 3215, 
       3929, 3226, 3239, 3944, 3253, 3266, 3281, 3296, 3307, 3952, 3621, 3330,
        3343, 3974, 3354, 3367, 3989, 3381, 3394, 3405},
       VertexColors->None], 
      Line3DBox[{2925, 2937, 2947, 3826, 3535, 2966, 3841, 3548, 2985, 3855, 
       3556, 3009, 3026, 3037, 3055, 3063, 3871, 3568, 3083, 3886, 3581, 3102,
        3900, 3589, 3126, 3144, 3154, 3170, 3181, 3915, 3193, 3204, 3930, 
       3217, 3228, 3945, 3242, 3256, 3269, 3284, 3298, 3309, 3960, 3321, 3332,
        3975, 3345, 3356, 3990, 3370, 3384, 3396, 3407},
       VertexColors->None], 
      Line3DBox[{2927, 2941, 2949, 3828, 3538, 2967, 3843, 3551, 2986, 3856, 
       3557, 3011, 3032, 3040, 3059, 3065, 3873, 3571, 3084, 3888, 3584, 3103,
        3901, 3590, 3129, 3148, 3157, 3174, 3184, 3917, 3197, 3207, 3932, 
       3221, 3231, 3946, 3247, 3258, 3274, 3287, 3302, 3312, 3962, 3325, 3335,
        3977, 3349, 3359, 3991, 3375, 3386, 3400, 3409},
       VertexColors->None], 
      Line3DBox[{2928, 2943, 2951, 3830, 3540, 2969, 2983, 3845, 2988, 3007, 
       3857, 3014, 3035, 3043, 3061, 3068, 3875, 3573, 3086, 3100, 3890, 3105,
        3122, 3902, 3131, 3152, 3158, 3177, 3186, 3918, 3200, 3209, 3609, 
       3934, 3232, 3612, 3947, 3259, 3278, 3289, 3305, 3314, 3963, 3328, 3337,
        3631, 3979, 3360, 3634, 3992, 3387, 3403, 3411},
       VertexColors->None], 
      Line3DBox[{2930, 2946, 2953, 3832, 3542, 2970, 3847, 3553, 2990, 3858, 
       3558, 3016, 3039, 3045, 3064, 3070, 3877, 3575, 3087, 3892, 3586, 3107,
        3903, 3591, 3133, 3155, 3161, 3180, 3187, 3921, 3203, 3210, 3936, 
       3227, 3233, 3948, 3254, 3260, 3282, 3290, 3308, 3315, 3966, 3331, 3338,
        3981, 3355, 3361, 3993, 3382, 3388, 3406, 3412},
       VertexColors->None], 
      Line3DBox[{2931, 2948, 2954, 3834, 3543, 2971, 3849, 3554, 2991, 3013, 
       3859, 3017, 3042, 3046, 3067, 3071, 3879, 3576, 3088, 3894, 3587, 3108,
        3128, 3904, 3134, 3159, 3163, 3182, 3188, 3923, 3205, 3211, 3938, 
       3229, 3235, 3613, 3949, 3262, 3285, 3292, 3310, 3316, 3968, 3333, 3339,
        3983, 3357, 3363, 3635, 3994, 3390, 3408, 3413},
       VertexColors->None], 
      Line3DBox[{2932, 2952, 2955, 3836, 3544, 2972, 2989, 3851, 2993, 3015, 
       3860, 3019, 3044, 3048, 3069, 3072, 3881, 3577, 3089, 3106, 3896, 3110,
        3132, 3905, 3136, 3162, 3164, 3185, 3190, 3924, 3208, 3213, 3611, 
       3940, 3237, 3614, 3950, 3264, 3288, 3294, 3313, 3318, 3969, 3336, 3341,
        3633, 3985, 3365, 3636, 3995, 3392, 3410, 3415},
       VertexColors->None], 
      Line3DBox[{2933, 2956, 2957, 3838, 3546, 2973, 3853, 3555, 2994, 3861, 
       3559, 3020, 3049, 3050, 3073, 3074, 3883, 3579, 3090, 3898, 3588, 3111,
        3906, 3592, 3137, 3167, 3166, 3189, 3191, 3927, 3212, 3214, 3942, 
       3236, 3238, 3951, 3263, 3265, 3293, 3295, 3317, 3319, 3972, 3340, 3342,
        3987, 3364, 3366, 3996, 3391, 3393, 3414, 3416},
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1164, 1137, 1138, 1139, 1140, 1136, 1141, 3638, 1142, 1143, 
       1144, 1145, 3639, 1146, 1147, 3640, 1148, 1149, 3641, 1150, 1151, 1152,
        1153, 3642, 1154, 1155, 1156, 3643, 1157, 1158, 1159, 3644, 1160, 
       1161, 3637, 1166, 1167, 1170, 1171, 1174, 1175, 3646, 1178, 1179, 1182,
        1183, 3648, 1186, 1187, 3650, 1190, 1191, 1194, 1195, 3652, 1198, 
       1199, 3654, 1202, 1203, 3656, 1206, 1207, 1210, 1211, 3658, 1214, 1215},
       VertexColors->None], 
      Line3DBox[{1217, 1163, 1165, 1168, 1169, 1162, 1172, 3645, 1173, 1176, 
       1177, 1180, 3647, 1181, 1184, 3649, 1185, 1188, 3651, 1189, 1192, 1193,
        1196, 3653, 1197, 1200, 1201, 3655, 1204, 1205, 1208, 3657, 1209, 
       1212, 1219, 3659, 1220, 1223, 1224, 1227, 1228, 3661, 1231, 1232, 1235,
        1236, 3663, 1239, 1240, 1243, 3665, 1244, 1247, 1248, 3667, 1251, 
       1252, 3669, 1255, 1256, 1259, 3671, 1260, 1263, 1264, 3673, 1266, 1267},
       VertexColors->None], 
      Line3DBox[{1268, 1216, 1218, 1221, 1222, 1213, 1225, 3660, 1226, 1229, 
       1230, 1233, 3662, 1234, 1237, 3664, 1238, 1241, 1242, 3666, 1245, 1246,
        1249, 3668, 1250, 1253, 1254, 3670, 1257, 1258, 1261, 1262, 3672, 
       1265, 1269, 3674, 1270, 1271, 1272, 1273, 1274, 3675, 1275, 1276, 1277,
        1278, 3676, 1279, 1280, 1281, 3677, 1282, 1283, 1284, 3678, 1285, 
       1286, 1287, 3679, 1288, 1289, 3680, 1290, 1291, 1292, 3681, 1293, 1294},
       VertexColors->None], 
      Line3DBox[{136, 137, 138, 139, 2517, 140, 141, 2519, 142, 2520, 143, 
       2522, 144, 145, 2524, 146, 2525, 147, 148, 2528, 149, 2531, 150, 151, 
       152, 2532, 153, 154, 2535, 155, 2538, 156, 157, 2540, 158, 2541, 159, 
       2543, 160, 161, 2545, 162},
       VertexColors->None], 
      Line3DBox[{1323, 1296, 1297, 1298, 1299, 1295, 1300, 3683, 1301, 1302, 
       1303, 1304, 3684, 1305, 1306, 3685, 1307, 1308, 3686, 1309, 1310, 1311,
        1312, 3687, 1313, 1314, 1315, 3688, 1316, 1317, 1318, 3689, 1319, 
       1320, 3682, 1325, 1326, 1329, 1330, 1333, 1334, 3691, 1337, 1338, 1341,
        1342, 3693, 1345, 1346, 3695, 1349, 1350, 1353, 1354, 3697, 1357, 
       1358, 3699, 1361, 1362, 3701, 1365, 1366, 1369, 1370, 3703, 1373, 1374},
       VertexColors->None], 
      Line3DBox[{1376, 1322, 1324, 1327, 1328, 1321, 1331, 3690, 1332, 1335, 
       1336, 1339, 3692, 1340, 1343, 3694, 1344, 1347, 3696, 1348, 1351, 1352,
        1355, 3698, 1356, 1359, 1360, 3700, 1363, 1364, 1367, 3702, 1368, 
       1371, 1378, 3704, 1379, 1382, 1383, 1386, 1387, 3706, 1390, 1391, 1394,
        1395, 3708, 1398, 1399, 1402, 3710, 1403, 1406, 1407, 3712, 1410, 
       1411, 3714, 1414, 1415, 1418, 3716, 1419, 1422, 1423, 3718, 1425, 1426},
       VertexColors->None], 
      Line3DBox[{1427, 1375, 1377, 1380, 1381, 1372, 1384, 3705, 1385, 1388, 
       1389, 1392, 3707, 1393, 1396, 3709, 1397, 1400, 1401, 3711, 1404, 1405,
        1408, 3713, 1409, 1412, 1413, 3715, 1416, 1417, 1420, 1421, 3717, 
       1424, 1428, 3719, 1429, 1430, 1431, 1432, 1433, 3720, 1434, 1435, 1436,
        1437, 3721, 1438, 1439, 1440, 3722, 1441, 1442, 1443, 3723, 1444, 
       1445, 1446, 3724, 1447, 1448, 3725, 1449, 1450, 1451, 3726, 1452, 1453},
       VertexColors->None], 
      Line3DBox[{271, 272, 273, 274, 2634, 275, 276, 2635, 277, 2637, 278, 
       2638, 279, 280, 2640, 281, 2642, 282, 283, 2645, 284, 2646, 285, 286, 
       287, 2649, 288, 289, 2652, 290, 2653, 291, 292, 2656, 293, 2658, 294, 
       2659, 295, 296, 2661, 297},
       VertexColors->None], 
      Line3DBox[{1482, 1454, 1455, 1456, 1457, 1458, 1135, 3728, 1459, 1460, 
       1461, 1462, 3729, 1463, 1464, 3730, 1465, 1466, 3731, 1467, 1468, 1469,
        1470, 3732, 1471, 1472, 1473, 3733, 1474, 1475, 1476, 3734, 1477, 
       1478, 3727, 1484, 1485, 1488, 1489, 1479, 1491, 3735, 1493, 1495, 1497,
        1499, 3737, 1501, 1503, 3738, 1505, 1507, 1509, 1511, 3741, 1513, 
       1515, 3743, 1517, 1519, 3744, 1521, 1523, 1525, 1527, 3747, 1529, 1531},
       VertexColors->None], 
      Line3DBox[{1535, 1481, 1483, 1486, 1487, 1490, 1480, 3736, 1492, 1494, 
       1496, 1498, 3739, 1500, 1502, 3740, 1504, 1506, 3742, 1508, 1510, 1512,
        1514, 3745, 1516, 1518, 1520, 3746, 1522, 1524, 1526, 3748, 1528, 
       1530, 1537, 3749, 1538, 1541, 1542, 1532, 1544, 3750, 1546, 1548, 1550,
        1552, 3752, 1554, 1556, 1558, 3754, 1560, 1562, 1564, 3756, 1566, 
       1568, 3758, 1570, 1572, 1574, 3760, 1576, 1578, 1580, 3762, 1582, 1584},
       VertexColors->None], 
      Line3DBox[{1586, 1534, 1536, 1539, 1540, 1543, 1533, 3751, 1545, 1547, 
       1549, 1551, 3753, 1553, 1555, 3755, 1557, 1559, 1561, 3757, 1563, 1565,
        1567, 3759, 1569, 1571, 1573, 3761, 1575, 1577, 1579, 1581, 3763, 
       1583, 1587, 3764, 1588, 1589, 1590, 1585, 1591, 3765, 1592, 1593, 1594,
        1595, 3766, 1596, 1597, 1598, 3767, 1599, 1600, 1601, 3768, 1602, 
       1603, 1604, 3769, 1605, 1606, 3770, 1607, 1608, 1609, 3771, 1610, 1611},
       VertexColors->None], 
      Line3DBox[{406, 407, 408, 409, 2762, 410, 411, 2765, 412, 2766, 413, 
       2767, 414, 415, 2770, 416, 2772, 417, 418, 2775, 419, 2776, 420, 421, 
       422, 2779, 423, 424, 2782, 425, 2784, 426, 427, 2785, 428, 2787, 429, 
       2789, 430, 431, 2790, 432},
       VertexColors->None], 
      Line3DBox[{1641, 1613, 1614, 1615, 1616, 1617, 1612, 3773, 1618, 1619, 
       1620, 1621, 3774, 1622, 1623, 3775, 1624, 1625, 3776, 1626, 1627, 1628,
        1629, 3777, 1630, 1631, 1632, 3778, 1633, 1634, 1635, 3779, 1636, 
       1637, 3772, 1643, 1644, 1647, 1648, 1638, 1650, 3780, 1652, 1654, 1656,
        1658, 3782, 1660, 1662, 3783, 1664, 1666, 1668, 1670, 3786, 1672, 
       1674, 3788, 1676, 1678, 3789, 1680, 1682, 1684, 1686, 3792, 1688, 1690},
       VertexColors->None], 
      Line3DBox[{1694, 1640, 1642, 1645, 1646, 1649, 1639, 3781, 1651, 1653, 
       1655, 1657, 3784, 1659, 1661, 3785, 1663, 1665, 3787, 1667, 1669, 1671,
        1673, 3790, 1675, 1677, 1679, 3791, 1681, 1683, 1685, 3793, 1687, 
       1689, 1696, 3794, 1697, 1700, 1701, 1691, 1703, 3795, 1705, 1707, 1709,
        1711, 3797, 1713, 1715, 1717, 3799, 1719, 1721, 1723, 3801, 1725, 
       1727, 3803, 1729, 1731, 1733, 3805, 1735, 1737, 1739, 3807, 1741, 1743},
       VertexColors->None], 
      Line3DBox[{1745, 1693, 1695, 1698, 1699, 1702, 1692, 3796, 1704, 1706, 
       1708, 1710, 3798, 1712, 1714, 3800, 1716, 1718, 1720, 3802, 1722, 1724,
        1726, 3804, 1728, 1730, 1732, 3806, 1734, 1736, 1738, 1740, 3808, 
       1742, 1746, 3809, 1747, 1748, 1749, 1744, 1750, 3810, 1751, 1752, 1753,
        1754, 3811, 1755, 1756, 1757, 3812, 1758, 1759, 1760, 3813, 1761, 
       1762, 1763, 3814, 1764, 1765, 3815, 1766, 1767, 1768, 3816, 1769, 1770},
       VertexColors->None], 
      Line3DBox[{1800, 1773, 1774, 1775, 1776, 1772, 1777, 3818, 1778, 1779, 
       1780, 1781, 3819, 1782, 1783, 3820, 1784, 1785, 3821, 1786, 1787, 1788,
        1789, 3822, 1790, 1791, 1792, 3823, 1793, 1794, 1795, 3824, 1796, 
       1797, 3817, 1802, 1803, 1806, 1807, 1810, 1811, 3826, 1814, 1815, 1818,
        1819, 3828, 1822, 1823, 3830, 1826, 1827, 1830, 1831, 3832, 1834, 
       1835, 3834, 1838, 1839, 3836, 1842, 1843, 1846, 1847, 3838, 1850, 1851},
       VertexColors->None], 
      Line3DBox[{1853, 1799, 1801, 1804, 1805, 1798, 1808, 3825, 1809, 1812, 
       1813, 1816, 3827, 1817, 1820, 3829, 1821, 1824, 3831, 1825, 1828, 1829,
        1832, 3833, 1833, 1836, 1837, 3835, 1840, 1841, 1844, 3837, 1845, 
       1848, 1855, 3839, 1856, 1859, 1860, 1863, 1864, 3841, 1867, 1868, 1871,
        1872, 3843, 1875, 1876, 1879, 3845, 1880, 1883, 1884, 3847, 1887, 
       1888, 3849, 1891, 1892, 1895, 3851, 1896, 1899, 1900, 3853, 1902, 1903},
       VertexColors->None], 
      Line3DBox[{1904, 1852, 1854, 1857, 1858, 1849, 1861, 3840, 1862, 1865, 
       1866, 1869, 3842, 1870, 1873, 3844, 1874, 1877, 1878, 3846, 1881, 1882,
        1885, 3848, 1886, 1889, 1890, 3850, 1893, 1894, 1897, 1898, 3852, 
       1901, 1905, 3854, 1906, 1907, 1908, 1909, 1910, 3855, 1911, 1912, 1913,
        1914, 3856, 1915, 1916, 1917, 3857, 1918, 1919, 1920, 3858, 1921, 
       1922, 1923, 3859, 1924, 1925, 3860, 1926, 1927, 1928, 3861, 1929, 1930},
       VertexColors->None], 
      Line3DBox[{703, 704, 705, 706, 3022, 707, 708, 3024, 709, 3025, 710, 
       3027, 711, 712, 3029, 713, 3030, 714, 715, 3033, 716, 3036, 717, 718, 
       719, 3037, 720, 721, 3040, 722, 3043, 723, 724, 3045, 725, 3046, 726, 
       3048, 727, 728, 3050, 729},
       VertexColors->None], 
      Line3DBox[{1959, 1932, 1933, 1934, 1935, 1931, 1936, 3863, 1937, 1938, 
       1939, 1940, 3864, 1941, 1942, 3865, 1943, 1944, 3866, 1945, 1946, 1947,
        1948, 3867, 1949, 1950, 1951, 3868, 1952, 1953, 1954, 3869, 1955, 
       1956, 3862, 1961, 1962, 1965, 1966, 1969, 1970, 3871, 1973, 1974, 1977,
        1978, 3873, 1981, 1982, 3875, 1985, 1986, 1989, 1990, 3877, 1993, 
       1994, 3879, 1997, 1998, 3881, 2001, 2002, 2005, 2006, 3883, 2009, 2010},
       VertexColors->None], 
      Line3DBox[{2012, 1958, 1960, 1963, 1964, 1957, 1967, 3870, 1968, 1971, 
       1972, 1975, 3872, 1976, 1979, 3874, 1980, 1983, 3876, 1984, 1987, 1988,
        1991, 3878, 1992, 1995, 1996, 3880, 1999, 2000, 2003, 3882, 2004, 
       2007, 2014, 3884, 2015, 2018, 2019, 2022, 2023, 3886, 2026, 2027, 2030,
        2031, 3888, 2034, 2035, 2038, 3890, 2039, 2042, 2043, 3892, 2046, 
       2047, 3894, 2050, 2051, 2054, 3896, 2055, 2058, 2059, 3898, 2061, 2062},
       VertexColors->None], 
      Line3DBox[{2063, 2011, 2013, 2016, 2017, 2008, 2020, 3885, 2021, 2024, 
       2025, 2028, 3887, 2029, 2032, 3889, 2033, 2036, 2037, 3891, 2040, 2041,
        2044, 3893, 2045, 2048, 2049, 3895, 2052, 2053, 2056, 2057, 3897, 
       2060, 2064, 3899, 2065, 2066, 2067, 2068, 2069, 3900, 2070, 2071, 2072,
        2073, 3901, 2074, 2075, 2076, 3902, 2077, 2078, 2079, 3903, 2080, 
       2081, 2082, 3904, 2083, 2084, 3905, 2085, 2086, 2087, 3906, 2088, 2089},
       VertexColors->None], 
      Line3DBox[{838, 839, 840, 841, 3139, 842, 843, 3140, 844, 3142, 845, 
       3143, 846, 847, 3145, 848, 3147, 849, 850, 3150, 851, 3151, 852, 853, 
       854, 3154, 855, 856, 3157, 857, 3158, 858, 859, 3161, 860, 3163, 861, 
       3164, 862, 863, 3166, 864},
       VertexColors->None], 
      Line3DBox[{2118, 2090, 2091, 2092, 2093, 2094, 1771, 3908, 2095, 2096, 
       2097, 2098, 3909, 2099, 2100, 3910, 2101, 2102, 3911, 2103, 2104, 2105,
        2106, 3912, 2107, 2108, 2109, 3913, 2110, 2111, 2112, 3914, 2113, 
       2114, 3907, 2120, 2121, 2124, 2125, 2115, 2127, 3915, 2129, 2131, 2133,
        2135, 3917, 2137, 2139, 3918, 2141, 2143, 2145, 2147, 3921, 2149, 
       2151, 3923, 2153, 2155, 3924, 2157, 2159, 2161, 2163, 3927, 2165, 2167},
       VertexColors->None], 
      Line3DBox[{2171, 2117, 2119, 2122, 2123, 2126, 2116, 3916, 2128, 2130, 
       2132, 2134, 3919, 2136, 2138, 3920, 2140, 2142, 3922, 2144, 2146, 2148,
        2150, 3925, 2152, 2154, 2156, 3926, 2158, 2160, 2162, 3928, 2164, 
       2166, 2173, 3929, 2174, 2177, 2178, 2168, 2180, 3930, 2182, 2184, 2186,
        2188, 3932, 2190, 2192, 2194, 3934, 2196, 2198, 2200, 3936, 2202, 
       2204, 3938, 2206, 2208, 2210, 3940, 2212, 2214, 2216, 3942, 2218, 2220},
       VertexColors->None], 
      Line3DBox[{2222, 2170, 2172, 2175, 2176, 2179, 2169, 3931, 2181, 2183, 
       2185, 2187, 3933, 2189, 2191, 3935, 2193, 2195, 2197, 3937, 2199, 2201,
        2203, 3939, 2205, 2207, 2209, 3941, 2211, 2213, 2215, 2217, 3943, 
       2219, 2223, 3944, 2224, 2225, 2226, 2221, 2227, 3945, 2228, 2229, 2230,
        2231, 3946, 2232, 2233, 2234, 3947, 2235, 2236, 2237, 3948, 2238, 
       2239, 2240, 3949, 2241, 2242, 3950, 2243, 2244, 2245, 3951, 2246, 2247},
       VertexColors->None], 
      Line3DBox[{973, 974, 975, 976, 3267, 977, 978, 3270, 979, 3271, 980, 
       3272, 981, 982, 3275, 983, 3277, 984, 985, 3280, 986, 3281, 987, 988, 
       989, 3284, 990, 991, 3287, 992, 3289, 993, 994, 3290, 995, 3292, 996, 
       3294, 997, 998, 3295, 999},
       VertexColors->None], 
      Line3DBox[{2277, 2249, 2250, 2251, 2252, 2253, 2248, 3953, 2254, 2255, 
       2256, 2257, 3954, 2258, 2259, 3955, 2260, 2261, 3956, 2262, 2263, 2264,
        2265, 3957, 2266, 2267, 2268, 3958, 2269, 2270, 2271, 3959, 2272, 
       2273, 3952, 2279, 2280, 2283, 2284, 2274, 2286, 3960, 2288, 2290, 2292,
        2294, 3962, 2296, 2298, 3963, 2300, 2302, 2304, 2306, 3966, 2308, 
       2310, 3968, 2312, 2314, 3969, 2316, 2318, 2320, 2322, 3972, 2324, 2326},
       VertexColors->None], 
      Line3DBox[{2330, 2276, 2278, 2281, 2282, 2285, 2275, 3961, 2287, 2289, 
       2291, 2293, 3964, 2295, 2297, 3965, 2299, 2301, 3967, 2303, 2305, 2307,
        2309, 3970, 2311, 2313, 2315, 3971, 2317, 2319, 2321, 3973, 2323, 
       2325, 2332, 3974, 2333, 2336, 2337, 2327, 2339, 3975, 2341, 2343, 2345,
        2347, 3977, 2349, 2351, 2353, 3979, 2355, 2357, 2359, 3981, 2361, 
       2363, 3983, 2365, 2367, 2369, 3985, 2371, 2373, 2375, 3987, 2377, 2379},
       VertexColors->None], 
      Line3DBox[{2381, 2329, 2331, 2334, 2335, 2338, 2328, 3976, 2340, 2342, 
       2344, 2346, 3978, 2348, 2350, 3980, 2352, 2354, 2356, 3982, 2358, 2360,
        2362, 3984, 2364, 2366, 2368, 3986, 2370, 2372, 2374, 2376, 3988, 
       2378, 2382, 3989, 2383, 2384, 2385, 2380, 2386, 3990, 2387, 2388, 2389,
        2390, 3991, 2391, 2392, 2393, 3992, 2394, 2395, 2396, 3993, 2397, 
       2398, 2399, 3994, 2400, 2401, 3995, 2402, 2403, 2404, 3996, 2405, 2406},
       VertexColors->None]}, {}, {}, {}, {}, {}}},
   VertexColors->CompressedData["
1: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
yVbqyBITDs5tLHZt7m/BQ79FxqtjOjA8e11p/Uw27BaJvJ+4M5H/wvt9hacE
8SomZk6ZLByz1/fe9asNrJz9CbfqJQj1y5d172ZC9v0ue10aB26FpyzLZ1C4
9GSOdYgPExbmoyvP+nCRuVbl45AlBV7XI2fZOUz8bbthVnafC1pCkOdTR5Lv
1yOzVOSZ6LKbwQg4wEM3549rFMn3s+qzuu1Ivh+7kLyDUchDPisq814uBZNm
o6jHfgyI1/1U/TyTj647y9/ZEP88ILWVn7yUAW1eWPv1BD4EPwpqV3RS8Gk2
SXRTYEC3VJw+UMJH5qL9j0f/oLDi9xCf1k/HSOE0ifsQH0vr0k60/Zs/6sm4
tk5Ah6PuN/2x+wTwuPy8xor46lCxX0XcO8I1G3KPHw0RYKVVk9wq0gdmMPIi
cgrpkB8aJ1qQL4AcV8P4O9GtqpVI34HoNnnT6KCQUUJMCbznrkX0mVswT6xx
nug/bXiM4mYhQhZYPhlaKoVhw9XywAA6Xiw4GbU5XojYR26tv0gfWPLFVumq
M9GD8gKxTKMQRyKmv83dKsUJfs6eVZZ0RJvHRIwfFkLcVXrIcifx55CGe7OW
0VGcdt/DcpEIRifrLwkIrymbFqsN6tLxtI674x3Jfa/KG3fVDv57noDs4AuV
/9bhnqy8xf/mpMYkJRi8L65A65e6ln9zUhYX1H57JJTi75V5W1du5+HNcQfh
vzkpGc9W0R5WJSZ2XPT7Nyc1PfHPtH9zUnNpeaFv7jagVN5z4lG9dmTYZQ4u
TeFgy1DZnOB3zfAfHruNtb4DK6Y3vN4VSvL6cZhflA0DamNxsGqFBE+c5DST
ulkoH9Z/s0u5DXv6MoomPJYgZpXK/WQjFkxmJuhrj+XgSXzfR84fCZwo+5qi
DCamj0xvL1DmwnZwjkOSHgW/oNxQ+d1MzHFx2HNyMxerdG+8cTOj4LWgcufs
5STfXe7pZk/h4cwmtFGhFBqpvpyplQxsXhnROIrw+/OQI423CL8LTztlFBF+
t7b5zdjXxoNfc+Gw02sK6/1vFd5xYuDGEe+BBDOit8XZ99qZFMIXB63ymsuA
YdiK5389+RhbbNOWKKJwcubfvKxJDKiXLLh18jEflW+c+JNIL/WI/+SR/5eO
0du+l1+eIMDOy9s702RJr5tZ7tLMpCPTd9YB8SIBEmTtPrWNluLT1FNBOxtI
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
Gq9gozA+eHfVOQmMOSt8/pTRsPp7pEfvcj40cg9FyRDdf2k85WjVfCoWG5tU
j7PgY7CGo/nUWwqDF8fee2oR3f+ruTmZ+G3Tp0bsB8Rvx+eOHqtF/PaMLNs7
j5+zkX458ZWI+G3hk8GdK4nfnsLF3FgvPk56u0RHkVyZMGsm99NUKs4Y73Dn
H+CjiunYarZPCr+za9td1ahwXzWWv4fDxq/Erbt+VUrwKmnUXdZ2GlZ9ux1x
Qo2DXbOZH8saJWAoJG/uXUvDVEry5eVxfITs96Q/PCRF+/xHA2fkyf0XdIQN
pPERHOh8+s5hKdLXzixPGUNFwCZXz/6NHPz5a0RP7CL3Z8rNRN05NGj7fsr8
WVEFtYyzsjfPc1B5psj133yut0XpjBOv+Nhza5zVLZL7EpJM0u8NUHBcrTj1
TiMf4oeflJYfk8Lc5bdt6nfiT9rmnz6r9BL5Jit23f77GF8dt9ZNnkX/T+6x
gz5E3T1VBlnZGOFXgzpEXC7dsCy4E2O7V3GnR3MwsXvB136xBEXfJl8XK9Hg
GiehHSP82rz08vScfgmWXz5o9vAn9T/nc1V1I7yyol5hm737r5XxbDRreab8
m8+9Xrz1lx7h+fjzvydYEp4v+SRu2U94rpk3btv2bg6+zN8SuXBYgnSO/fBN
ERWvlidZLbtcB8mb+ePm+fPhH3Vr7L/53CMLSnqb/36AKMLu4VoGHy1PTbgn
yfcyiBvxHc+Fn2VoqzHJF7zqfS8vk3zx4YHUMWsRF09Uk57fJDyvW7dmRk0r
FSkTg6qchc0QTOne/8VciP5kox1Gp7qwwuvK5cKbLZDN/OirfUaIyFmlF+3W
dOG+tnvUyh1czPQvinVQkWLXesWNke+ocN5gOUchjotlDi+Wn5tKeFXQw5hb
QsWECq8tJ4faEDu5TtXQTYSlvS6z9x7oxKtL3D2Hrdpxe6CkrjhVBPr57qZz
Sp2ocKrb+PIKF7Qmfee26VIUtG12vVhERRZ3YfeR21xYLTILsifcfsb9bphz
j4rx9tsPq6STXPij7lXtBjFuWV/Of8tkQDV9gcFvEzrOlMT2mnmLkZu77MrZ
RwxkPtMqcKji4rb5reQWTSnmdoyyyL5BRWJy0079Ti4ujre+81BbilmJGdO+
XyF1+1lyt2MjE8PaaUWhJWKMVVy9NlaLgZSlA9rjXzPR6Zs5+3WNGLYzpiQl
/KWj3UVQe4vko/Zy9fGfCP8Nalr7ykg+mnXKR/XjAh5Yct7avsuk+PsnxDEz
goo7F6JCdpl1IfPKFd0ZchKIaIqL76fToWD8dXRWRBcWlr/YuG+CBJVSaZHS
2X+ff9k2zpaHma8HDERGUoxn/Uy5QfjsEnFJrdmfhwZ1660dpuT5fik63bTv
3/56ZV4H57Ogo8w+unipBPbtRSFyhKstz5nDv1ewsNy7wv3f3OumUb61/+Ze
3SakJUyM52FOsaO0e50U82fINz7wpOILtXnT4wc83P3uJXOQ5CPda3u+v3Si
IifywORNPizcwtYDTwmfxyiELby+iHA7u24oLJkFyVZDvUVbJTAQ7QxfOomO
+n1WsxkfiV9ZZ4c2wmfFm4uuDhA+33HVaizt4aFt8V3Dx05SPLjj9tralIqt
zKrk68S/aRQdNnMk/s1soCpK7yUNwfc1l/0GGw6FWyZQ4yRYuLd6/shjGs7I
bjUPHMOHt24uRZ/wec+JG7ddSM5SypJJ+D2Tj8yd3/V/7SC6XLOsvk6fivYJ
75eXR7FRvM2oJve6BL/atjBCE2gIWqsx92cmG7JWuzcr3ZGg2o0aPimKBtVn
cW7RhNtXjrBPdXuSvP9TzlFIuG3Am/FR3Y4P05V+k0xJLlv6+YT8VpLLBuyP
7T/5lY1PNduPUN9IoOSg9NHMiYadZ9TeHPPjY4P1cI4r4XCK969AHcJhyvVH
z0sv8sEO4Oj0EK6+WTFLICv/3+9bzvA1CGWP4eD9ecVLCvUSOK5xKe7fQEOr
2dsGSzsOliTKWveyJESNfqXXadCgE8s6fc6VA8vw4kcDxH8aft1V3DGThsUJ
ex+eCueg92p7ksG/9/ZPM6sKVqHhZkfv3yvxHEyN4o7mSSXw+KwbMEGBBjWr
u8v6X3Fwa/T9mvOEhxf3WjyhEh7ub58tu5PCQVHw41k3Cd82TTc6db+Hiswx
y68H6nCxXW3Bnmo5KRg1SwajP1Oh3MAJ/KDPhcq6x72jxkmx22HUgfGES7K8
9342G7g40XY064eiFCyFOpPFH6gId8yxKtvKxZfnG3R2KxPO8CfPd3lPhcmU
Wjo/mgtKxIQq3Snk+VblfGWUUuGhdy7qeBoX7rceNwQRnoxjBmTbP6Li2+n6
sh1tXKw6UXdi7Dwp9sZrjzfNouLRFevZf/hcTNLrVRqZL8W7ZJnRW9PI820K
YL/R4OHerlpe3BIpjqb9+mMXQ0WYoYq52hIevkY5BNgsl6K//Xbi53Aqdjne
CnuzmwfVlDITnTUkzy7+ZmxwkPg0m0mfloTw8EF+39PJZlK0Fo6zd91L/OFW
n3nZD3mwabr5IJn014HURMlh0l+XNVfbsst4EPjZdYTZSDGmwjX8zmYqVH4J
ZaOYPIRObm/PdZBiXs3bxbvXU5GdULTGXsJDXWimVq2jFIuNIuRnmJHnMmPP
5gWT+eiYJXjbsl0K09sq61WXUqFTsNy2VpuP20up53PcyXoStcKjFlKxt9Ln
q6c7H9w1CToNe6QQnHHSNZpOrjcaX5IjK7Ht8SyFupYcTBhcqEsZT/vP4y+v
qnqcVX2Ga60xjLO6FNx4E5j4bz63zvSlfcH1Mjw9ZWlo7tIJ/6utv/7N58qO
8ml6tPMNqtiRS01IHSXFDZY9Iv3/hrnuGU3yAQcbtndHUoh/cfANdQxgIdmm
tNNqoJHo3zPjtN0C1EScvqS1iIWF9Kqlv1VboLWtxj1yixBz7ee2ffPvwq6O
Rt+Fgy2wUd3XPuqmEKmPfBPlZ3fh8pxHWmmx7XiX1jDe8boIY30WyO8aZEJ7
f3xD8jIKpo/umx/DFeGd8O6UepJvA6+4Tj8WQsPYlYkGCeZi0JammZYIGAi9
kJZjAzo0wr/qfSO68y6ckelSxEAvw6Muhs9AsKp6atEtMZpsssfGrGGgfi9T
P+wYE8tm03stXogx58/4kGVqDDwYv+SwulsnFJrHRx5jiWHXPfOF7Wc6vt0o
vnbjDvEpPy4OT+oWQ4lbNPr1Kzr4podfdKp0wS0mOf34HzEK7N1ai2/SUVYU
Ov3Y8i4Ysws7l5DcXStf8Kwng44dvwMj0tezcLeUVRa7WoJH7o0nx6wl627a
vDvzFAtbShT+HLOT4GdppflN4qM4JeFTHKtZWPbpbVj4bglZd8J+2x80lPVM
DXQmz7Oyn1J0+qAE06r8LyQJaRi5Fj1edg0bSwdk5q27IMHU4Cnpz0pomHuP
Y73HnY2mBdmX8lMkkAQG/unNo2F07nLtwqmEJwKdz6+aJAgayLuy1JSGSw08
ms/ut9gW/fGLC/Eda85oT1z1//m77f/1uP/lt3nt99iouX/VSfuhBCtPH/nl
HkbDnEX3gm6/Z2OUzIZ5k0olyNqnd2nGfhp+KZ55m3KjFKcmcodc65rw+iEn
8VRzF/YFDk++2f0M1gcOLqpLouPIxkVx/+Zz630XX6/nkuvVva5/8BXh4edu
n1nEVwfNr3eSI7rQvND9YjHRBZ0Xc9IjiS7E7BUUNGS8wBcrQ+0NbSxMvlO3
6bw/GzNnqbb0aXNQu2+V87Y2Ca7cefzV3ZCGt0o3u7mh78Hkqo/z6OIhijkx
IEjMQpwid3vvQQ6sYszUfQUSUKZt+P5XjegmbZXejMaPuL1ZoUFplACdy++3
BrizMKpn9q/WOA5+V5X+vkI4z2qUCG4TzhfyV8oErPyEoXrrN5NuC+CQ3pNw
XpEF/6Qr/lvyObjPd05W+ibB0qURnPcyNHilqW6mTW2B1f1fdWxHITwHlazT
DnWB4jXK7G4hB8Ja9anXv0uwIbxjWv4fKp7eGrdtYHkbPr7S/3FTVQS77LDA
y0WdmGjedIHD4cDki8/4/YMSrHC+aDn/CxUP2z4YvdXuQPCbEA/vMhG2tVRd
jm1i4kr1HvndPzigrh7fdOaPBA63/s7v5VPxpGyjhW8ZBXlbDB21f4ug57dl
c4M3EwEXZ8Z2mJL8PsH92wUFKeJPTr4l00iFvN/q2RYeNNR4rKuOMRXD/FF3
TE43Ay+vXe1e48KF+rUDh5qI7qi0vwuLqKbixUkTwaIYOtYFVcXcPygGb+oH
rz/XGLg8vW2DHfGxW3PznKqI7sinYOVj4mOThpRn/ixmwPxUx8EX18RofNt1
dYYNA8smtVknFnLhYrpt4v1ZUoQkvqjlF1AxVW9a2GhHJkyqO3x7noqxuUhB
b4wGAzQ/OdcTUi5Adw+Q6JCc2/NDOzyF+PyLt0ef7Wdi8faaW4s+iTH9evbS
Bd/pOP/s19qAUTz8KJD9nUV86Y5dHx5oxVMREvis4tmaToimyKy8ShfDfcqq
37lMOkQVpaJYC1JPcvLR5SuluBaSHjMYQnTz04KblLOdeLlkrvYpoRh+F7P6
bevo8FoUTH3izgP9le+0D6ulqF1SVsL2J/qul20kCuyCyqLgB57KEgysC4+I
jaVjQXKnj8l5HjL3defNJj6zMVrweJMX9T99qTGXF7T7Cg8Z8ZVJny2k2NDj
E8DeQUXMEtUSWV8WNt/lfxBYkvz7TFsxbQEd1we+vlGp56FnwdYUd+IzLTfk
/BRYU7Fz8bhRGzJZsIpQk3vgTM6X868VKdH/cz/T21Z1JxXoLJzhb6IF+0mQ
MGr+FS8xDZt/q445O4ePvQsr5VSJbkqf/tl5dRHxG0/cFes12PCSz+MsjyI5
cfH8xSve0XBZYMVKNeUjq2yc33UvKXx7Nw2cm0vF8RSLX5YdbBS2rQv2rSBc
zXI0GdpJg/WmxHUbVd4gZR3zl+8jDkaxFz2oXvq/414dX+/eAZJHPz8aPK2U
LMFgf6pzYT4NjwyvCV8lsUEbPahcfUuCqr/Nux6cJdyrYFQsdarAz+u8yPeW
lWBlXbLP9mbgmbvJjeuWz+DG/XhhRQ8Fd468Wfmwh4WRxx2bV+azwVQIqnO+
L8HJhtW1QSfIfcs6c+15ORu+LVrBa59IELXKMP7WYRrajjS+UVpYhsfqPZJL
0QxU5GwLdSL+Xk9r7hbnH2wcM7pirVQtgdWSLyfDN9Mwr5F9zvHOWwiWTr9x
4iQX3ILcDvpUNpTzQgv/aHHw7nArR6VVgv3aHPdYIxrOrTnUbFFbj1+Pdm39
957mNKNexstYFng3NfIHHDgImPpY8TFbgtncD97es2kwklprFt39CI0bq10v
DfIhd+/Uvus7WXi+vnfDHR8O+AxT1XYeWc/JiA+zptFwdvrHcz7rm3FPSXmc
ylghGOxlKt9Ku7AsOJUVGspB8+8ehUUiCV5vyyw7PpGGDw2Nl4+4tyCgPFLD
w0+IIuOc/NRtXbCKfMUMy+JgQpr55T1fif72xpxUG0OD3ATVLVUL2/Exabhv
fZIIoi1HIjQmd6LmeWvI+zcceNJMNo76IUHbH5eHwgHCPaHiy6LhdrCmjjbo
fSxCX1/l9PM0JtwYTeaJhJP7+1wRTzjJePJsG5dwsu10gfOoOFKPH3csej9T
jFGRse/tdIn/+dC0sX0RyfuKN249HCsF5e9Z12LizystLvcI5pK6aOZd37xC
jNDPqly3PwzsetFk7+HGxdz1Y7SiVaQo/hUZMesdFWMcRyKoI3RQZGZ3PIgU
w9fGc2PdCQb0rj47mxXPxeqAW339U0nfbVwOq2IqGLJWGzK3MLClfvJA/b/9
W9cVfHD/t3/rspytZ8tIfpfvHbtdQ4qni5ibE29RkevZMGa1AxO9SjEd+YST
RjcufYkmnFTpTjiYKuJi97jAG/6Ek4OH6l4Fp1Lhc+ncMZtgJhgz1ByuVohh
yoDEZTIDAx8U7EXTeZgWbtCYYCCFC1tJ2+IMFbu3vpvJEjLxzlbbUrtRDDnl
80tu9NNx/MaHZSObeeifkdpTsIpwhn8te14QFUuPbx3m+3TChV+TxWaLUfjl
5DZ2Cx0pFhTHLQE8fNtt9GHaWilWvE6b7kByemqL4ZpaTheKxi7XP6FJ6qTZ
w+nyAToszs3f9zKVB/+Ak9G7Cffi9o67+c6NijLhZMuz44nP/V5bx9Al5/+K
WrbGnY7Tjj8aV1TwYNYWT6WTvLDQp24D256KPZKIdQs9WbA5NXf2xPUSvLjw
6FiAAR2xBp7nksU8yKialN0heeHXuctXXUleWKdVG6sYycKzBPs5PcQHKl9f
akFVp0NVodrsiSYf/gYNUW/dpOj+q19juJjkd88i4RLiO4Zyjjr9PUxybl3e
5GtsGpY8VGp4Yc2GsfM8lbuXJDC1M9BZ8pCGg4LNs19ls9FWUlD3jeTrUdvP
UuIiaP/JK3W5A2Pdx7JxyvroFfdjEgRurpqZ1UzDuwvyl5V92Div5PyhNk2C
tQ/Ybpuu0+A/0vms6RAbH488yDXNkADsTtM9GSS35np9L01g4+voU12zCd8s
VcpW1Z+jYeOpDZ5mDWyEang1GpRJUCh4HnhyDw0CX5uMzTw2VtUKz6cR/5Z+
Je53qysNHGHbz0B9DvL+JCuodEhwN+/6+OIlNPTFFakFGXLw4KmXtj1VgjVn
D1TTF9HgcO9m8ytb4peWNB4NIXk8Pufk6OuaNPQmv/oc4MnBo+uT1v/gSvDZ
kXWNMZ2G819Hq2y5xsGlkAU9sYQDhqPSFD+MpuEL//Tlo884EMg03pjRJ8ET
3eHxxYNUuP5VHT91Ahfi8rNnOkZJIbqtlufMpMK0e2zBSj0uQpqdD08i/buj
8VCMpI3U54acTadOcLFR7e0zkZoUKXEmR7Y/p6I/L73jTDLpr2TZs33TpDC6
/0hv02OSi1dy19pzudgWH+0SR3LxuNSr0avTqTisZbl0+wgX690NhVOJr5BJ
965ccImKyV+l+vqePJRaV1YomkjxqHZajw/xA/6JyWVcUv/Bjaz0paT+PbK2
lMwm9T9jQv+ezhIeUs1NZnywJvn3Z1WqzBYqrvwpeK38kZzflRT7mOh4i4JO
5Rqi42/s9mV4vmciqVva8LZWDBef3KSWP3QE7v5Yu+YtyRnrZMPk7Ym/otl2
7WxmYP2m2umcgxS8ll63Z34hPpOdNfpDCBO3rx6XbDd+hWk37y51PMGGDVM6
w3X7/11n1+WPLOellCLn9Alxz+8m3FtnNjWW3oXJI5fO6CiW4uo0ze1ChTao
xK34GB3DAudYY0ak3XN8LfPe3ytL+nhU5eK1sWxQWvlu23rfYZm+5I5Ug4fI
wKE3MrJsPBk7RU9pWg0WvNDC4BAPPkOzNI8QX/JpcYh6/Y4GXK19pzk4QwCt
CYZzVjmwYFsg9j0a1YROZteateECOIfEtStosrAt224az7cVIY+9XZvqhEhk
n/g1NNCJZe+SP3cXtEGxQejvYyrCZHu7mLxznXDfP9pHb24H0o74e/54JkKF
t3I0PjGxI0AzrWcSBRW58lcOd4pQ/vXdYFgCE1o5bN/RE2jozO29O3upGMH7
zt1vkmUibyBoknIlDeY7LdNX2IkRdlqlvb6FgQsbQ/KEjXT8YEqPDIWJET/C
PfjtPAMnsp/bfFrMwMn5T1lK5wnPi+ea6R9mYFoUw7ruDgOC2XdNvmeKkfvY
4PFCO8LtR20nz7YS3mfX5X28IcamGTgYaM5A/NbmdV1HOnGesS5Dk/f/WDvz
fyq/t4srEipUKEKSJI0IUVkVhZJUUiFEkyJlqhCaU5kiTZKISpSEJIkG00fm
OPPkOCMljSie3R/w/Pb99bide997r2td7/VyOUeM/baaPyc00+G34MrEG6Ms
WPumasoPi6Ff6fuI/4COBZlxPi6FbER29M/cPY3kprLiJ/7H6Jj515Ae38eG
jeaF3KWzJFhUdLQ5fR8dpmPmv3Q4yEH/jzLO2nUSZDd+r1sxl45HkeFJgVc5
8Ji8omXuVgmy7KhmFpNJLlyWvKb4FBeaV6Pkv96VYIEx5WFfPA02u/vZV39U
IN/tZc2IhINlB32+Zh783/GetM1MqviLg6cfotceDZGAdtkpeiyNhi823HRL
LS6GjYocXkVL8HbKqZ0lNTQkqe8wTtYtx2BV2OHcfe+w2nPjIZc1hAeWnTf6
dr0Ed8Yf1UdFK75dn+K/ZD0HsWE/yp8TXlt1h/r+7SXyXMfXrzEoIv7ppzqN
48TFZs1Xf/8kSHBcsuqbOI+GBs21w5YJLxCYkfb4lBrhCCvtB1aKXJjeyyj0
TSV8KLpd9eXf37n2hxYWnKGhn7NlBnXOW8zcuWzj1Aoeyu1Sdjos5qI+L3bL
LwEXu4Jsh4OqyLnk5UR6udEw5eiA/YbeD9BkCmkvbvGhleJbunSAcH/frnkX
5Hi49TXram+9BBbjW2wM19GgMTgzvfJZPYKORqsMBBM+rBoemHGPg+KSuww9
XR46IjJezG6TYDLHOEhrGQ0+o9ShPt0mtG1taJq7UoDXe1wqfq3kYOts7p6g
uTxQbL036H2SQP9enMWoKQ0HNw6euJTciuFLlOGN+kKcybS9suI2G9QjF8NV
d/PgRvE8nkx40u3M4NEcwpOyVQG6o3M6ICvd7i2rLELe1/5xM4pZ0POq2KIX
xcOVfbkMXbEEzW/sFVOVaUjduzp0U+Qn3Dvfukk7VIQ5sqTI7FiYM/aC7kYB
D9W9ZsbDJEfPluWYy0ip0Oe9WdhyoAu2OouzN7wTYVQ8fx+zguTGKXM44UR3
djpVzZE3SO72fi8ouEXDnBTe6e4aCuRvtEUeGxZBXn/Fq3ZPJhTyetRrCXdc
idx5+PReMSynXa0+94CBhPty30+Sfvh4F+/DVnMxOje1PBcMMrDFXqZs8Qka
6P4UtuFqwnUKAQue9jAQ4BK/ZpOUhtLe0JzwrWIserlxh08NAxsWDhxNmE5B
yxFRXDRbBB1r63EPrjCRWmvfoVRAx+OSmJNXgonPW5VftU5mQOHu7yeKhl2I
M35QmVomwtqYL2MWNzOxbd4y6zNjGRh6XrXRNlYMA0W6fN0JBpwsJdvFVzow
bukjuUpTEcbxA4c1klio2JYv3+TOwG+lzPGHE8TgPFTbmLibAcb+sQY+xMcv
9N8Lb5QVIW2lmeHMShYOj9dPx3EmvDTWKiyvEMM148HzVVMZ8BoNiQ5TbocC
d4IQeULkmFyJ/azORmbBmt0Fd1m45cFenCUVIzndlrb0LR0WZ58EzqptQ1JY
4Yz/koRY+utaBX8RG+f3n3Qz0mJDu2fCSsdRwquJr2fczqTjuqjxkVJ7Kwzt
HXY8sRKCP3nyAZezbLiubGv1v8lGuZxOSPFUCaIfdA0/O0nHoU0lcLjUioQf
Gk2lM4WgfZdQau6wcWNq7PUR7X+fGzF7y/GFEkRdz2y9v5mOY/NElNjjLdhh
8ejYmEoBZnUc8E/7y4aqu5xr3REODjclVno4EN847iyXP5uObxe37K3Ub0HR
rhkm++4K4BDZ+LZxEuHCMbd0Kzy5WFF5hz81VQLlC4/dLLJo0P241fJMYzmO
XV7lqeTLQfzCrQ1aUf8735tq6v1i9gsOxl37+f6LlwQ3zr8on/yXhialc1+1
xnARVrnTNj9cgjN8/8SoDhqaBV/MP45UoMWvzl5tdxHEAS/K5hjScbU9RuaN
2gv4LjF0P7SkCQNLhyaORLFxS1j+KGQGF2ml2iV6MRLMqHf7Op74Z9SSmDXe
llxkTfY+onFRgo0TQ+xLS2lYv74qL2lsKVYxTF3ype3YQqt+wiacveSAsjTn
LMm7E7K4vEwJbpXcMnS5QsOyXd/8flytRPDG6dmem7mo6Cj/nbSLC8O+uhsf
3nCRrbJblfGc8GrQl3z2IRpaDtu81ZvxAU7ufz31zPgICdlQHDDKwfSE8prF
MjyUcEykF+oIl1rOGn/RgYb7BWrXPa1qMCFm/NjuKj5OLfrK3tbHwQ7/lV2N
U3ioDH4+5VSTBLtesq5ttqHBy9uxYKSpEfqenGrzMQLcslZ54+HBwb6LtNwE
4nvnJjhsNf73veSXtVQ/E9/72VqxOcSvGYYTM0NUjwnAT4jYlTKLg7nP/v7Q
deZhice8ot0kd98eCDs8QnL3+dD3g6set4NjFWVizhPCYPrDgypsFmzi9j4d
vcyDo1vWngapBM/fCI6vUaThkVgtbKJDB0qv9kYaa4mQO/LOdclDFgIGVq8N
eMGGxCxL/9x0CS5SNwSEh9GxM8Y8YKC+E4ae54c/PhIhfs/OM8EiJsb9dHa4
Rngm51OHpg/hmYKOU1VJhGeUL9bcR3QXBm0S9CpqRAiNzB4dLmXizpKzV/Y5
dcKuqO3Pw2siUErN07qVWNgd1DaLmUeFuXoLd4KeGOsnrZnlqMtEkI1eu3Ns
ByY83XnGZhFZZ0rXzNhUFvrznkrKJ9Dw5MSnj2mLxUjfeNymVJaJh0dFQ9Od
2rHwbvwBVAmxMlZml6cMG0Oby2IdLOm4tOqq1wNvMRS2XXhz8RkD2oprInMc
2rDTolLzgZ8Qf9993mzkwcaCAwOCQD86FHtPvarYJ4bA4L5vQA4Dyw8GT01Z
3Qqvp0//vhsnxKxjJx4sI/vV4L7vuWYvHUkhlYV5UWJofJw5/nMMA0nj2g2t
vVqgkVbekFksgJxb9PI9shxwC35eayE/X5R22c4rVQzzxkCtA9sJv+kmKRnc
Jef+Rnbpi1MCpM64eMyd+Evs7Gr2mvUsjGHb3upjitHLj0zLptJRmdki9b/d
RLj5VLDXVgGqTp/MmmrGwe6EQ3e641hoOuxkPlskhsrXi/KL6+iYvCLY1uf4
R0Rk6HoFzRSgdO/2qZecOAiVnz+0xoX4mWJG9q/xEsgzSve9S6YDYeoZl/c2
wiFz94M9n3vg7PXfuWt7OBA6PS2deJ+NcVs7dvqrS5DfOEmmNoJw3bfK5lPK
/+HP57Vai571oDJ2+N4Nwu1PrD63bNnGgZfqBtFlEJ6p0+ZXmNJR+Nt5uXVl
Pb5HljstCOvB/izeLrlM4js1VbITbbiwKPH/z5pw0fE2ldcTn///OXeC4ZjD
zhEcaOREzT24QYLAX2HOwbp0FDSsSdn3hYPEnNi6v0ckcP3j6mrGokHvy31v
z7/k+vZZucfDJOjV8Yu51EmD5Op5nWnGXFQlCJ3az5A+vnz6p9HXNMgJqxaV
RXMR1enVPpxBeGk4kZeUSEP0i5dr+zK4GIfaqs2PJPjOeqjSc5KGtmebK+KU
ePB73OlC+0+CSgXBVNoaGnau1rsvUeOh9pfe10XN5PqvspuNVtIQN4Wf/GoZ
D0bvzrkV0CRonbMv/dQ84qu2jV+Wb+Ih95lLVjKpd7EZuz+D1DvrRM6PMMJz
Q+Ni3L+SPHvt4ye3cYNUbPCZV7aziIM/D2jb9u2SIPHp+r1FozS8rK/I/shp
g77AP/f7TSEYJtpvRHPYJG/Hfppn1gb33QPb/3gIETOQ8CPfl40OjStqCWEt
OJyfr/m9QoAX7iZXMkZIH/1w9NFDYTPG/rYbeJAggJONq+1YDQ78bE2Sn679
iND/9lT7aQhwVRqxd9CFgwpW8n0330a02kjmtvX1oLHMYyeT6MeCtf6z5Gs9
4QL1G3uje9Af8jcn+jYH22dKWZOO1ENnnqul1f4enJ97fDk9l/Dn294lNX9q
MXHT27jfBj3wdqNy3GpJHXnZsDxCavG92W9RyMQePN4y9ZZnOwcHnX8wPY1r
8GvKn+1hL/mY8IV50eEz4cy7KS2HPn3AufItbL9EPkYYf9/mfiPrsTx4QqPj
PWKDvx/4qsKHRXqfvESW6M8+td8/hosp/RmspSR3iBS+uC8m57460uQZvaMX
czt2HHma24tQ/dFAheud8BFvdXlH78XK6311lAe9aB5jNKsslbyeZ/C6jteL
rNc/DMY/6oWy1uuuXVc7kTx560VPajcyci+vZc2WYuH0MaYJN6l4rr5iea+4
F/WLWhKt83qRJz89cjCxEz9KZy//b30P1sunhsj6SpG6MKn5nQ4VTnt+yBh9
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
7PVI7aChJ9ujLTyU8KXLZjPGHtIn3Qd8dKZSyJdX77CL6EKt4vk4IekfA4HK
wT0lNLzxP3O275kQktKqw2ZhUujB1zr2F5k7qROXn/guhNHTTVsUjpM+1wxv
6CY+8FX65iv7IB+jKj9lZSpJoXr45KDwFbl++O4XFnO7cFfRYMznOCnex79/
vLyVBuW1u7+udelCT/2Bso4LUoyfzow/8paG2fudeu8sFGCNMFWHv1AKnzMZ
u7MjKRjRRUFhvc3QgKm7dSbhpow5O15pknzpz81OXdGEL3H8ULfR3RB3idRv
lhBPF041ujiDgWdh/tEv3MXokbAX9b9ggr6Iatng3on7WT26KRMkmDRJqCWX
xEAsLzJznp0Aaa4lW/TNpfjz6nzVzEMUDM5FHLzxmYObz9oOBPx7vvjZrBXG
nXR8t0jyuraKgrK3i0L2FDHoZ0/tdbNk4a3h4jMbm7hQna+EYy8kiFpndge7
6MQ79Z7Sonm492KLjkQsQfLHU1p/J9Ex7/20t9/6WZg7++f0pEYxmjyK9E98
Y8BjEWV56LEAubdLVHj2UthEfH3R6ExB4bd3yFFzPsYu3CE8Ml6KoaKXsTqN
FHxnyclei+cg2vps918nCdih+2NuqDCgVX7D33ejEO4/zyX8JNzbmqiawlcj
eZgbXeJdw4fSuJqRDi0p0uOVY1NuUaifxtuQAQGe+/14qGgmRcNk1YZ1RyjI
aFA3KnZwobG46KN/igQrR81g382io/Fv0po1DkIUay04b0uuP17JT2sV4Wr2
9YBls+4IYKtjofxrtRTOM6WfbrpQMJki6t3qzkODacSSEL4E8rdnZApn0rFu
ccFvlzwhKr5//yAh89QxqpsznczT7eeiq6qIH75/oTt21xYyd+QKrkmWUrhQ
Mb7kCZmzNm4Tdq4l+SkfumBnOJmzVmo33lisFsKQH5k7zZv07ZXeI1mapH8y
ROb5cUJUl8dNVdkvhVlTzeYnEyg8xYV5NTQeLtAK64sH/72nIss6/isFm6eP
BnMrhNA+v2CtHMlz+4Ek5699NBgtTVpe85tcf/Os0TdPkHM0aehOHY+GTexk
e49+IQ5eK3vbSc7F8BzJDTsBDQ+D/5PdeouPUwbXP6rNkiLxaNvYv/kUEjn9
T+UMm9AcMnlx4EgXEmr8fwaUduLigIXW7JUU5O1WNl9TEKPokUqaxnIWvim+
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
Qrwc/XHP1j0cjHQ+CdwFHu7Y6Td8It9PdV7oyJhDx9nafbLLctqQef3givaj
IlzSvsEpW8pG6qJF4rgcOlL6VC1XrRHjfu/1ubEUEyu37ini3OHBqq2y+tdX
Cb7yvm7qkaGj1ULePVDIgvu+XU/KGojHXdHR2tBH5lqXcea7nXwcUHFYEDBF
CufhlvUOlRR4DqnJ3mmd+P5Qsog5jXDsSowOIvmsqh8hJ7OSj9lX2j+9miCF
r0/T+owG0ocTSv3P3uXjpNOhV85qUkSruj1IvU/Bcy5P0KoowJ2lE2d4Gkrx
WZWmfjuOwnFXe0HBAi7p/97jRafIerdtlS4ppeOhZs2JWg4fY05FTNKYQ/Ln
S6654lUK3ovu7bHaVwu1bcdbdvgJ8UN/TL3dPQ7OlL6OmPqBC4OzarcWPJfg
zhHJXws/Oliz/sg3EO9zmxKWm0287/ibnbq/09hI310synam0HLNueulohi2
Gcdsq8xZeOEzsrN9Bg9mZk8mHWgk17FxvS67jA6zNZKm93FsGGz99TCb+LVe
W/7UCbUMaDy/xDC6zUPulNuvYkmd5zRbHG2RpcMj9tLDBHk+qPzmZytlpZg3
+ZNcHJuCld3UMlN7Psr8asvt5aX44W9/Pf4DBelvvtXZrVwsvhRl/yqZeJ/a
1IRTd+g4kBPHvpXHBXs8rpXnSyD8cuTo2HA61gsPyESr82DwZ9f3jCYJ6Xu5
eX+X0qH/fGWU3AMeeMG8Dtnv5PMJkRvZI8Q3921+3zTzLUqvx04ufMKHy/FV
lx5P4cKmLKKi4n4TLHXX123Q74bs2KtH9yZ3ou5kyPzwR23YtH7/G+coEbKK
2eOXmLOhUV9urLmPwuMn8642TRdjadeK4nfGLDQ/msmIOMvAzZn7s2QCxXgm
Wzj3WRoTVkpGIR9y2Ij6QTlm9IjB0G2NPlPOgMdNxempok5kOCYG7tEiOf+L
+vXLnwG7yRZPwySV8Gp/dungbD58ry6PZ5D5GK/rL4lpaoRSUWjCO1YXZnmd
Wx3C7kTvihWu28pbUXw659TM1SJUXa4qVznOxuracUmhfjSUKTkZj0hFsFqS
FLWGcEnLm4+Pa9LoSKzNrzlrJ0aaqpzoCJOJa1Y5D6trWIibWfFm+L0Y+cNG
McHDDLiHFR1eX12B8PHNe8oTeVDqnWCzyYwLic2d+Xp/P6F8cOcrKpl44thx
9T+mEQ6fVdemOqUVruLE9vYxIvx57C7VeM2Gz/fP248c4YC2IbU1eh3x0/pl
lrJaDCTnZp49VUDhw2TNgR9aYrQ0Rm15rc5C1i/V2z+Iz761suwIJD47/4Vl
yj7is66dSooXRnOwzODL2cw5EoSbr02ZvJOB9865pe+Ih3x44atquUACm8CM
38KtDMiEfO+53d2JoUU3k61JndG1f8/yPYSv5jkHDeu8wfJoP9aKfg4OVjol
me7lIl3y/Ke8Rx0eMbavGF1GPMX7et+nSOJTI9825Ks0Y0u1+c4m525c0Dfx
ztnfiR6VlokhVa1I+KD8dJGdCHdjHSbKHWNjW7s2ZT+hA6ELO6MHnohgGv0u
XamDeEX10gRnTzrUWdXLO5aLMRIWN0PhMxPusiwF2SwGPp7ZLXszhOwL3Vku
PoWJOwlqtBGNV9Baar3syGEOGO6tF08Q/1JzutV8VlCLVbSlqXLE++yyE5fe
J94XpzKkP3SoCQaqGuPDZ3QjUC7lOvdOJ6b6uZzyMW7Fg333w3coiqCfWX+l
qYCNai/LVcsN2nHts3zliYsi+M67H/9sGhulMWPcfWMovGjUPHh+phhrLKmD
PgtYeHByisWG+S8wg1l2duBHJ2qmlf32TuDiqtOQNPXQezzMme1/xlKI3XTd
Ce9ecxBiVNDnSmtEnGWkrxmnC5Ins+MnMTuRNCr/1CCZA7MKq1o0FothIJ8t
6R9igjvD8Fvjxjak6AY0rAsUkb6GrciJDYW+RBW3mY0o9bo2WT69i3AK988B
st8PAncZHL/UBvasZcceHCFzwXmSvN5KNlIebW4fOF+PeWEjljf6hJhbuEpv
kjcHqfm0B2PaPuB+R9eMnrtCKDQwdDLPcJDfP73uEOFJe+UxE54TnrQ/8mlA
j/CkooyqyWvCk179s6oqCE9qNN+urCQ8+exFA+M64cn2Y/Un/vFkEf47IyE8
mTNhkf4fwpP35TYfkxCenBvUd/sJ4clbMTtqlhCe3D7N9MQ0wpOf5gyXRBGe
vB2Qnli6oAtLPBdcOH1GipBfjDaFFho0vgxomku74JX5dXhKrhT9jfOHLJPJ
5zU69H88qZHL7vrHk+/OdPn/40m/uZLLqz27cDpEeMX9ohQObpf7wypokNlw
40Yw4clGubuL//FkuWdY1z+etEud5PaZ8GRlhR9vEuHJPLfZJf94csYL5elX
c7vgpGU1lpEuhUD7ePv5XBqSv9m2Z37jQZxA8Z4Tnty/zHfr2W4KszSW9Vmc
6Ya6IO+aYyXhH3fbph87aHCPGT3Ue4mP44p3h+iqUiSe4Y2PKqQQ96OuZv+Y
btybnkQLz5ci3uW8+8EEGnLjvn6vC+rG06etFxaWShFcHxH0H8mvsTsDbPdy
unHNKWi5U5MUK9+XBCla0TBB61iJD/HJat11t11dpVguXe8/xozCDdrepJ7g
bpz2eqrmQ65zRudJSeVuGn49mZWxgPCkYaTnjGWEJ8dmzDfYQ3jypZ3Awv+k
EBuNuv9btE8KH88X247IU6CPG3x0ifCkzLVIbxvCk1MrCu5zCU++pHteNo3l
IMzU77LIUQK5HbNUImYwoCSzt6+zXQiVT1s5lyOkqL13NqrlCw0j2950aSfx
QB2f4+bcI4HPm3d5ZuPp+OB3L8llQxc2HXA3PXleihVGt/jaNTS0mLxtdcgn
vG0//cPRDCk2hrdedbpHg1aOdeWt5i78GXbV+5wtRfEN6ezwNBo80r5fe98q
wP6TlyMWOBI+/O3Ac1xNQfg6aNvVxULs2l7rbO9J6rbLdNfiORRGV489mEVy
bfpSL8F9wo21SXr+GYQb79x7vq7ZvQtKiWay1UlSHIsY/JpeSYPSgrYrZYQn
ox7X1/0mPJlxqTflH082V3/f1pnWgUvzTgg214mgF5hcof2Yha5ZG6m2h0z0
aF/MLL8hhtc24Yz364iXlawqu9BPcnjEKPKujgR+We0ndH0Z+KFRxz4o4mBf
97PcyiAJlN861o/i0WEcOF5t/yYe5K0ef57Fk6D2NTPsvDodMlvtvd2JN2oF
m88sGy3F5j/fQxM7KNgdfXyOR3hyy+Pv9BrCk/PWZv7dSHhS7UtHl5oPH5dT
i1m/CNd9Gf19olEFhcLkr2oxKu14+f7ymlHnReAUNO3Pn8mG5cnWz+GnGJDm
7+vl7BNDao9Rt9OZoJ8ZLE1k8VH+yDA7WVeK8L4FkrnXKGzx97XJH2SjUbfp
o/iXGPKxUS8+5JF1Nf8+sC9CgBHt9yMfVkohP/WeaY8PhVMP7LRNTnBwrFdg
OkR8ZMutM7ffqpHcPzx76MR1AVSidY6brJLi/HfKyWAbhSs3n18v+y3A/JFF
PolbpEhI+2h2ZSmFjpa2JY5uQryJOWWl4SvFx0UrziXPpKCYURvx/A8XS57V
0QNqJKh4orM3eB0dAcpl15r2CZGuMyXrkr8UHWvthUVKFI4u+RYRFFgLlt+X
PRWEJz8lUYPTCU+euOXeu2ssH8naxlwvGXK+3tkKwaHI/OhIk2tvRdSkyPOt
DiLMqJWfG3OYDXX6whnfD9ChZ5ewbhhieBj09z3oZkJ6UKGjOZ6PvcJDMptU
pCjP/9t2tphCp4nl5SeaHLiF5Be7Gv3797GX1+dvZGDG+avWkZsFOHD9quXe
pcRrGrJSb4dQ2Lo0eeHT5wIkPtTzWL1WCt6LuxMnO1FYPzBY9nGJEC5LU1qb
SJ/HZHREaOmSnPGYlLW6mAcZycFnF3slUNvz5n3VEIWm/zYHFRFuX7VxawtF
uL3lZHqMN+H2Rw6PxirN+Pd7E48rA4yIz75s+nb2NIV5b8L27JwixChKLnH0
Vin83fQnPDSl4FUv/8jK+i12dTXlLq3hI7hk6nXTyVyIJsTnzjjdDMmnC9ns
cOLBq0S27nadyKnTnVH+qANHP9T7n/4oguaw1puHeSxcHlKLzX7LQGuBX9m/
90q5Znn4/3uvVK35E02uOxsmeqlLrnHESFppEK3cxsCV1Ey9/QMcBG1vqb8Y
KsHxb8ev1FN04ie51g13uGjR37R78QMJrL8t6XxwlI6f+Wq2j/WqMLiPJrVe
wYc1PW5PvQYXYxqWnFrU1gR/Xf+7oZbdyL7B/XLhVCcYmp9nHue0IyBy57T9
D0Uw25ima8tjQbLo4HTWLAb28w6NqG4XQ8NwV86WF0z0lphMjG9kIbe9w2v3
BzHGWi7PHD/EIF5aW7T+LQc+FouvzPeR4JLZpWaqj44bJo6/YrQrkb5D6cTn
Fzx0xVMnLxhzCQf8mJZg3IT8Oat5m/92YSlrckX8m06cu7VxhD67HU+sLiib
XhBBcl0+OFeVjXaum7OKMh8yKlN5j+Sk6JEev53LoFAx0HX+phMLFa4WOs+e
ihHoWK7op0E4qtLdvPOoAMN+0fETQHLe5O/NYHIeW7/lLXo+wMOvmztniIcl
eFbE8NYTknPUGhp7ZpwA7qeyQm7rSzH2zST69LMUDurErl15RoB3/0nXaZD5
/v73Kp91OylMnLH81/ZLpVgqrrYa2MhFxv40UcYOLuSrl6mmUR8hkyHacITM
Z7r00YfbhhwYMOJuFoS0okHTPO3BfBFZD2PTwHU2fB/s+qnUSsNpRo9K6rAI
V0PmvzLbxkLttOOeDMLjEz2OTT19Qgy2atqIQiSZR7miydb/cfCR13fxqLEE
Kt1D18wciZ/qvaqp+MZBb7fn4sADEggcTVvDWMR/PY4f2N/0GgfOT5opzyM8
qVvq+W4fF3Nz8nRW1zRgluZar1OGxC/WLVXMXs2B5/IkGE1qxdik9WX1o0Xo
kxR2/PeGjSkvReetXWlIH735m69YhP6gds6LSBYss3zmpN1goMTKRb08WAyT
iEKfUVeYSB0U+HIItzfu8Oh/SbidU5+9h+PJgLx/dlKx9iskbd84+j/iBy5C
o5y9hG8dni6vUCmvByfVqTVxRIjRbvrX8zzIn/99zmBdfgvkpnLaL/O6Efmg
8UYRm40RNfWnUzxYcF3OX/z0uRgrox6t/jOL7PvC6johGAjYPGvpBG8xFo/L
qdR/zMSe9Vr1J2c14rz6vdxDhCcXNbqXrCA8abl4fdTuiXQYHZ06xsuY5NjG
yeJpo1mgBaQGu16sRzVzb8S4fiFsQnVmdHhxIM0+FP2p4wOy/6Mi9t0j83b8
uMfehCe7Hvu7Vf/sQoDc+ZYHeVLk2o7OHJtEA0P+2iHNMA5+BsjoBa2VYGEA
2tq1ib9ErF9sMoqP30rDczv+SnB11ISVm7gUhq1uTVMnfctLN3sqInPkYu+Q
bCHp20l7W54uchYiKlq6R9VHisaY+bNvqlEIWXo1S+mbEDE2s/42HpOi/s6N
X95dhAPNJ+lJXLtg/ohdNZvMd/0e06k9VTSsfLnGal5hF15nHa5df1MK2Xdh
9o9zCF/FMk1enqTjtKddcayNGOEZLtvc+Ey4HH4QsNWkG/Sde/QKn0gx65dy
6tRI0q9HF7bEX+GgtWqVQcQWco6+XdnTp8CA1hfr6/d3dkPhTs7w3VdScFqm
bTbbR4NB8P6KyMk8LK4qXltfT7iU1+G53JoOr4qc7cOx3Qh3uOc6k/Ckwtz0
7h2eNHwY3cGJ0ObDMHjk0Fcy95PTf802IHP/dUzw1Rf3u3G/ZcYG+/dS/Mw8
UKywiYZRHot07ozw8fl9wcP/9Mj8Sn+2fup5CrzWRpXT77txNm73knUNUuTv
e2M6bQ0NzUEprfrJAhQ/5fJ/2kjR9TDkd+Z2Cu1O4y5m8Lthk/XAgiL8yZvm
f3FkJQ3Tvsg8uD1BCDmXfUcnu0mxbvol4+uLKIwP2Ftb9qcbe/pVU6a1S8HI
Dr6YbE4j60qlG+0VYqvZRC0tMn8L1qcMp0wj/N+z4YVSYRu8ai8Uvo4SQSBj
ZhBtxkbY5mgBr4TsI29nWHyYFIfoSt87B2mIFPUciaFYYBbJG7TXiTFQFKmS
PMiAQYuDi/SXEHunLR0bcUIKOcfkLdP5NKww/fCj5wkHS+iXX3fvkCDSIGZe
2wjx/9ecGm8T4u0Kabtvx0uxdEZ6aFsjDbZvxOOCnnEhdI66wiyQoKt/P/1v
CB0xixyv53h3IeZD/xcp8Yu7zNIDm8tp6HGx8/p8nAe3acWRV8US/HC7VJU9
mY6lGnofi8924dZziVrrVSmMfo91vlREg2fvFWHfQj6O5FzYwxknRQltl/3G
Jgq73y6ofF7QhciFC8ZbkD686hGS3Ur6UDo2n/6rgo+UfXqLv2pKIaMltfTN
onDEOazwIeHh+dgT85XwcM+n9IOhhIfnLbTfIVgsgKXOui+2i6SYeD8hlffv
uUh6iZHdZQHGXpnko2srxU1jyQ4bsr9qRnsZTlwB9g1Hj6zaKEVZV7ixujW5
H+FZ4x3/CfH6gEmo93YpmjPz5v3Wo5AcmKkVv0OIq55eXnq7CaeJckOjVClw
jZunyCUJYXnedPSxwH/PY2Y5icZSMFK6Oj3gtRDssDU+WoS35bO0HQoHaLga
UTd+s0CINT37pnZESrHmudo7ZwkNFfofaibZ8HBxmmP1fZYEA0OXpb66dCiv
ennt2NtGXNhwSqJJkXNsp/JhhNeJNOfDx8bn05ASfdN9/oAIE99tqDX1ZeE+
v3BpuBYLN39Z+855RLji9FkvF30mRvnXjd/xuBMi8/XKlqoSaF1ODsk/wkAv
7c6IVRkHyautfM56SzB3pGE4Y5COrvDHvxvJHBMt2v9mfwr5vEk/+GYWHSuO
To2TY3MRvWnXootvSI6t2R6+Zjvx+bi4l9FpDXgfP8c1bk4XVrfmvTy/loOb
wqeTFz7h4biP2vZdhMe65/Zrav2hIPOIGkcdbses2aKL4ekizKrcm7DyLwsp
MkG7bk3jw7HPlZNG5nvClNKoRjLffa3r89U3MKB34vbo+T5iKN/eUXLuARNV
yScjXX35qEipfG80VYqp2z5mvS0nc3x356prioQXin/3trWKkSwpgbGYAT+L
851JD/i4VHN3cIG6FJFPrL505VKonb1ReT+ZUxtmVd9OJXMqfaOmpdZOBr4E
/mrp7Obj/aZQK6e5JIfLzWwLUyhE7/4Z/bCAA6W0lxKmhwRvLLS3ZsgwMGSc
oHFhtgDy1i4/XY2leJ4qDi2OofBX87whzYILpYU+idx4CS5XW43e/pSOE/OD
UhocBNB74Z61dokUfXWMI50HKfiYz0yfepeLqe+KF6QTrutLWXXodwQdg+mc
5oC/tcD5z3Yfo4U4xUxYvzGNA4eqjO2fR7jY+zA9VOu9BOadbz8vXUtH7YLL
9bjfCtuIo3vMV4iQRE/PaY5loyBoz7V0ex4mFpYUhHZKMPIr+7mbNh2HNrhr
SNMotJx2646aLcauxVEDuTosJG7+udLkBg9zhbKxW79IcG7AJFJ/NB3DSafv
JCUzsVU51cHrqhicA2cu2G5iIq9s/QSJkIfcJKcTkt8STBp02av97/8rag25
6T1gIzVZXfnoZzHeHouVVyhjYONh2aEOXT4OlwVGRo8h3CVftkK+ncLFqqjL
/MkczOZztt+aL0Hx1ZwzX7YxkHVPI93fg4/6gJR5lIIUaz/f1Q2soqDyGYcC
bnFgF3ynYZObBPtDmV+nT2QgpnnxUFAi8cFj8Yc+Ex8xtPij7/KEgr/Eu2Gq
EheUovON2VHEFyrXORvV0VF+IIW5NZj0v0z290lpEtw5W6gkc42s16G0fc8r
Lka/vPD4UJEEO54K/FcF0WE68SxO/ubiT3PanKfVEgTxRk2/u56O6Uc2XLhp
woN11M8GJZoE4zoNFvcZ0vHov4asbF8e1goU9ukLJTh1/EbtQRU6ihgy1fWk
zlfWPKYOkjqrLJ4yfmAUHWeOJtzd9b+6zvybyrcL44akIk1IKFGkiEia1EWU
iEiDMaRonjM3GFJElFRIZfoqkkSjilISUWZnnpz5ZAwJ8T7+gPfXs8561r32
vfe1r89ez3PftRz4JdeObx0UQ7NflenRT8bnORvDdXqZ4O5dVVatLUZy8kr3
LH8qfG2OdioPf4H7+kPXKnW4KG9LdY2WZmOTUY/RHucm6B6pfeEfIIDlVmmv
YDcm7EsDF45Et2FK5Uf5lAdCtI6+MM0doeN8gF7dmhYy+o0XvC3SE2Ht5ayb
PbPpyLNj6gzr0mCf8lGpP0aEyMP3vaefomHyN45lXRkdLTuDcoVfRdjiUzs4
JkWD36vyiuJhBkYknkUWwyLUb3gwZQPBy9nu4yGPPVkwyOp3SrESw+3cpUXW
xlQM9Zzc5RH4GeIj9nQLvw6QLG7vV1ZnQ3yuST+8gAW6wSwS00MMqYCGN7KT
qOj9/WBGj4iFDJWMUYuTRL/Lv55nyqagu7xsVcK6RmSGHxi3khXAYfrY8qK3
TMx4+EUrXaUVBd/+i76yX4juzhlyVr4MUDcv8k2az8ZaFzlh/SUx1p5438j8
QsGKQdLe9ddImGbiIXnXK8T37z+yg4/TceKHrRJjMxsfW8ptPiSIQYuR2FYW
UWBufTX6tD8bXLe8ncw7YhQcerbo5H0Khv1STNwGKXCQSZOs3y3CqWPbvd0/
07CsnXda7h4Nq2SGfr5LFeFv9pyDvU40DHmGOJFD2Dj3xvDavPtiuBg3B9Uk
UzB6139JSQeh91sO3QmpF+GQS8XLrwOE7yoMXl3NZMCyS3WtZEAEw6d1sx4W
U6FJcni54RETPNOppyfe6xDZtDMm3uswDZl8PV6mEqn6TR53Czh4mHDnUrQJ
G0ELl5zx12bhS75fD5vg9I205IR1TlTYkO1IYSsa4NF70MAxl49cB+dAfwUW
nMo3Tu/by8JgQtc6501ipPpGk6WNqFBiBx/YuaoFVv7NvPA5QtxpCSj5UMSA
0amGb0UJLMQmRDc77RDjfe0Zw73KVFjy9ddfcGzHiEWrtahciFe3Mz28vtAR
eRxT1IpY2MX+mzuF0Nvhe4LNU2SooF1/XBLzkwyfVPWiTl0R1JikB+uU6ZD6
4btzyxsWLmW4yTv6iDG0oc/2zCgFyZu0vWIiqZj0n6jmxlEi/rbfZxjcp+FG
YlqQnhsL201/a5+zFCN0rSnZ2ISKtmfOvqsaabgzoJN1PEuEhblvKXOsaNA7
IVub/ZOOp2qKqZYE/y7WPHbZluBfnRK31ba3GbAYeC//RyRChMU/wxlVVBSF
Ds3MXsbEldemY53SYiSaOk1TzaDiks47udd3maiRN3t2Yo4YrQ/DrZdepCI0
jnFXg8vEkpw/mcVaYmyJVF9rdpgK7WXPBP0Sot5X2U35vVBM6IV4XPEgFa82
0Nfs2sfANdrXxVlsEWYsM0pwaqaCt/WjxwDBW9ubUlXkAkToml3tk5dHg0Xc
nm1xRP1l9oyEjp4WoZBiVbeC0HGbkM/dYffKYdxdSAnZyYbX34KpDoQPeN+v
c/B2UB2mLmaNnujlQbOLIpq7n4WU45Ok7BKawLm1sq42XIDjVdTs89ZMLNMj
bTMba8HMVu9GQ08hgmqPrzx9iAHyb58v5+60Q4upd/5BrRC3KmaKXYvpUFL5
dv6FOxnmMt8NJs8RYVjuNyvBjI7qa1V/TYspUHwelTZsJ0J00Ke8u200VPjV
DFK8aDiy2WRTZaII1nFc+3FfGij8TT/sFN4jf3JR1jDRn+8qp+tMOcNG7WRv
hVRiHxNNZgddIPYxYrVDzZAlDeqm1yNNKDSo5a0uYUx8fyEfQc7YSIPvhfXm
qum1sPw6o/VgBg+L129a+I3I13Mru95xPjYiTGVT4sqVAjTd1B0puMbE8xu4
221NgVpmT+y9NSJMex3abd9Pw3snetEz6xaoKlVJ7qkJcbHBf8nrfAZcBTsj
zNtboSuO2EONEmLmKWHWVAMG5m+feS9TrxkJri3SrBKCbzLf2IZOJ/b744qv
XyLaMMk6UHkmoc/hG8zrYkbpcL928ud8OxJSX9esshMIYRW/5cmuS3QYz9jS
rhvciEN7Ix9y1CbO4VuoHJrLhI3DvRtd98mQSbnzbIjo7657NHe3atNhdWFj
04rrhK60e6V42RB+6eg+W1MWDSFu6xLHl1PRf1hjeKm3CJ5rMpqVXxDxb9m+
eCTpLYQm9p6P57CgqfXIXuMKG8fjG7sOuFLhYuPm++OACJRj4rS3j2lYOvjc
fPr3b4icO5xZbcfDgaXBrfYvWWgz8DX30ST8XUNFs9FUEbYaBdj6bqbjssb8
PXuGG3DgYFCM6y8+zPZ9eavXQPhe//0KRGzgPrMwuERLiM2zGkifsxnw8isy
2Xq9GbnGCsyodqKvSSsnJYgYmPSko7rmTiNkzlw9sHyxAD1Z084GpDEhtbra
m3O8FWHHyxv6TxN56Lm3qcuWgcFQsQvX6ifKFXmn5pzmQ8F66mjUYhZcfHU/
mK1px+ehHfKX3gkJ/6s1c2UtoTPZFf6tlnV4m7k9rV3AQ9bi/s/fD7IwlnAx
2vwqCe/jd4omzvH+tm3o0bYTdAiUvDfuDyDDJahj4QwVEV4+jjGabUJH9s81
m8SEP2I9jegPXybCOCc3/ZQiURdr1m+siSHBJcbFUY54DimumvaMeE7thXXU
OxXNxD7WaASLBGg7Yne7t52Bo5Obe365NGDwZ+SGVIKrLqR5hHvLsWC2Q2rQ
QK0O09tWzbvD4qFy1c0wj6MshP4d2F2W/g1u7vJa+lY8lEj36cW8ZSFOKkC/
au5XyLp0KFgWcxGxtHp3YDcLJ5YPe8cM8ZE1rLjEsUCCZePrN1ddJyGCxq7U
O8fC0Dtm5Ck7MdZlZjY3aVOxLZZjZiHbgeoMigF5XAwr56A129lkjD61P6wR
xoVzbGLqxHwjR33G+on5Rqj00e2rd/Bg8aFaVm2/BLt6ioQZGmSc3KuwQrOH
h5iBnPSmCxI8etNe5c0ngeTVuNXflQ+p2fxQ0yTiOUk1Pyo/k2CpG9ZBLeVj
1341x48EVzZM0l5RnUtC18loUnkkBbn64WevbBJhheex2Xs6aCBtaJnzd5UA
G73qonJeSPDYxKt9eSgJ6QkW3dcm7lGKSSZPzDe0TtpZ9itRcaBkqKCY8E9q
/UcCW98TnPvmYBPlEAl+D7axJuYbWkMZOyfmG+mPBI4T840D6mnfehIFBKei
Lv2zBAUmpqreniTUfG+1siR87968nIEAwvfet/mivJHwvQ0NudO6XwrgNfm/
saW1Evxt81jpuJ2EM1a3ywKncdEfeTZnoaEE+9l2IepxZNipPqGGtBLrP7ha
P+SnBNf6ZtS/syZBa9zh+NU8LsoGNt3at0WCb/fk83/sIuPyjt2NDn0ClHfn
pu1oIbiVVMKfvY6EheucnQz0eDBK87GkEPz7Y9OMK1MJ/nUYmKxsNF0I0YjB
knYS8XvqPo1ZJiS8Uhvxkr1OcG5ygsaSiXvDb8mcuiVPBn/1Sa8Fz1vxvDI5
qfy8EMbUzuHzqxgYM52107ODh4uzVPyfEvyrumW4Kpfg3ztGt/IvkOm47ZwV
0PpdhBvvZQ7dGqJio91Ts5nL+HD5nm6ffFWCKRGbQn83kWBardJVX8ZC3w8G
WdNXjIh5fQNKIxRMvuHidsifj+SsaM71mxJEnNYjzawgofY1t7T8OxsDWuef
lb4mfN2Na32O/hT8dHxddfEeH9m7eeqP0on1POhc1EtwdfaDb+b3ijlYpVZM
6esVI+q88foxglsXDMaejf9G/D94n+b6bAmOXxh7R7pPwrKE3luUsx3Iswwc
rJ0twZMtfnk335GxqCDHJraPj0OnKqy25UvgIl85+jWJhLL/1Np7Jr4Llm4q
UFwuwT79dCebq2RMaVvVa0TodYOL+uPMZxKYmY+sWxpNwurddZdvJnLhSEn9
4L5Jgu2CKPk2LzKS9P4m6fzh4rBJVHXPTqIuuj4a1q0luGl1u/m07Tzs+Si0
SPKT4MWCz15PCZ11PlPBl03lQV4mii91UoKiqVX5HbJkGD14FR9E5uGHPm+3
bJgEp5uGggY6SfDqkamxncXH6jkhCgejJTicUrnPikrCgGMR/Z8NH3mtGl3z
EiSoZm290llDwuNVa/l3zvBxbsr3+KpbEjD2JavmlZGwvvBuroJuB7a5mxvG
EXm+csecrr+thA4a5x+O+tKAMK3YbG0yH/eU76v/4zBhvX2s5VgzCRRDs5Nh
/4QoLeQ47neno7E45OKVNDrEesGdNz+JkJNa9lRrGg2rR7NnCExYyNG8N7zc
TIwFsX0qhluoSHhy4xmd8LMbeB1zXa6IIa7UfPLuLQVv4vbcGuWwIRfpqrS0
gvBj7XKnrrtR4BFtU86P5sAtv+bZcTHBm+mRyn8VKGC8POj/Pb0evjHK+bd0
+TjutsP0qh0L7i4ZLW2FHUT+FQ/5akpws++UT+hjMvYcKsvwamqDYys/a8kT
ISadORe/iE9HIL9jufp8Ll7cjDprbSzBmK2/IzWKjILVp4PilWgQMz9fM4kS
oWWrtmx4EA1h2qHyf8K5ON18IX0NJKiv6qPOInRy+tF/un4aTLCkNt0NHxfh
zK2+SZszqQiwHlH1bOTCSv8t7bajBHFn5H+d20KGgYhhq/6I0OeItm217mKo
/JS2YshR4e4/ffl5dR4Sdz1S7XCXQHOJa/3v5WSUPX8wrH2Ejah8q5u+qWJY
H9oSTkunwK/KcsFTLx5ON47FyvlPnB+V2FY1l4z3t2vC9eQ54CVlSX+pFePJ
i7OilzYUeHnpShcT+aY83EmeT+TbsHf8WD6Rbxe+PZLmEpxbPG1FZRDBucdk
1dEtO+HzVKMypGvx5+jdSNNIQodmeS3RSif616VXOnNWdECU+1jngLwE0rU2
zbZNZDTJXNAbn9aKBMvK5A8+QnwMKl38Zz8DmD5isvlJBzjFZYfmE/ui67Wu
f5zYlzarE7qDhRTUJRlkBBJ+0un0QvnwdhoyreUVZihzoTZIkion6jFn+N3M
jhgyUtYsmX1omA5LbAqc3ygC9UXGx/huKg7aJB0uP80FJ010KmKDBA4az3Iv
En19WTVturUhC4Vlnre9TcXoNprmbWNHRek3b2eXSi684nOPK22ToDCyO+Xi
NjLiDeTFL8dZEO/dX7w2SIzO2OCzlq0UbA26G+OiyMPtDsUVka4SjETfLikx
JeP5mE1P42M2SnwDoy4Wigm/uDs4OIQCqaJ1SvOceHiusq/uPVHvBzpz77kQ
9f5Gv8ygbgUH2jz309okgiPYOstpyyk49fMJ5/0XDka+3vm+e0CM288LXDBI
xu/+jphQ+w4ILOsmtSpIwBYuNTtZQ0Ze7FzGnA8dsHQt2qSpJUFd7MWjU3LI
8M2fvmNch4uj/M/OViuI/rWv4D47goyr06r+PiHyVkfgP2xA5G1qnY6MAZG3
5caLaA/ruVBOpxgOOEhwgkyXemlLxoOzxVon5/LQYh5f6kPk4VnJ2OW/RmRo
xnncqshjYwUn16nlCcHXj0oD00MpoFzVaCfNqsLD1tH8q0ZcNIhmUWWk2Ggd
6CrwUWyGdXOXX2S+AEezw3bkqzIR7P0356gDCQURgZ0NhE+OOd6Xeewi4TOb
jbvDFGl4c/f1e1qkCNIHQqQVg4k6/LsvJO8NA/wWlX853SKMmcvKeL6jIm6t
2vx2exa6pRKLjCyIvF3H9riwhgoLhr5HmiIbKfOuRXmFiaGn9EfP6AcFNi71
eeP6HPwxefwhs1WMV8+fpi8ypWDRsZLfYQWf8XX+zDcJ5zuQmaXAeKPKxlod
/lzJCw6S2/7GF/aJQVGVdk0YIeNdvBLM1xE6w55XpDaV0E94gvODjBKlNzzG
0ia0VETueuImAJ0/Gt7pz8SBf6tHai3bkc9eX8F8L8Rcg0MypGo6Jic/UG0t
7cCCY7MXJs6XoHNe23ntPDIMA0Liok2pcFB9GthB+Pyo3vDS9hIaLFU8k2Zq
cZF8oX/gLqFXJopxg6aEXh0JVuqkR3HRNI3WvM9SgleBW+s/+ZJhoZ7yylKO
AfFI5QilSYTBZeqTk39REe4foaQzxoTp3hmP6IvE8L7ACZvpR/2/52DcmBut
UlXLws+U+YEW/mLYHQgOduijIMd+w+U5J9k4Nq+8eDBNjF2XyAv0Uim4I7np
kfGXjYtOW58f/SqGVLHbk0UOFGiblK9xdqtEIU+QNauVA6+s77y5hhPneO7z
n3+BA/ftPSfsRGLEFnlbQImC3w67Tyzf04i+0sluC6YLMEXxBlWmmIkwmUsP
S6d3QMaimXdPWoIrziUH6uhkJNgx40S2bYgVpz3sSRFit3tl3QJFBh4bPlVw
Su4AU2NniHiuBFsYx4z3Pifj3H+v+q8fpSA6Q/hrcKMI6emaccdENAgU/ZbO
mcrFD/qxMa6BBIvro21vEr7u41J7+f986RiNfRFyeuIeZ/f6/WXzaGjzOjwS
cJ6L4a6Mk9uI+mr477zbLz8y6nvtuK/OMfFgs/G/huliLPxvePfnq1T4GN/I
4XdxMfR8zYpEF8LfrteKTLQg9NNw/968Gyx0aTi9v+0ixpG8xn7j2VSY2T9Y
+WUjG+4ZXH7gNTGmn3AselRCgUP9jj2fG9mY5jKgmv1WjLGx1XlSfhREWFbL
kZ05UHTZp9XOFqOqvi1GeT4FY7fKdfO6OJjWQM7zGyV81x/6QjMhGamuc++V
RXTgR7PqkQFlCSiz+WZWr8mgvNhlu5GIg9KuVfhFxCEhltMSRcShwpw3OHiH
i7i4f86frYn1BzrXyHmQUZ2wWOWqER0RoUmkgGIRUmgSlbAlNChavemk9rLw
MvhxRfVpMd4YkeUoNAo+CXw/1dIqYMft5k7NYUN434CxeCfhC81kencV/sTs
UNfaWZf5CE50mLxSg4Xlveqjge9bEHpXzu6VNcGJC5xUzl5iwLO7OWbPVDJi
Vy8eWThxL611xOQ0ezrumBUKLCxpiKIPfVp2TQSvNkMV8iEajLjP/FsuM5Aw
FOC3UyCC5qCBe3INFZ8GrASnVrCQRL0gfLlSjLppFJ+/hG8Jv22cXJ3GRmES
t6PgkRg+k/9MexNBwexPLO+FDz+gGp+2jSiz0Te/cP9mfzakN0pcc5ZzcJbK
Y89vF0P7e0D/XWMK5kpFPzvA4WCJ0TOmyzDhY+d4nHL6RUZETu1JXYcf4Oml
+67dzIdu4CwZ2XUs/HGwu6S/vgXMG5+/3FARwlzhjWFpIQPvd18TRhL9/EHt
ItnSNSIsy877rtNPQ/5Yo74MwT2Gxf6LN/4S4uavER1qEB1T58b+9iO1ov2K
KF4hWgjXq0dXvV7GwKeSznlpS5rhkGn6fE2pAKMc6x0605lIzJm3TvsTFSc8
KjKqAkVIvajd9jqehhNRqZ4PFjLgkB05G+0i6NcH6MzkUZFYOTjfOaQRhlb/
ZjvOEyCAzH4+M5eJHwYJm1umsPD6/kDRuB6hM1/V1770osK0tX3u4TYWenJt
q4YOiXEnsPS4SEKBkiSVc+oaG/VxidXl2WJURq++qBNHwY39fpdkwt9hyduX
Oy2vs2D0zXvD3SAiX9J6WCeMOJA/zzX1IeJ8S1pqqz4R5zMHk8Mj/9WBU2N5
LmoqH039UfL2riykpMw5kOpMw+texuPaBEJXY/OdvA7QUPhhj0D+UzPMt+g3
DhP8rmhSduIUwe8pT6jj9m4tMNvYe39QS4g7fE+5yGwG6LJnR82b2+HQnr/e
u0WI6FYHauFDOooEcnsr7zYi2p6kcWWxAAXttedmpDHRcOZw0RQHKqY01b8b
8RMh6N22k+1PaEhesN3DyeYn1MN0BZGn+WArRDQ7LGbhSr/i7YavdPSXyFi1
fROh0vmIXOk/KjSco9uqrOtgoS3H2CvkwbJ0b3fcQRa+GWp9yvjJhE1XXkWA
phgj9kkZzSeowFvZba6VLOyNuiAV6yfGqbz5+34NEv3aIogmH8OGy8JOJ5ks
Mc5m3jusnkD4SfeMobuWHJwc/qOzki7GpCHlEBNdom+eUTvz4Gw7BnMiL8lX
CeFf53yZ/5aOL9SQNsbOBkiVyiZ3FfMh21i6xEyOhTYVb6db6nX4p7lXIMvm
If3FmdzFR1nwWXb5/Lv73zDTXdXnuRUPB+lqNKu3LJz38V2VM+8rch77/TB8
zsWVRzlart0s/A/kEO6i
    "],
   VertexNormals->CompressedData["
1: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
U3KPAoLzK5I2Oyhy3lj+jvV2LBTrOTy4oh4Pj1lVT97FeL4V7d3ig9gUwKl4
KDQtBcLr/vSXT7Hn7z9VvkRPFQoql60JDtNSodNmOkdwBuNdONMXneI5sFpk
6r9llg1ndzeFSXtQJOTc1WgOuwJ4TbRceMGkFSIznr+YFsYhCmWnpKx6OsE1
2y0wo6UAJv3JauazMLzaFpsgfFoO4u/v8Mjd7QeipVT9pOXfiNIJxw9fjweg
+u69OQOheKjitJ/SwfRUlham3ndNgU/cbRaaduXgXtVdJ2KBIlJPokai6GpA
6WFzXbtkLdh1asaanMfk44Wejjk3gqymVm+GSRtUH/qMkDHgkLHwCnPZ113A
6E9Ks/4yFag8r/rWYvMSXlExqGDOgUv6r42HmWYgj87N7qHzLHK/KsQiqnwa
ZH+zSJlUV4HhHQlOy1wUSjbSxPwZEsBM2oPP+3AS2q/a/ee9vQTf6KkKsi4N
AY7BTHXVuQqqJ2U3jvNRWHM1/mQkGg/XiLQ2Bg2ywS/Tz/Qatm7WvdZGWd8L
wPjWV/Z/NCYwUBBXO4n5g2nDECVDvA6Iaul/tNk1gvvq38bw9aHT/Za7Jlva
oHtA1CgbWwgCLf3IXirGAyOpdD8TVIAupVdSzmNnCInKJsK/D6fQq7XwW3cA
7eWZeL1ebzB+FvP+AhbXvqat0LUiP0HxBZ/+rG4gxNCq6Blhdm973OOkWBMC
EcL3C2ZpnOCk/KsEKXx/zhdiVe+1HEBVa0jv+b9KSNGdcQj6iPnbl1nHYN5a
GN6j/XPySiSQ8wuV0uPfc87/3ftiHQsKlHMj/CJeENyWjYhg//uh65mW2Zw3
xB4zOozmxYGguXIzyTqKjI0+7ZviSIF89yPlgYYAoGVYro7B9DGa/DPC8i4E
9HcMN6cwnPt5u+3vAmYvs1klq5d0OVA1ECms4Z4NDO55JpXYfsx5bmCe5FUA
UzFnOO8qToDynt/I86FFhPDbLVzt6QnguT7xgpAxAorOGDp64M859+YUtLHF
glfQUt/l4kL4+Chn2QxbTwV5n6YG6gpQijkLaf5xQGZVzcmL6Zl0IpCYiCoF
w4cwbeFPCAirVf2l00QRnN8ttnnVWjizzEOo6tUI7rtR0tr5OGS5UQNJe9IK
N3FTBlnOU1DY3xTNx7OAzPLv+5HQTwHfj0G53Yup0MASQckzi+ULWVEP2Ehz
QCKf6c/Qq1nQv5Gt8nxyFi6N79+3W52ElD9jZ74WlYFN/khaRDsK9405/8p2
B0Fm2qFQL2UFjCmwXOBoQGH00qfi7dgYuOTa/HGwrgzc5cI1dDH5D0JEQ7pz
QWC/JLMs65MNJp7PuGOwdeunoSdl9ysAOrpRSb9ZI+B5431uFrM7L3mOCeuc
NqxTbNgp/TYEDSbiRPw9GvPrxwMdD7XB82re9QyJYvhN/OjLRDSKDLOZ5vRr
V0J31LijEbkTWM73nnuEyXP8jHJ8r+4Av7puNV3l9oJQGluD+5g/WK8fWkUO
e0O6AN/durcBENzvlFuFvzeWLFFWgj4EtpMriE8fOYDmPd0JJfx9GcSI/860
PThVF/+g/VsNVm9sbsbcRRH/Qxoys3f1wKnz+sPi33DY0CglC8HsS3/6ffgA
bSyYdHvpTjd6Qtw/GkQV+18LxaKnUee9weSPH8OMYBzIx2sYh2P2XXr3Xia2
JRl46L69dOxrgilWCQsE3480LLkN9NuAPvyfIlGPP0g27a8sYXrO3zS6c1Ab
DF6fqCV2uFPhVuUDMgrMjh49J0Klz+bAbef8m4zz2cBKNKR8uwvDmYtbor2D
BdDVcsYoR2sKJulNfRkJluAer7N8dMMIFLt3Gixyh0P1gSHvBqb/d7vZ8xSd
MXDzyfci7c/F0HqdSmchCkUeeXr3ibtXQsLdeaWzO2Wwd/bK8w9NKGQoyJLv
fI8HbZN7lieuxIGGgsP5YmxeBXyCzN9KkiH9xZfH+R9q4Eqm3hsfPgwfHkRN
OiH1ICN32jdyugTE/G9/dOxFodPxwOXZsxAwzJHo1gyaBdgM2uuhn0akxm8u
H8bNQCdP4qQg3wSwH/7qdfy6DGQvn8kpyg/BkfqKedi1VNCcP79Phq3DP1eS
3+epcuA07xYrT3oxlHPMHPIOoKDk/E/tVXwkpD0j7lqWroCh9bAEuUYUNCuF
My/xhsG69JD5c41i+BTngx4NoXD9tVul49UAuPIm5N4vrQqg7TfRG8f8vMSf
vK7UIAx2H/+M2T7MBuKlfMsWjPdmTvZ3fP9dAHlku99Xhw3Ba7a3D++3gaUX
3+/c0Qba59ma5TRlMEVMfNDthfkPiW6JjmEV2DeKvg7YdQC2HjeRl3geuMEs
rzlhD7efbr+yLfaEF+gptrf492we33rOkXsDeVLvbX1Lf8jWrGY6eYgiFfSH
vSXuwSAocdeZcKsBkrY3fCo7cUhP2yqb1GAzdFURW7RQhkOpzQbbIWZfQYZh
8tT6GPjKMYkQLMUCl+6PrweYvURbetdfeSWDkYU6t8+7Beh9K8R67lEPomr/
hujj/hxs6VybDPyUCtTXwvaiMTyUaviSl3g1B66pWBzzhOUAJ7GA6AksD8oJ
s1Fr+1II08Pi673nC8F/ytuWYAKF4zvSDs1ZEfBCfZDq6psyiD+SRkY9UaTD
1XhC82cVGJvb+LFdLQCno5CHvjMo5KU9kq5r8YWsgfc1zQOxoOHLpUy5gSJX
q4968uySQUsliaRZoAPkxPzqjghxyOWXeQ7CYl2wobg8GnanGP4z1Cj8NYzC
rxw7jlvD/vD9lEEqte40DN7n4o7nWYAOdteJpw8m4IVBb/2JygJgv9jYKDCJ
gixvntMV13BQ1uMLWjjMB5+jbzwXZlEw+yf2I8bMF/afrNddEkFg67Hev9FK
FPh1id8vZEaBheznu5qvSiChtkfXvx+F2BjzyS3nIHAb/07K/RwBFvWnBA6Y
vOrZlYHSkSiIhdviU7+/gLitLd0SZvfrHwxW1oI/wtI1LaL+/6qgv/nn3V0s
3tmduCVwJrMGaiS+qz0kcoBT0vbnNPHneEnYn/vp2IOmJ+eNXHMP4ONtbv+O
v0+n6NHamIIXaATR/FYs84PnH2nlhTA/CWu2PS3xXzBcoCSzqptcgEqfNQ4b
7zbE0bLLRU9gHnppziocvAyDJLmlJ4/3UITsW8gNbYcY4KBqa5qriYUrtjEH
nNj6i4uObnR/SYZoiw75Qa8B2Dcf6M1zWYUT2m9/btztgdLE56zMFGnwmHpp
wG4aRQyD+5v7vuTAgUhRkEhHLiTNA6FMI4oUN5vo3zMrgr1dx2H+qRxQ9LLL
JfuNwr1QHZK91z/Bl0oiYlaxCoJT7cquaaAIbX+qgDBaA5TFU+P/0RXAlcNJ
qTbMT/SUSywmTHxh8Gb20kJRLFwsTE/lx/Q81XONPVU7GfxSbZ6Pv1mEhxFW
wGVbhdjzc7+vsZyHzjczN1z7S6D/kHSnCcMfJhPydt68YFDkuxBwwasWOo1T
36LmKLA625z4TFcCpcK1R9szOWBG1uxNhOnJIUiRaoDpyeSTbpEeWgAiEqJm
D6ZRWFxyH/6R5gdnTeRcRqSqwK26U6a1GIV9nFidhVQMzA2Z3ny9XAoJS6Ur
hZ0ovMt2elfEHgYjnzNJhGSqID86UjIEkyd0fX/2g1wMFEZzD6hdzIOP99FH
M/UoErtu6SJXUATMwV61S3IG8JdEkQLfD82rvcDoK/FH6Ps4LUvCUQ9dQf20
WURYXkyrL87wtBF6i0Q6V3jsIai7+7wBvr/ZOVFn2X92wLQeKcvzzh0UnsRp
4u+to9LWmJfO/AEXfB8YR9H5wR9/gTv4fqRP/0S/I4gMAoYYjxvim03wdNGB
RJIGBdK++2aksdVgq/KK+aA1FMtHVo4cMP8pjTRON5ONgUBj7oXzzbFwTIeu
XMHs8vd6wf5T02TgJxMfi632hQb/hvPW2PNvaToTLWgEwTeeuNo+vnQoEZC7
oD+JIkyq8Xe413IgVrrbSbUmHwIVGM4JVmB6lqZbsFwtgTfUKYfTmzmgdrjI
NLuCQtcBsVjM7Z/QVLL4MDa9GcIbT5/vCsYhS+D+z+ZFK8QXN1mkmhSCS5lf
WSCGS8Myvn9rswNA+c0mx9W6WCBaq3PiwPTE9TWcrzFMBp1gvUZOLP976sjk
cFkBhWsiP2pOP6gAlpyPHYeU2UCZ7GiJ4FBomiUZmxvyAfeH+xXMJLnwK0Po
Xzqmz8OI9n8DwT/hzf336rtj6UD3Noz3xgSGn98fL16/kwuUq1O3jxcLIfoG
n9rlcSxOOe6FlmYGwgjDmbMnw6pAn4AhOrsABe2sK6Gef2JgqSGFKo+qHBSy
qC9ztWJxc3rfxjE2AvyjszjvhleB0uUHlxIw+cAI6XsjOzHQTnDjIuWdArhM
KKpQVYoilV0+Nwp+lkCdqJam7Yge/D6RXo+/z5RIvzO0y+YDVNQrNgbI6cPt
01IEeL9yin0tmvxZGwYC83Si3BdBklWvS1cyBwYnaibEfOdhlUFsSErfDkQ7
5IPM8X0DLF+sS4TZQcsnP37OT26Ae9QVkYD5FUGqyrI43Q9QL5O/oePrC4my
XOCB2T1uauORlVgQiPNMJcmW2YHnx/G1z9hz6q3GThE22wOv8aYJ+8tMSPjt
AGfXUeigLvFhGveDa7VMrtK6oTCEUydPw/xNdolfwoo7Blo2ZyidSdzBrZLc
3hF/LyrRhwSd315g2PHGQPIoFmLIY+2msHi3reIixx+VDIsMh8x6Pb5QIaLk
qoXpQ2FzOPFzJAi8v2yY3SPLBKt4n4T5URTJED6WjCjNBaLQP25fyIshI9yA
ihXj7SVevyIdacrBX46UwpkwDyK+SFSfW0IhvrZPjfqqL4zXLu2v1YVC/UWm
oy+YnsdaQosspjGgRRYqHW2yCGUjga1GdRXgNzidH20yD5+vZgn/xxwH51/O
NaRiej6zG93qb06GhpnooUcVGfBdPc+qCVuHk/QoQXO3L3hHWRG8ZciEp98Y
1Ng3UHg+YiVnKukBR+xpHbcv5MGzoybumUUUFFas04cUfOFSD+OZa5FZ8DZG
399rCEXM8yNTTazyoO7WehjpnyJ43XxZPQKLm2MDo6Ln94KB69ArWzWhCpre
rl6WwfwKvWXT+Is8Fuxv5S+QFJfDpXq1bSeMBzLeSCtd2I6EOzsrIffiqmCR
3RLUMXn+p++6fpHEQjb7hd81BCVgEEF0TBKPIidOfuuY2iyHD6OONW+V9UGj
92h2Gd8X0cFzZ89dGxQ5Q91arIuh3fHi2mXMz08EUyxH82dBW9Hz2TuVdkBE
POyO9xMSSYIcx257+PnggpkTpTukRHHzOmB2Z8oxcYVDL2iUlZj0OeEH3avi
uTKYfSeDkpVf8wfD6IzRtW9kKWB64nNk6jYKj2y+BthKu8JJm/De3ZVQULR2
EFXB7OUyccXL1DMGFHxsL2fdjwd6ehKWUyj+vlTGLovjFGDo/IfzosoE7pWm
HkFs/Yt8zrs7x7qDawijddaZHDj1fLyUoRdF7pYOpnNF58ObP88vpJyphNr4
2juoLRb3RSKpTTuqIHucM8wI8qFOKPhj5hwKTjw+F6m9/EEhqHswnqUYGH9o
cvW2YetJ9i4wyC8TtNMKk9nKiiEr5+uVPYzfxugkTDyTCQVH9hntXeIUwJXh
qrKweVldUz9TTeMKOzVs9w1OVgAFIsqogvHeflSYX+5jFKyxkI6esMsC9rVb
pJkoFqdynCjPRv0A6zD7uA35fGjzW9Q2x/SJljE5/y7TH8jP6McKkJQAx4f8
PRzGc+ZZ47xyqkIhkzGAxRCbB0K7x7Cch8KZacbey/Sx4Pe2ltNAswI81CVS
h+pRCBMRP+U4EQXq06erLrRVwTaZbscxJr/J/PbSwwux8ELcdT3dvReMaJbD
Q81wCNPwew3z8SCI5Qsq2vZdBfNW+h9eEWMIjdl9tYo+jPcDRfQNdBX8o25Z
ca2OIOINH8f0cblA9ulkUbLIGhi5V1vcNxpGYj/zSMpSFMJSD3tb2/QgDNr5
vr+UvIZcF0tISSNOhIftrZbu9WsQzCGDHP4aQGxvbrmZp5XAu5UXfM7GYyCR
dt90PngVGTDd3Sl2ywJFQsYNVAgHyPyQSV9TLyIqyukc41MO+tQqUSNGOKC8
aVyydqsHWSr/d35GthL4mnWCr59ZgHG0+bHD0QIChBk6o8dFEDe68+1kHg5M
fzrOCl/tQtyOXnwRZawCOkKNY5JhHDRM1Y8Nh7YjtU3ZG+LYetVZ7u2V1s3C
0Z6OzbeVJWTLlopIjLccTC46R985woFF5TmG3egWRIJf5DRqVf1/HF13PFff
G0dWWqSBb1REVkKhkIdQKaJERkVJdtmSvbfsvffee1177xEpM3vdhszK73x+
/97Xed3Xc5/zft7v93PvuedAkWGdx/Nfa6B2bLKMmX4cI3oSYEoXggGn/Z5M
50kcBDVLmUSK2jHh7JLHrpSNQHnM5/6vczgsKFvY4uFtmMfKl6Ereo3wa+6w
P6PxMvyier4+PzyL2Q2QRHyYaYROqVfSjzhxuPDsHFEicyvGvpqtvdvTCPL1
Vzadr+Gg+kSf9CpJC9ZQxx56+VITjLUdTWoTwWF9p+c20XoTpp5vfeeieRMs
/mHNPCeBg4BdUW49SxM2pWGa2lDSBBv/Hbo2fGkd/tNb6R0sHsMe3mj0JOpu
BInFYa+igAH44kG7Z9G0gSWQppNO7IbCjJh5mY7AKFi9mn/r0LmOuZ55KPY3
NxXeLz+TquFchCOxP7Mfs81jR1ssjxzc74Dx7L6/wde+wB/R7X91C2tY+Nnr
R4KWUD1vlai77EzBByuPsoOwVczzlUXa28BSoI0tKjX+NQMG63/3miRXMJHk
ZC6DxGrw1DTn8Dy/BKwwEj0+9Q3TKNDfYzbtAo+vvokmGt9gIOLZZY2Ly9g5
i5LD5YH1wLl86+PIwDpovJrK5zUaxsyprj4+dboV3qz8/kpTPwefzq8a+40v
YrekVBsXmpvANVFNhD5pHvzPPC+OWlrARCQWdNqftoJyR5urSOMSSPS9tVGL
mcW8nbgmo071Q7m4GrFb1AJQMnTf5q6ex7TJSKvCP3aAYLR2W7LFKpwvOtAb
YpvAyh7OyHEp98KJdm0FGbZFOJsXKkzycw7jPkoS5nSuG37211eaTEzDerDx
Y/zbCjZ0WFhiVrQeUqi+U+lnLMLkplaAC/scpp9drnzVrBcoajr+8s2swymt
RBbarUGMtOr1XmRZB0hEhD/5cWEJGq9SXWd4+g0ruRQWkm7ZDxf2VNs/uSyB
c6PzwEHwLEZKL85zJG0ANg/T2yV9XgLhvStWPMMz2NvV9XHDoUFIPqgyMQxY
hvwqodsdYdMYg64Pca7bEMjWh5km/l2CrbhbvNL3ZjB1Hpf+I6eGgftvqUuc
axKseY4zEtbV/8e7on7HwhHuMg3KhNQXgXfh9dMFi8g/F80ceykRAURTm1Op
qI/7kOtwIWAAx17ZVdDdHEuGnMP+Ld9b64F8x0T2CtL9ZelHeup/kS/Z7XA4
kGoGu/BZowUbxPOhbNzOMqXQz9v44J1OG+zdvxzxWxrpzsuweSeDapC6FJ72
bLsTTipj3ZG7G5jnB4OLcjYNYL4VF8vr0AOpe5xPjpRuYGukh2bPZjVDtd9j
LdyoH3hPfV2Xvr+Bfaaq1zj6tx0uqPqYfEgeAKVhXJt6eR17y7whOlLVDQcL
XcUKji1A9LyQhrA+3FHwYhWddhXwP885NNw/CMXbNEdmbdex85foZSXE+oHe
tZCyaH0IFtK+mviQrmOe11ybUq8OQg9NZHrW72EY5LtYsOu0hmmoptR8Yh2G
OAdMnn91BI55iL6e21zFsEh7wRSmT3CBIng7Nv8TdNQtH+vUXsWe3UyKpj4x
BpeMOsvHRDtBUOKC4beNDeyfdt7ptylNkL67fOTZlzCI05Sn6CJ8d6Bh/adP
/QF4mlp2PSTTgdYAK6HdwrHA03ypb5SDoeqshOXpy/nw3DO/enUNxwrjVd7X
B8aDzQFxmh9FCayeLn1FOM+dmmnpAYlVBhz9LsfxbK0cSA+Z69zpxDG9e7da
MycKwPLiO6kXQ9VQS0d376AA3T+x8fTlf6VgnIQdkjldDzMn39tn+aL5vZL4
8Z5YDYyN9XhryBXAV/j43R/hhLIjNGxFKQ1unnVpF53oB4HuYB2VqXUskPe4
n/T5Pjjh3SjLkNYA+vnGL6X0cUwhtzWks7Me3rq+sI2pawLLxWXDl9dwrE0/
MNfGvBmuPpsTmNBvgSJeihKj/Q1MMq376VBfG7C9bYzwu1IFjoUbKZwVOOY2
1teSZ1gKQwJL8exLrTA6cmM1sW4DyyFeb59j6oJH27VF9+WG4MDPhps6dg0b
lzNWd7syAny+0V8lX7cDqdVy1n9WG9jOB4lypZReYH+bVJDV3gHc/mM5n9g2
MO8vlFw3LgxA1pfRdexRFbCfaXlwAeF8NbuG12mrEswDdbqE6buAZv1pj3DP
OlZFb3Xywc4g/DmQCHWCbpBu6CVyNFjHxCjyLrqPDgOXVHSu+1XUvwcZx86i
uui+LfnKhq8eFJIttXWSAuDDitE+YV39N6prC9c1LeFp7FWBkSRvWL1mK0n4
jlBjkxf56pI5LD+bdZQcSoDTJo9dHFH9nnQgPZYaFACkloyeaQ2pkJkuNdvz
G8cUp4iLZ2qjQG/6b+/T/mxo/ExcyrSOY4fsYt/97U+BehrBIzKrkWBRmbLv
iXxgVPVbxXVFP3hxd1jFpaMAWF9RxhH2US99kxP6ez0HeI40kot4FsPrD96a
IYgHUiE7UPZXEZgObToxJSVAjBBrmfUujhl6uAccqwoHAaKpBBvHMoimUf/0
DfVZxlYneyS0KkAzfQ0+zaSDfo4SPzPqK59YPz414ZAM1fmru9xHWoDnEFGC
6PQGJmYwuTog3An1VU3DLSkVoIq15dcgn9xKFe0ZQV2L+Kd+ZsOzGnqZykWq
HHHsygJfwmBTAwga7mcWRmSB8aE8S54VVEfcHO/zBLOA1dGFv6mzFkSiTl/3
Vsex5iuPFOwqmmE2hP2bUkQRpAXVZ1QM45iZZq/NXmARDMedm9RJbIb18fzQ
oyEbmKvea52ysD44vfEoqXYcA6ZbPLLVfDhGUch00j2/DYoDrwxT2LZDSgRN
q93RDczj7286Q5lBEJaIK+D5UQ+vKUtGDw42sGskbxf7PndCpOLZCKNvDcCJ
Pb4h27aBOdS0VX1k7AWqp7zRsVzFcNPs7A3Bdhy7Sj9tKvu5DJpkj+2wtDcC
/bNb1w55bGDlX1LE02r64fa0lzRxYBNc+/FR9o/YBnZidbZF0WoQyDIGTr3b
K4OAUrPU3Bwcy2l/zPlSogbOtlw9NczjDVh6WDlhXf1BXfRD000zkOUjuro5
6wb3SraECOvqs6PURLeUTUG94R5mWB0J7xYfSoQgnJw/HiRSL+QHGH9H6imD
BPA0/rofg+Z9nFur5lJoOOzduhiVQ1UKf1//HMxIxrGJ3TnSGlKkj3Zzd9fE
U+ErUevZwF84dpvF5MeBRxL0MXBI8nuFQJoeKTPh/3TDoTme6Vfe8DD+zJmd
wEwIFpSReraKcMtHNd3WlQkOjZyhEfG54EqxHK4+jWP6p7yic5cKYFM0fVYv
Lwq+sLzt0NnHMVsdH3d171C4r/ub2IqsHILjvdP83HBM2YuRhr63EVRLKeeX
iQrBKCA4/Fw/4rG1O7FunaUQyT9zMbIiCeQLWpgLUR09ucRU1BKUCPd056Xf
l9TC0g2d+hQJHLvPcH0lmLoN7s+rho4GF4HuhrjZMkZ4Pzm0qUpcBZOMX0yT
C0qg87lr6MtUHBuh16A5P4oBUaP9lOmZVMhR/JrEhfrZorM3nWgH0yHyhbPY
29ZKKL2xvsMgjmOzd0wWNZ62g3fgr17lx2VwRCOx0dELxzYTvCQ/RzbCbGNn
krRBDlBybBQenkW4ff7LMiuxANLV9zLxslrY2u19cOjfBkYlV5y+ztcNNVGP
ps82lUMMBaZ5DfEwiYBAMdGdFvijdr2I8WYDLAoo+rKkb2DuiycnmET6wT7z
5fu2K5VA+VChzkAKx/rlB+zN2dohg71aTMaqCqSbtQ5R0KP+VLv/ws/zXVCV
rXDPoi4X5PgDUzRGcYwsdefm2+wSyFHh0RqPqwZlae5Xvxc3MHG7o0q9XL2w
cqE2c/xsLWjXVT8Syt7A5osFzFsb+uGdl1bWdkwNyH0xa97J38D69T7bM+X0
Q+WJ1bpzzoVwNaRrS7IZxwSSjI9I6VVC+cY5V/YgN/gYlbxPWFdvrnpcQZPP
FAbfdR82MwwBalex8kKEKz3/9tkueW+Y5qIU9tSJgoqY3wcfEE7YiWVUPd6F
wvXGyJ19mwI4KuDcfrcS4eRyhOCZW7UwSlGzS3k4Ea7KBT4+tI1jG2G+cZem
EuCwW11jg1EKnJlU3BpE82gsKP5Y2DUdYvmeHUsLTAdWqdZNwyUci/Ue/e/g
Ux60Pznf0rNUCHNDNc29iTgmQfrsZgR7AyhQzYoTbWeBMHfMyMAX5Iu+exwV
ny+GARPmPRP1Mlg1OfNU1Qzp+KvjdhM9zfCDT9CEUT0XyijO6f/Xh3j4lHCb
bmM5dNydPTkuUQBmBqn79xDfho51jrag/F55mbB1f7gYWGf8p73RvPuU+kkr
CrcCMd89y39mhaivWj9+GfGqdrcjmTJxA1gX0DTVV6eBGn8Bt8ky0mvLJJ2P
enlwmH/yJWZQBlOROqEHNxGfXGVZiUzoADemWN9PVkVws3n92G0fHFNyifTM
NGuCV+UVrWGulfDiBftHZ6TjTCFp3XUveiD9ARF55tti2NyienvdCMcqGUQV
DU+1wu2Orlu+oiXA9E7Wtfs+jp1oNWDx6WgHkT51O6/FErg5LqoyyYJjnPUn
y776d4HSrZFQ4upSWGmJbFTdRHz4SuIWS0gvePV56du/LgWysPlip+0N7Oaq
WswV414I93j5tPK+MwSlS2RFIZxs3yU15Rk0hkSbTzfTZgOA7XqlpwLS3yKh
i0UkfJ7w6tWdFeXNUOC/3f49FPGeTF013tgVDDzXp5rCBWMgY1bq8hnEe4c/
TwyN88VD5Vp1qubXBJgWfqDJtoljvVK/WPYbU6HQsO5w0fNkmOEa+qSF9DfK
QZSn3jsHFDd1Pz07kQa4eoH1hW84VrtBlrpgWARnz93kYl9Ih369BP6KMRz7
flzXhYG4DATqJ6rFFLLAdNZFIqoN6aB+1aTdzyoITAgsniTNAWH9MWvbUoQr
apvKQ9YYaF0d67SsTwKl0fWFExtI75ZuJFbz58A4R52pjmYuXLV4rUODcPh1
Imfp7N8GqKo6VvzSLw8uF3USp3riWMOQQ+DSq2bwc5kni3qVD/fomW9UGeJY
+5+C79fHW+FBf8ZEw3Q+3DCievNODsckD4Y9FNQ7QM9mh2xtPx9Eqe+KdnHg
2ENfz1m9311wZ/+LxMvuNNhqyLT2H8exS3im+3hCKTh5FVqYGToAxXH1zSLC
PlRbOhqPH7+Dsqz9p/OTvkD2PIGpAM3Lubi7t8pC3CFJ04H8aUEQXK87NC6L
6vpUrmB+vG0QpB8z+vtzNRxQsVKYIF9UH302NJ89Frj3vknP2MTAy1ETejXk
n79jZVYhaimQ8bVlC+4nwAeD5RdFqH4dyBaFlUuywGjfvqbAPAkwvu2Fk6h+
T/NSHY4WLYRbLepcRQgP0ap3i0kQbyhwqs6844uBrF0thZav2TBS73SRsD8/
u5LdolpOA9BwfHhqMJUMYS505LJTOOaRCHanQ0qA3Kz8s1BWKmiUhwVtIN0R
MFJ70s2F/GRBu0Z1bxpo2aR87GzAsafz9HZEarXAsWGhlpEaD+eJupM4kV+K
q8T7lwyy4NB768qU2HRgj3odVod8+2ZrUItHfT14Bkl5WJjkApfb30eaT3GM
e5CY6mpzO/yTF481u5QBVs6G3+JiEE7GKu2ffG+EvM0vJIx3MiBFSGB3Fumj
nZI7qQFnC6R5y3TxtCWAlPIEmxjyUd0Si7aDaQUgu1oaXUeJxnt2ZwQhPIym
7RSY6LfBbnE9Kbd8Otx+a/PzngKO6U7tLPiVd8DpixVTIWTJUJVrR5WA9PqS
bZqSpGQJ/BiPrC7ztwGzpZFThP3QuJMpNc6qGMGPudmJGMv38Mis0qsXXb/O
bHA7ps0AGMQY1EvOe8EK/dsbhHPlIprv7eRIuIH3w8txq3wBQMdy0ZfwP/LS
xY6n33QDQUWK6Kl6WgisdLqsvUTzJRajoVliEw2Q1xMzK+wOarEiJUzo/rZn
/JqfcbsC/RPrM6m2EWA8E/hmAfG8S3jvP29eNH/za2WPZ6LhfhKJ2xHkW0ov
syTF8WTCDSGdPxGJvnDpliTDRRQP47Sf8JBvAFy8fVWfRi8NqN9tBqwVI73g
ILPh/VAPTRcu2Q+oxEPO41OahP2Kvyxej+y6VQDdIaoPFhmC4YiwkGYXipMz
MXK1LTsKZOjd7dmxBLDccMr+bw7HMiqW2I9qFoMo6l1fkycBRzGf+Beks56u
jyZU08tBJU80aAULBfvagw+E9fmRea0c9k+TQEVP56WiVwp8iwp+kRKEeCaj
2WDlWjOwG5GP3CtNAuJ2Fr591A9qqbEF6iA/bYnpna2/FA2coWnnXqPnbZUv
s3j7IwMcvNkkaP8lgZA5WX9jDRp/4eYanSIGriUrpr+o0qCj0HlZzhzxTOWz
G5dnW8FeqpTx12YScJKO4qeR/wy+xtJCi/rAYxBdZGmdBCmWFCaOkUi/FidY
RdJQH9h22bUlJwaUJ5/Q3EM8aXDR0vaiTT68qemUu+yXCNeOLXLcRPiUr4ph
vJzcAtTizSRFZAnwVkZRWuwd8qWnIr+7xLXBD8n3CnbUCXB7f0aHcR75Sd4e
+/cMxcA1coJdXvI9MB62lSCsk8dCNLHRdANwOL6mpcThDmfat9sI6wAfrUUY
Kl1yBZ/F1eayBAs4Ube1Ooquk6Q8k6l9qg9dvqe+alr6QtFJqv1LhHVc/z4u
WDgFwIP2y0J6tEGgR31MlnBur2a/mNyjk1HATUYa+tAoDuia9uT/fMUxkSC+
fQqtMiiallUeUQmFvenD+5RIRyzG8evkgknQ8ZHJyX/IBf55CxhIEM5jMmn4
+1vQBbQUD4nNs0aAa3h6ezfSF3r1K5+bZ9OB2r475Yh0PPQfOyCJQ33ZDqsz
6aPjVRDrf41ezdgLBBcibbQJ5yJRBjrd8v4Ixzw60lUXo2D3VO6OGtKFSt/v
QaqteUBC58CYZBIDn59WH+tHff3cnT+GwYpFQPpMX1b4XyJ8MuuquIv87bjp
X16b4TpoFOhY4BgOAI6gHzma6Hm3do7U/qcZCZIceoyDjHHgt7P3RnICx/Lb
r101VCiDPYa+XP6hWIAd9YS8csRjlIEKD/zr4ehLYnu7i8EgdF1zoxPloWbj
9mEtm0S4G/opRio+DorHj3jLDuLYG5pvFILzlSD4cfSF1sM48NYucVJqxTG/
r7zkLM9qoUz3wJk8Jg6YjQViJ1DfwXLq2npnQyM82Pq7EesbDrWkfevUyM97
8J63TshNB1HmVv5n12Mh4f6KtH8F8m/JrrQzVvWwRmd7IzY9HjSqG/ujkJ8p
MzNPu8DcAt/fsieaUEVDwWfhW0GZOCasr7TUL9II2L9G21+t4fC4zTO/C+H5
Zu+uqi/eBJcVdlx/lESADg/VdhKO9JTkSG/2XC6QkJikqM0GQR7paeEW5OfL
qO4mHvJuAa8nuQHCIcHAlpgwooP094u5IplRegsMUb/wmFCIhtblwYxopEcq
eH818ZkicJTOqpd9bwF1PQ5vxxBOlqkFhZ7d0oeNASsnW91ImMi2Pf0G9e98
H9ypM7hLgSXvgpBxiwu4PPh94zYan+V4a+8MrwsIivCpWsp5QW4ou57uP8L6
KOeKRsuP0AG7A4P/PsL1NoVRgv+hI9LVePQ1Aho5LL6eNo8E7n3657mIfw7Y
7qZ2+lcA9dWV3pKeIEgIsudbRPPIEji/+/hFIkiMBpux/hcKfKzt/RxIfwWz
TLtUGpDvEbz8mSo6BtameP5poz43vsbouPtiDRwdXzjgFgsHI99BIzuky1sU
YlE1UrnA98I6SUEqAsJeS2fUIT2yOZFXufOmEKjZ6J91s4fBxrmb5eKNOOb9
88hz1pk6sHy/oaHDGgm6l7+LJKA8fG2fEsL+K4Xq1ezoKN1QyDX6xPq6COkm
La2SukYDbFFV+CxEh4Copn+TBoqTtf5londQGkiuvz1CuxgBQwn8UbeQH9Og
O5O2qVsBOYN9/RKJIfBuQz5AKR7pDsUVC5N3TXAIm3gEpeGQceqbjlQvjvEa
xXLvIV51n3QJqogOBaY8ygKiJhxz+zZ8fqW0Dtgm+1YoLgfB03CBupeoLlIu
7SVbjdcDeS61DAh8ABO1+f/YkE8LWumYCNRpAg3765TLz73hXnXmWRrEq0vK
QqZR1xqhNLNFrE7eCpSrUmhsklDdBSk1Jks3AZlKYNSishnYLqz3E/brk9sU
f9F4TA947W5IkaF5yVZmIDmGePLK5zj2ceoSkJqdcprscYK5vTbrZ2j8HNex
C4zPnIF2eL6vpsgdhOQVX8cgnFA6WJGJM/kDORWtxtEQX/jGSvLnD8KJgmmQ
NGdvODzLT2d4pRkCcd9pSDsR75U94W0kZi8Hlp32e/LFARDfw9YehnwaL49m
Z0BCAjgnNa5zBwVBfNLDdXGkv2OtXeN0DanAUsSxEioYBuSX9olIkV+q3suR
7WSohgna9IVy7hDYa37QLPQT8X8k3pi3mg11ujHh8xUhwCLs0nYZ6ci0zd47
uoACkHlhdd9F2x+k6Vek7bpwbD39HdXDghoIG+MqXJ0OgXvK7ypuoTwcogxl
lSYuAeEr7wsscrzgY0aA70PEe90Nd2p6f2KgH2mzlMsWBOOFnY2GKE6N1tlz
guGpwCv+d9Z8Lhi6jvlxSCPeoxpyeCFNWg6r/BK/ZZCeiL8rTeIrRP0XjUN6
Q1YDyHyh9xGfCQRNse5Xh0cQDoX6peu7K6FIwMFSWt0PLJrL47m6UZ8lk3+S
37UGWJWL8nhEXYA9MPDaLsLP0OnU30yjdcARzEM5wG6PGb6JZ3uD+tb/HLn6
9mvrAbO2rS5k1gIy7Uvm72rRfYp+5VLfq4fjPW22JzPMseMvZi+JIH/yMdP/
teX7BnAjjideXQgG+dv/4YUob/7TxqkPnxeA56EZcelEE3jX/9ufsB5V5qta
mDiZLuQGnJYplAsERRvPWzyIlzZ+1YfkkBXDqy80eacvO0J4httRE8J6v3v+
JqWJTjDkIjNC7OEKeYz6Mi0IPwUa0XoU332Bw7vxh2qFFzB00CnLI/8Wd59e
wHIqDL6SMO/6lnwEcq+H2/yofj2SqZ8oDpaCQEfpruy4HxSdEKFlRX5Ji453
gAyPh7QbT/uy9ALgdmwHBxvyP4q1zOIe4ykgXKE2903CE3gV1m5YofvvyIV7
K2qHwdjE1bgGz0CoIh3Wy0A+R2v61x2qwiyofeyo8zApEPB7pTTXEG+3TT5r
6g3IB+kwBqmS744Qw80UvTeE9PqPAoO4QRU8E+zfIWcIBKvzl+RUUB4UuxIZ
8a0iGOMeOFG+bgwBno52tghvuaMu20WrNfD2b9Nv96MB4EXhUX8fxfn0paqi
YUkKkNie1KAb8Qdz9h8P4wjPG8/5nrSgFC6yWiWGbnpC8TV+ZpovyD8cd58L
PVUBNjKdyVStDhDiE+iSNIxjOs3pSedFqmCpVsJinj0AnBkZ4SXyCdf4N9VF
DmfBL27WYrbEe3C6/h/NBVRHSpp0H/KTqsFvQVvj4Y3PII/zPJpbjsUustId
UtJeB9VMEmuXbWds08RR1BfxmICq3zHLP9Xwcr62lDvmM9AxnzF+EFYKsXas
YXnX1pEe83xJXAqAIKKPzJkob7Jr05zX+fPBse7cwxFuY6ClA3nCOSNcnvCl
iV4HsLjYuYQDI9A6UX+JsK7GOz/o1l+lNzBWLbYwMuQDBq6fHOZXCO+TdVx2
KIrA+S/LRKOLHSywxhg4ofFnmL2F9P84gtNEZpdyvjN8jqa4s0BYVxx//wf7
Nx8Qv6b7gvaOB1AS3+oMQvP+t6p89NvhMDC99FudiNsG7M+t6vmj+zjI7AZF
GjrCAmn63rsXHtBHF2jLjHig1lLuobBzCUTqTyf/7PQG0bOSztEIb+N23Sfd
auJA5gSZ/DanE9RxKnMSEfYdVfF7O/TXGxCdX0k86wdBNltr82h+IyburjAc
ToFz6U2pXYfcQSX5+GAxiucNmWxsP9IDvgEr7x/v/MHQ1PP3DJqvtIIzwgb+
mTDkoBW71eMHlWPJ9b+QDgaS3x5WO5cHmNOLpvetKiAtkhp+FfEqtU9daMxS
ORDXmy3Z2HjCGc84up8oTstTeyYtXbGwkKO0uW3hA2f13n+jQn3Hxk5uRtpu
Iei+1dA/QD6WPIg/lBTp9Ye9HC/bhWQ4t5NzhMfbHRwfMp93Q3lI0PviZK1R
Ah6RbVKP121BFJh0M1AfJzKfQO0nWwZ6Gaps6dfk4eTx7ZTPKJ4qhfPWPAXl
cGY/iHjsjw/MycssOyHftX4QMayA+ogAyttrg+oFcO6i+1ETxGMJojsgqF8F
3frV93riyyC+LeXY2Skchn0GBF/6+YHprwjJnPMbcMP67/Fh83bse5mA9krX
AIx+Nfci2y+D98M9j/9M4LAF3gzye/7g66oRx+/iC6+njBZUUb/c65hg49iU
C6WvnFwaR42gMviYEgFv2avmKtx33sBVaW4jqm4DEEk5mbZG2Gcm5G4Wfag2
HK+382UMdgMXNkb03Dj28wJmPEldCKxs3dYjjDYgzvakhoCfZ9ZaRfq6juDx
2vquOr0TWGOmWsTouqmdflrXD28IXzm+487hBuqMFmuE/tRgTJ9q/l4oBLfL
tO2dtgbZW/csCPs8+Mb+I+HocQA20bCyhjJ7WG+gPtKG+ISB6GVCCGcxPAyS
1Spk8QSJVNMTB2h+Q9ffGa2mxgK/oLbY60AHCP8c+ptwDvsH9mdbt5m94feB
W356nxdQWP2S8kbzK+ir84n+bjJ4TZh9VZyzggFLx/7viGdk93T2yb+WQtCT
nX5Nale4/Je0cQHFKWx0VqJ4LgTYRPaas+S9QeM098IPNI/Rk8fP7tllAH6l
suHmjCckV3Ret0P6++HOfv/zqhwYe6OV307aDIcEOwTKjVA/20FvKt6CetZl
HkHK8+7A5aDqdw/5BHOWem/NzhjYSTEu+HrTDd6eHakxR3n+7Hsl7z1JIfzx
OmVn9XYdthkdrsf/N4CxWc+r12gPgl7wbftocS+ov3urNgU9F38sZ88GWzI0
Hg7QsTxtB6ocTvqXlhE/D4yWnycvBhHfxWv+x1YgW62ArvzDDGTI3KuXFegA
lRcXLZKePQeHh5HTZxZw7M+X3bRt5RLozz1ccbGpB05GTryhn9rA+te+HLof
hkFb5Ypj/gVP1H/Mi9gRfGwyfvfVSjo0vwi5qBy3AmL/KQ/Iak9D10KewK5C
F1juNzM1ydTCUSWfHbk2HDzIi7Qzr0bD+70hjTa3VogHEUoFexwYiMh/OlWF
An9z7JKRdi1c7uPP/tyKQ0ixtIyqSTToml5QvVviAW0Kv5xGUZ4zOY++V9fO
gRrNBEbfTAMoFgnsIeB2x6YnfdRdG7hqF4t0RRwgNqG99CPi4fP/3GZszhYA
e4TLcNFha0hmHa0k4E3iH91EWIsD/OKLXM8ydQD5Y+F/z6LrBcdI8uXPIn+p
akP/8pELXDvrqLuH8OCp43KxLyIEcrt9c8+bGAF5QGOg2Brye9G0mn51hZBz
OV1jvN8NbveV9Cii+f2X9WLlenoM/HA+HJz3zR36zCh76ZDfK60XdzYISkL9
oVvYI0dx8Ku8YqaM+s2jxIkDzz8Xg63a/Q+CUe5QokPxbRrlma/orcYR23RI
ZeUNFX7hCkfsRky+IL1eB4cffdrZcDmY/ghXxhDkHvlzall/A+pb9P9UBKbD
R3c6pkRfe7j57/2tApQHyijf0gTKAqi48eSY5NkWyM1tVHD2x2GsLcBQJiwY
PDdZA6213EEqVmD/KorT4oJUyVXzJHhW67CnSa4P8p/xkGj0vAchY9uToYXA
TdHEGHOxBsC8TGq/GwethCDllrUgqPph7aZMNQ3fQ3iJrjSMYF/lro1nWC6D
8O6HobtrvUBx+MkJUioc6IxFRzRbYuCEPBfpZFYFLAwx0XaO4aDESN1dlBsA
V5/e+t0iisHNSv4Xw3U4vDyTw3+hOB5E5QX9eFQrgedEg33gCA7Bz17L0XuG
wwUewYFpBQwCIZv5AxpPQ1H7jHoqHjpPmq9KZulBRTfFCmF/b0unlizS8dew
Nani6eNiBm4Ckdl5iCexuNc8rex5EGIbNGkrZAVa7IPrSWh8PKO9bO+gPYRO
Jsw0H7aDj09+/sdF+K/taun6trwXSNMRXy8tdAIFoWlqFqS/AXyzU2e2g+G/
oxPr0pESGMQyh+ah/N8ofawoy1YAJzRrBRlqXaB+xq8/FuFEx9dEQrIyGqzx
9B/ykq7A2TSkSugL7DUi1EiXEkGB9PY3UeJpSLtcTztdM4yF5hrV6hYtwym1
Xy6jAi4Qlf1wrAz58PXvdH6HXNNgj6GB8x+7I1ySWqOmR3zFUqPZLU+XBXNc
jNOkt4pATtpv6tYKDkI/f3qHkn4EoW1mFYs+UxiVYo7pRXmIviZ5P4syDxjG
lC5W0JdCr/Q3ic5ZHKx3Su+4WgTBDgeNoV6fCzj12VdkEeLMniLK6EoEL/cC
5esCT8CqvSe8BeGkh0mHe9K9EK7cKbLQ+VQJVQs1WS1DOFzk1Zm2L42AndtK
HSOtJfCfhcXpwnocnj9/fJSHogLOCd23Df9WCL/L5eZIVnGQSeMI8Hz+EepE
DS3eRpdCKfPTC+IzOGx2ko5q5AaDyscWkwfI14uE0FTVViDdPN1jlSOTCIfu
dxz6vFIFSsOU9IV9OBy99ZZVgCMaJpl3Vovl6sHZW+y+DxrfT7k7m/4kEWYv
BLtF37OH8om9b69Q3qpvFB3macsEWhOSGH5cBwICslII54aUDGlsmsFr6Hn/
c+LHyReQZ/8zuh7VY4j/Od3QnWy4EG40EBFjATN28eVZaHxPbncv+W87+Lc1
w9W2+AGO0hzYEb47s/w19JqM8ITKyXWqm+KOsCaVr3YH4SdywcRI+GUwVJ68
6/Ao7Q1GashXzIv8D+3Wi4uXm/LhsCbX4NsvTvDApf7eFMLPWg3LqZufo2Di
avY3lUknIA+e4SZH+ljN6JJ1604iZO/nmV7esoela01PVND923yvvLp1MhhW
5AvEZI87Asd5P1pr5NPO+B4TKw1KBY7160cohN5Db+qVGgnEP/k/dp5GtWWA
/N8aFstfhfBudyJzBuFnrmFzl0vwIxinfKMeOa4Oy9+Sp6ZRHtTNO1p0hrOB
PPyjSaZ5GYRSK/kET+LQRO1CTVIcCiK78vY6Fk7gkpYkSofi1FT3TDXiSoQv
nWwR5109sPuRdR0+8UiX/d9kGXs0wVJhTyQLkxvc9H2rrj20DsUGSR4dV0bh
P7riyWrKIggXVLTKRvEwlbfmW0Z/hP2PnnnhubbgPe0TMImeSz6C59GJ46nA
zEhaILpcBp63xBT+Q34pRuxHo2lhGKTphrXTxNbDbaN5PKYUh5G0nZCenURg
/HOkm/ZUDXSuc3sxdaHrpuxU0emxMMXspf8orh5IRJovBqLxYgUUKhz7ibAi
+Xg7WNISer9Gc7mjvLXYiTy6YJkBPZ81cgfN38BMod1xwvkLzyhEn/MUa4Ep
X+Tx4C1tuKRhqPyDoDtcDekVatqgMpJgGNn5BGuaPaFPOB+WjD7yzDnXTLDT
EbqTd9UcxPa/viScC9DgVbouyWEHc1LTik9JrEH90PFUGYJ/Gwr5dO67B3hd
PnJ25JsdMCczfiC8/3zY0136bzgITtraKOcamcHpr8r8OWi87jSpc/1hB+A0
XFN0fxmIpfm/m2sNxrFytpOUrvHNQGUqFeKH+tnm4daX9EgHXd61DZ0nj4I7
rXUbNwesQOIVqeAtdJ8pRj+LAjEv+ELeKiz+2AEqlRtW9NH8Ns1+apbNToC1
74FdJO22wC2t+4/w/+ODnuv7nhzBIGe5uBzL+gEStR7yciM/s/Pp3uMnKSlw
ze/mGK2QMaj8Y2V4jvgNFx+gCNVPBxv9afU3pMXA3tOqc3IJB/ZTDlmfuILg
tbt03L66PTx4tTfKQuh3lJp0RHYiAYsa2pYnU8Fqm046fkf5fKFgeuy0eiYc
a+UVtc20hxN/y9kMUZw9s6WmI7kJUKRvltrXEY2tbklT7abjWKPq+xR/rUbw
jJR/V/UyHrP1f8SROLEOFppduT3zn0DjgZr4+bPFQOn1u2hqEQei1ntduUpB
kPXriMbYKSsYe6zk/gA91wH3ZIyccwo0302fJdsqB3OuuuSwzzgc73Yx3tmP
AAEdEkXajHqotXukyo9wJej+ZKCLJgmOcoYrllXXwELEm98W7ej6kRbBhT9x
8CiNGdtPrYc9XU2eO2j8crmv0+ixJJB+s82W/NoQHPvm+6xQ3kzucK3ffZAO
L16ITLmvagPJmyRZAt4q34tS55lrA7XNA1Y/F1PsnMq7aTE03ilnnmfdNx1U
76Y2ndM1gy+55tQEnMh6MPzdPO0AC+ctZSsarIDG0wAXRdePyal5rd/1glN2
SYoyxLZAzP5ZWR3N7+ujL2wW7gRD8+r3it+xcZj9TW+xwhwcq1P8Z3e5pwF6
tyVsGw/soGDueMolNF93fp62JdqPBPKzKkW672zAryo4wBzNi5tW9YkrJQlQ
yW0g9EUyEv79tss/8QdHvsP+S6hwMES7FX4ysTSHliaWaEOU57q9i9SFqikw
q/3z4Uvbl1C8oKS3iZ5L8RRFen9GGmTHwPNJ8RIQfnHiedYcDgpfVxeyPoaA
hP2b4uxrZpi+w/MZxW3C++QXKcxv0+HOt7NLJrUVoEP9mOr7Jxw0xj5eHlKI
Ap8eXslCdj8s9GkPQzfivR+idKyl21mgvhXmY01eCwtVLtb3ke89X3e/bNoo
HtwvSj5RlUoEv3GybPddHAR675TOeYdCh2mv0psnJbCk9FzSDMUTefFNM0Vh
CJR4x1ybo6qEHDN5y3nkc4hkDQ93t0TB4+p/KkMD9eDzn+9QezEO51hqHB5f
TAL3YHkqJt1aOMFnw9PSgoPpR8nnFIvxcN8rs9Kxrx5c9JdlptB4i2/s8c7n
kkBIjj/rXEoGdA0fyeNFfDWk+tzGjcQZ+GSlteslSuBGTZXI+jeUtxNd/im5
EXDf5qf9g5wa6JA+h/9qQXyidbpM8UkKnGy24537PAAmHblcMqkbmM/dlDd2
14uAbCNnPz+wC3CpV7sXzuNYjZJ09YRPGexTkT18TjQO+kwzNmKja1ivc/dp
TskmGGZz7pJxnIU0okJKBrtlTMDG8dJocivMkh/5JN0YDnuWg6LxCCebuW+V
T4V/AOO2ctJ/vsNA9iv6imL4Olaz5X9imKMTLl0IDFOPSodYyRdhvajeB/9K
Rah9CIbIwsYISdUC0BJ2VuJfxTHuReXbRZcSYBY7ujWQNwqKpUcTsurXMN3P
qkLJQr3QpbYVb1VWBQbVokfPt6E+66Dp6n5vNoyYD2U/fTAPwi5fN+rtFrAR
s4Q+8TP90LRGd4G/tBaUROhZDIpxrNXtJVGxehEE5JPQOQiNQ4KzBUlK3Cq2
Y+d87tfCINBu1GNxKTOgeFf62r+SJUw0ZFtVUHgYRKjD0pp1FqBdNNR2790c
ps7eHiRqNAwB4uYnQmnaQdVfiO8fO47drmOzYNOvh6CiI295UifgzeEbs0+9
lzF3F/7G+fQxWPhIJCpMGQj6IQUdtage8XPKLWcyLcGKpqJKf6wTnICj16Rj
Awt3366eUWiFcf3fOmduJsI0X9tFwjlulJSTeFpHAPT913Rs9GEGvA8vacoj
fA+9t177+EQMsI3IF+tr9EJqwRvdP1obmLfe0LXey53wskC603CnFP7b+oZ9
HkDz3iSrXvw5H4ao8RmrsQHCOt9ww+B1LO+oPglZYT+4ysYPcwqPoP6bV+Fx
1BrGbJX3OF1+CCZ4Q4zeZI3A4TPjnY6/V7HY04yiNOqf4DZN9O65omYwmt+B
JV4ce/IzJ2m5pgn4dxtHZM3bQG+b4Yj46gYWLDaQ+Ju/DUgVtrhruLohKUdO
zVpuA7M/y6MmtNsD++RaSR01A2DOu3zR6s8aRnPh/ORZ52FYfDKf3RHtDGx/
mfXDCef3xf2NpNkzBhcdh9kXbCFAlIrZNCAcvnIVrQvc9ILTJlMLDz7EADZ3
5TAx4qvZ3YiSivhQONEy+0rmXwroLShWcG0iftvmmVZpSQQyhUmDkO+ZUDhO
RkGJfLJEfJbl/cAMcGe5Zi8pVgLFt9wuk3bg2B7VVXaBmFKQ3/mt9v5mBYz9
Ls6bz8Ox7QHVYjXvKmDiKfrBL+MI+1fYhwjnEp7tbc72nHgHedxL/KQRVZDW
9v7kZAjyA9Fk1zf8MPg32yGWjAVC0fCD87wIDyMxN2q+aHuC2KGjEZeuRMIv
j6v/Fgl6/ZCtgEclBA6DacHzzDpgrBP01DPEsa+WlHyPSxuhl5aH44p9EvTF
Zi/JId4IFaipzUa6ObH5Yz1TvRH+3sswf8CNY2qHggJ7lVrB4sayfhhdOtzs
0qCVQn2QU4Xp/AuOdHj0T/phtDeatw8l7SXECJ/mBfUz39phoJONhlOjFQJN
GslD8jawXMrbXlsZ3fDBYKMpQ7cDdvnkIi7f28B2E78yCT3pB9tJstSDC0Xw
9N2z4QcIb81UN8ef65ZAc5SZcV5xF3gWUEnOzq9j3zgY+f0uDAK/z9Yttx1b
aAEVOcL57B2k/CTPed+CUUyQjrNJBfwnqWksnYhj75ynntGy14GWUGF0fedH
qNwqL7FDeQsDn8Z3jB5AO7lYZZsQBpQHd8p9kA/nrJ39rXo/GLJmbv/jsqgB
blXBwUQbHJO+sWn7Z6sBrr51ZNJfS4HnshStQajPoumVrKIlTQOp8elapeRG
OM05Rjd9EsfkFlqjrEXbQX+QIaTGsgUcOpm10xs3sNAbPIZWRAjHrFI/49i6
oXqIWcB0bB0zG2OQS5MdBNmzFHVW22WwMfSyzzUTx/RM66qWmGuBW/Mk7xhN
NXhVGGQSueFYOvvGuRirBjAQ6XBPVmuEU5tKvI/p0HNFHWX5eagdbDtHFXR1
esE547CCRMA61uvyaGHt+hBkwomYLl5LeE+SJEbYn4p9fVykx0kf7hTXGnOZ
egINI0fQIXTd6L3LmI+sK3xc+VNTExIIM5eblLNQvTQfZ1Vg/BMAeuGbD4Mn
I+FvXBn/C8Qzormy5x50REPC8odUpuYE6OA4SIhEvI0b+NsRRSaDNlufQ1F3
NqSbt80pT+PYYeapsxk5hdD8RWuyaaMAqik714/2Iz88yt6nNFkK+170lfwf
zUGEluQlYR8kR7b48hw/PdiXKy081OQOIkQnvAjrXuYu6ednh7mAZJb6G7u3
AXD0t0zZHIrT+NLyxjvdAJD6pXo7QSIC2ridLGdQnOH7YfXBE1FwFjfmrMHi
obGrmvMNwv8t8arv2hTJQEL327V3IQs8jRM0R2ZwjOF8sYKySiEEb70+QsJl
Bqkt5g6EfXU+sHa6cJfqQki4ytVnj93A9Eqt3XV0nTarlIv2tzPs1imH5y75
g32KkNIphLeyqPhW1u6P8Hu1POaRXQOcOtrNLncDxygmxi/w77dAnO/fQIMH
cSBstrtEiXxLhq/zD0HfJCibVnilK7oAT8t+2IinDWPvcqsvLgXMgQp7fT7R
ahNYthzSJ6fEsftBbxQvn2mH6CxN8Yxri+D5hn1gnWsA5Brufv7zYA4GTs5X
6x70QTHzy8tvMzfAUUeO3H2oAZz3r/jLkBlDg8fyD8J3ja6kSw7uqW9A/9Hh
renDztD0+U/LK8J6trO3DdoNnCBf1XJi3NUbNBr4Ut6j58phstu7/cwPcpb8
yQ8fCgHby8cGWFAd2VjweSyKRkCiDPmxPr1o8JV+/l4C9XEz+1Jij70SodV9
2aYjMgtSpwa75GZxbILHCOLFCoHOaG11ra0QNDQ7Avi7cezSGUb52NAy8LFf
PcFl9BYarV3XCP+TNh0KDdmjeQMRagpCw3xOYEJxZsiI8H8xx211PiInSBkx
mjXS94JnDd36ASjOTD4G0qxSX+iVeuSj+iQYhIiJMp6gOK+3BLU0tYVDb9Qd
MqKxKDi1wXHCHsVpcFQlZO1xIpR104UGm2eDaPJfxU6E26lTXBYk0YVwaOTe
ny8/DWGJwS+D8J/1PqNs3hsvbcTbcs1hJo5gfuPeC8J/0+lybLUTsY7wVi2W
pgXVF4+UY08KiudffsVK+XlfELcfpYvIK4JMYqGCENR3uEY8IH+RGgn3rIKj
M42jIC52bj4DxdNEpWVjgPrrJ621iomq1bA8kuxL0ov8pPP+L4b/YkCX8tj7
ort5sLGgqYV/xyGT1JGGUswHlDfpyuvTymHruvHx5HEc6qf6riWqRoBj7ka/
zLMaKPwz8mC/Awfrgy2BCJE4YKcauHAf+UkZ5xpvgp/8HVb8yRf5SYuCmWmZ
2yVQIWnVsor85EU/3zeseRHweuOQwVx2DZBfeBHxG/nJIyO/QoiQn8x2+88s
Z3AAUgeGhF+lbWAnb3ONq1wtgtvfmG7uznaiPkn4riUHjiUDk+aWdBmkftFS
6Tj0GcZahlju0K5jlA8XnbZHGyFgpMSX7cwsfHXCv0x0LWPXK+qsdAxbgXX4
GSkd8pMSiv+kCX5Szk+WbybsAxjerra8QzwI268Cp1SPb2D3NqW//ODsgOI/
Z6jGkZ8cuCjMR/CTJ94bvfdDfvL25a9rzqQF0Cc71v0D+ckca39p3/14+O9b
u8AF92F4Nyg0G/l2HbtOfkJjYrsbvOJFLcndKsE4AOtw78Kx2vOv9BYgGxoc
ubFexTmoOY6NFr1ZxBJJO/kDuvoggOp4hjxFFdzjfndbrxH16cfVzQVMCkHd
w+dzIekn+PLnEpFI0hr2RJ0tZ1dgEN6VMWerxE/BiH/t5eU/y9iD7bGgqa9D
YLFblsRyfB6OQfUnzoF5bMIy426z5TDIlJ+vJn7VDDq9opMv1XDs1H9cJCeI
Mbj99LaQ2dIoGNBT4WYXVjHddP7gNwxjQFuWrkeP/ORZcZ5egp903M3PPIL8
5HUB0ms7us2gtm6cRMSJeKDexC69sBnaxr8mSf1NgFu33F10COcCN9YPXMwI
gPRj5kH0nGlg79Lja43yqfopviZ3NwpU0vp1kipa4UtOiW3gwgZ21KPr18b9
diD6ROq0WVAIO9NXUyomkf+51v7HwT8X9h5x/44y64C1nulzrq82MGH/D2G0
x/tg6pikgY9eHyTQKPSJpa9jS3cvOX++MQi/tk/5dmx1wwKH9X6D6jpW7NWx
FvBnGA7sh/Us2Gpgtef8STE7HJMkq3nct9QAjc9xceJDGOC81k9TFHEsd+Zv
ux9pC+gaDmrmmTXA+wB7m4rtDSzqZqlCDVMXxFgrEjv8bAKJRdafmOAG5qwu
JkEfPAgLwyUeXz2cwelek0AEqms6hdsnH/wwhl3amPeeWwFg+JZBSA7l85nc
351g8IRZ8f/UgljDgPd9tCRhPwSu7RPMqtPBMDPsUajqFwdGlHz091BdC+WS
ta0xJ8DZG/yUzx4lQu7DwdY65M+Tdj4uLv1LBREHoR0gyoCnZKe/PET8E/Di
nIEkRTGobRIxf/yaDTNHbOQGkV+qHb+u0/WgHOY+JUw4tzrA1Cv9/79fOiVy
zf618ztw28pf0E/Kgl8T4rQ/WlHf4dOVeZ66Gngp9IpP/fGFst6dzVwUv2nB
B5unCe4wdair4/VwEASJ8/BKo/qSNSjxP+YXBJ+YvLPFsnOA6/JLH8K6UCKO
aD3KCgyIA64sLSWhvp7/B76E+vcnfRWFGmRx0PraPdvYqhCGVczeCwcif0tC
O7F1sgnenBNdG7gcC/enu91OIZ7RrB6iqvdGvuqBmQHfxXx49Vz5Zb87jh3s
9HqyODfDa5IlHex+IdQ/6i06/xLHvL88OlHl2wZihy8xDz0rBsqRCq6rfEjf
xfWffP/WCTfNLW76zCYD3Un75ksLaPzx+Qv1lYWQoUFc2CZeAHOR8yMWl5FP
sKg5+fh0N5DbpXLV9djAxs3Os40ob9f6J2LO2RuB13jTjdXFVOASOZllifzJ
7vC0w32pSgiJ1tr7K+AF6+WXqnCCvtsF3Rd74AauMy0XDOUCYNk7X5Cwv/0r
4q96OpaBYDQe6qMrmw652a3mOfU4xme1we3uXwvW8UErQgcR8PyLsEQp0v3I
Nc4yTpVkMNrKsPEIz4CFlyUFt6ORrzj4kfz4SBP4GA35bXdlgavY9WMsCOeT
J9YOBtpa4MMts8WD6nR4J1uwZfEQxy43abzsGe6A9DzhS78Ek6Doxk8ep1Ec
u6rP0qVYUw5cvbKT9+iTgf7exsyFThxT8eqROVdWDb1rPRqJj5PBcTVxnDQb
x77fqpK4X9cAU89NNgW1EuCV8J/aGiMcC9wnc3OqaoPIuyXjL6zMgPWIhTFh
XZayh4rw80t64BcbMeX02QkSplm/qKPr8jPLFWdeOUNP/GkLvT530Dq4xhSF
8vb1z3aC0FV/yBG5NEvz0w+yBx9oDaF6cZujDKNDvu355JOnX3cCQIsr7i7h
P0G9icWf7FUJYMKnEP1MNxTUjp+Rd0M+nPJGpn2aTQ7oXze1O/MoHIo0pJhe
Iz6P+ul91/tqIcR/dpUJrDEBoYxsScL6H+qsKlkWel2YZn680s7rCKv74x+N
Cd8F3ndu/0xzgp8vT7Pjca4QTZr7oQnF6Uu9kb33zxf0BicLOCe9QcH74OsV
NL8Kr9lYX0uHg7bpo+5eeX8g+WBTfJKwr6ZiV7be8QTY2GJPFYkMgiMCFzNO
orpuet3ivHY9G+TP+0ofSBpD0kdnWoLv0g7e8Dfi0oFZO+qoGyF2EKJ5nYKw
PsT+94m3tMROENzjM9Ld5AxDC/TdcyieqQ/31Z2/+8Dvw+r4dc8AKON0VvD9
hPKWe6587VUljL6x4W/k9YHseCoGXxQP036d4dWFOPii/N44KOYhZkP+ossU
6dHBXsf9d48xUGiY8D547Q7Ci/V7xl8R/u9qdqpmlkPKyoVRak1z7NFVX3sP
hJ+sCxbkTOj+H061ZHOa5EL1aZuSiFocc/nE/vYncS1wvrxW7NOuBzM2tzoI
3+mIahtytxdeQ8k1YoDbVhDN9bOY8D3O+piHYNlne1hxKJdpv2QHtG42wpyE
95klptSH1Lyg5oU6dlXNGQRZ3nCeRM97CzRvrYiGwPTTYFOuQ65wXIJ9JRjh
REPp/LlH49Fw+9M9P7cYV0h+6PHzGaqjwjTLpyMbaaClFs/VJuMCR+D2Y27U
v2cXWFg702ZDDz/jyOphXVj+zeJF+B7E5k3ide/Ba9TPmEUwpVlADQmTO+G7
T5G/n/iLfTsgtry/lX/wAZ4fU64WRtedO/lSWZI8QT29/9fKJ0fgIksMFEJx
ZpxOLJJOCoanH+f+tDA4Q0V1r9cnFCfrgeMT4Z0o2D/VlOOq6QRj2msPCOu7
IrQyKg72U+Gm5ehggO8baOD/b5vwXpfZR6GIsk4LHIN3lS7dMIcedT4hAp/7
TbSq/HfVDnZHtLxnz1rDEzeevXuE7wVnjrfV7XjAFZZX5mLbbnBknKFweX8N
/jlU/v7A+AWMLUI9FjUdoZAjK5QG4dZZUMPjHUsU/G4Tt3iuXg3rj66W7vfg
INRqHn38fAycH7VsBZI0LMJax2OZaB0O88b80lgYB6U+gTztjHLQpKZ3j0V+
kvNkHCvZ8wgoXzjc9u9FDYwWCMh/R37yg+nnME6JOFARp40S3Z2FxfkP43Us
y9jHsPqf/QmtsKXb8j69sAvKQ7J5AkVxTGRjjCY3NwiwUmnnn3WD0FOb99wt
aAPTuHFmg8UyGTJbrba/wifgsFZLcv61jjFUxWYLWeXA7yAGuYmUcSCZvtFY
uL+G8ZvoKPFrl8DQaSup5XOTIMlWmSBHtYat8jkHHg2vgpAVm42GwGkwN5Tr
Ij+5iqk91FUVeFyP/ATbjQ/bM8CQKK/y4NAKVnDCTdGkrwksZF5IuJyOA+q1
95uA5jGhfediRZQdZO1RFGUfnYPkT2z4wYklzD9WHF8Q6QTN48Tnz77NA6/z
H33ScRybT7e1vjYUCk8KB13sf8yB3CbJec2ji9ifzCr5R+96wG5YXkKlsAS6
2kdm2JC+SzxnKojYSAS8hruuMXYe+sKtIvP5FjAzmjtPz5P1g+GVOwV+4jVA
fUb0L2cDjvWEQ3q7Sw5M997s9L2xAEvLdYndcvNY0h7u6/ZhABgdA6l9ghqg
toC2siASx/KtRR2aO4phiCcy50f9AuzBr+VXpnPYxQtUp5+3D4Kh7Y/LcmIt
MEeq3c2ohWPLldIf39NVgcn3BnKpm4vwv4quOxzLLwyHqEgUGf2MimwtFYUe
IyMzJaQkIiojMiJ7Rfbee4/smfHaK3tLIjPre6Nl9zvfv9/1Xu91vvs8z/3c
93uec46APevxquhZzM7Gakj56BBciilXm5fpACWZtIPxDDhGGk3Krd5WD61K
f1jVHRbBkOz8+vTCDDZNbnOdxGYYWCi9O7hlu+DOBhelWS8B63ykmV+82AQc
wUYBF+VD4He41vtAlEcPrnxgO2lgCwrNGsq0p/vAtUSgZV+XgD07cNriAls7
MPi/3ArJTIHp03/HnyC9wXgOZzE2CAbjMFdWyaF+oNC5SKq8toY9H9Qkld76
BJ+sttqqDuTAI5W+n9wbOKazPLa+sRIHjHZ9fK8NB2HBkV+Nz3INu6/90fRU
ZS+sRMYNDZ0thmMJSTm7yJ8KTfEnXbmUCTndyrwki0MgcUOOhXppFdNLLBqq
bOkHBg5ytTOfy+Hx4lGPdmK/tPf62YprhXCvQ2zikcEIvNzJknyquorFPUFC
qGIQRg9Zm3eWVsMmPfNrNqSjyId3Gbofl0FHAmXrs/ZRkA0Xehyau4K92dA2
p0geBoUfOqwLRfXA6HhrytkHx3wFE+1aSqpBYmQ65xjpOPyl2VcTJF3BTh2h
Um13G4XfJyKOxk41gnCt8ioN0kvvjjJVfvSuB9+KVEb7ry3Q+tfg8jIbjolN
bZT3ijdDs6LV90827eCfdLxWapyAPVYZoziW0QY86rmj9XgnUPeqJYf6Ih/3
tcJ+nfwTBGpn0dTZdwMfYzJ37gUC5nK57G1SRA8cUQyjfUvRB8LJbO65LWuY
NLh+3jvbDwI5SUXJcv2gmDiJ76iuYV/0LxWO7Q4A++bVNyFuAxBWxTIs1rWK
WZ7OHL08MwR3NehLM+9VAtM/PkmDfOSvo+XsyaI/ApfM6rsv/R5wml0kxRnx
Xte45DOGWQtwp3KRCDGMgJALa13E/luPR6WuUarI/3JX+n4LSYRzb5MLTiL9
oPuB2YiuJgKc8pSnXGgyIPV8SOhVVJfT2J94xgmlgIKGNfmdG3nwZZ2CU2oJ
x1haS9l3ErPBn6O9mv9REVTNn2c5OoFjk81tF712C+GvU3r8Fm8ZtHgfLpZC
/vfaJL2g0alymLGN8/dUdgWTsEu6aWicjiV/JAL1X0HyNeNN+YoaCO4NVef3
xrEX4+rOiy/rgV6zomN5NgQW+Zg599D4Q71/9zaf9YGDHD0eQk/q4fBW/ll/
HeRP3WPE0h83wQ4H07XOvBhg6Zi754bq+2+TV4ZvV8NA/sdI3u9njUCfXeXq
z49jig4dt+h0WqHo5RBVbUsKbHHtLRDP39gMjnds6UoCVoOvzmYJzUBJycl5
cI2AOUkNL9ondEBoX2TUGHsWCCfcNj1DQHUqK8hdLi8TpDfIv1vstUJMotGv
kSQCRrotRkfG0A3chJtfZQc+gFVJ99dElC/0Icr6R00KgKXqNUWsWwcsdR71
CZQhYKqOlxLVdfqAVXB/yV+7GJIeGoRaIl1NL/8Qc/QpBReZSN5y9S5wObk9
Hj+4hoX8qzyqpT0ATku+e/lQBry/bvtzIL3BtWpButZaCRkJfpTb+Y4gv3JR
7yPC+dzt1bsEdzPoHkgqFDCogpCPEc0LSD/P31DNv91aB9VfnXnO3g0CvVLN
WBPEM5xBP0XsjFHdpJaP575bC0d0fJ2arHFs5L7pArlUI/QVqDFM8kbCpfcU
fi8Q/7Nu+T7dcguFlHQp8h2UjwbasuNVcshXcieJHRZuAYqdGSMyvSQoIdMU
/kPcf9d7xIJbJxH53+j6+2RNcISu9W8vFeJJgTdtGm7tCPc2GZfL6bBZJbCo
gHRsyXL/yYu8GfBgVC+IJ7QFBE3iw6/WEzCJeqowf+RTtM5rBOg+yQG9tTP6
HosoHlxLVxbsPsAfOvtbh+zbQVbARmUO8aTG9jm4ttsL9qkXeEsNC0G24fWl
YqTfKoN7lR0flICIUK5yG+ETbDfWH976uoatJuo0GgoPQNK43MKoQAmo8MnV
WyOfGM/p/fyKZQUcFfv0qEeyAoQXJhLWMnGsz2qa8YlGLVgcaijZk6sGtpNf
PKPccSy54ksnm28DXF7/zc+ehgFDI+XvjvvID7qpqHGENQPnpqp/O4rPL1zC
mc8ZcUy2fJnPhrodgsd49UPNW2Ddjefh3SYCRjFgSnJtG+kDA96jcoIdsKD7
ylxdmYAVKJ1Jb7vVB6cupUf+Wu+GByxxkY8SkR7wUKf/SD4IyfuzrWM/C0FO
TrDnby+OTahqSNDPlAHzIcuiiDe2QHMnfKcfxcl//QHPaURfgpmVI4ncnA9Y
WzLpraB4+KSkthD/zQNu07xIDnsfAnnHOFqI/fbLv9+FnLAMBrY4nQwerxi4
zRHIx4P4JDlwgMWKIw5mbsxzLpslozoYJr+HdOa/h71sIyRpqN6LRzKfyQDq
8JmA42s45jqolhI7mgM5FgorU4hn7jFKJyVO4Zh1zp8M68EiIKQKyaTalAGD
xnu9+iIcO253c5acogayOMw+rctag/j+Lf5xNH6a7bjV6L/PQbX/R0Ol+UdI
8nyvKYLqgmjK+shb0QYgDelivCdSD7XGFY5kqkg/+9xoG/3eDDre5ec7gt6B
ebXx7HFi37idbfTpNXfYHqoyofodBA5BHTbE/t5Qzy610twg0BmrPZKbhviB
T/Td8HcChqvXCbUtdcAqk7XkgGUUVPI4KA0gHHqXjo6f2YqBQ5stReFMn+B6
c3nda1QXmJ376f1RvveckVTqyRyA0OhrPe4fVrEhC8G3jsbDQH2ihIT5ShJs
V34t/g/xUp/g5/IL4qnw0ltS2LI/DZi4cflC4r7vnX8nSH5mg+DXXhY6mVk4
MOjh1S//DfuTqaVC3zcD77YY2ThJcmHxsA9Pzjcc+6hI/+WXXhGo0TYvfX9X
CExXRt2wfhy7tec1YBBQBgPnC+J2Isqg53byxyMI554csqnm0zVwK1OhNdPi
NWjZ8JUS/ayI5oSF25QxfNN4uxr4oRryPvTuPnDBMeOXxlRS9Q1gsja6wJPp
CZnWCgEX0PMJg9vbTKfcwVLgWhkZZSOcMhKKnBZE9ejq841Fq1aQpPixn3w3
ELSLR2woUbx9W3wXFkISBKfzPxV43+iA78YXb914Q8C2Mvg+p810Q03Fkr9/
QwTM99voaiKeJ3m+9+HRZjSUZZ/6+PTwEEzcN6IHjVUs9Ra749DmMFCF1rzk
epsAqoIier8QnkzXB/nJ41LAI4jhTMjfRYg+aVdGPRGM1R39qct7eR4ovRuz
6b+mQsndQeERpFdFswoPdMtkw2bx2m6D/hcY7yoSlR5aBgUrP0pO2SHYHxrR
/aGaAypkJg96Ec8P9ge5bbAVQarOLtUxl0L4/nlyaA7hrKrJ/yDFC+H8ITi4
1qockqYC31Pk4ViYOL598nMNTOVcqtf0r4OaD78bz73AMQIXhxPzXiMonP18
R0OpFXDN47SVAwTM8irvxtiFTrj7XoGSz2YCTP6eu5eov4T11z2j/pc2AQKd
dxne+i6A42O29Qs6oyBwOeqei90skLN0huXTtEBGY5X5sh0OzpxiU8zdxcDY
E/medKwGWKPOFcy341B3YXtuUSMWEkqfWv5oKAKLM+2qKl0oDmFPJSCoHFzk
rCwlUl7BotK0wQJxnXHj86sZWiPQJZ/IZ6x2gwQdM7sHRB3it3jjeoMr3BOz
uThg7AsFBZFMxH6tyYeHJ32/+sP06zzD40phMMTE+JoG1ZFcsh+Lri+jwJDy
t2bLdCyw3fm5RIP8oO/3ZbKQ0mSgnz/4Y2E4BcJoQl7RorogFean+dM5C07Z
VzBNOOSA14BKmzPCf0TUICvlchHkalDJJUXXAKn24JssNxwbUC5UUGNrABdz
pT92HOaglOdPS1w3kUjPLpO++wwuphty026Nwx/6O8kTN5axTqeVHOWpcTCx
ljtKmBuFDwvRhpuHV4Ff2p9B2WsQYi7fTOSNdoVvtt+jjdF7Mrpe/LYUcoUZ
AZnnIquIP3+ej/Mk+vS3W4orJP5w5cM357CyUij0o1/Ln8Hh0CfNyRrGaLi3
w3dV9UUoWNidyVRBOLCYTZvwjESC7KivmcuhMmht/qm/jZ5/Gcf7MtI6BCSW
7z6Nq6yC0xNvT1wZwsF8Msks2DQKBIRjPI/QxMJvWUd5I+K6Em1fvYtRMrDn
eIVz1KWARbe+qyDCTUDCvAlMsmBWhmJsPQWDc+GPMw7V4lDmShvCLp8EqlFN
jmRPcoHB6iEHjvxXW4vPvGZIEVBjlyzlIkpg1/yGoW4TjvmoFb7g5KyE7Cz8
59evKK87SZPLhRBvvyg/3ijaAsfnfxEEbppC/dBfNeJ60DUtlTuiaYZw4NCy
+2zHDBCSWa8D+xzKq/t066rTEB4ycWMx3gXolRaFrNHzXhFpQRalLuB+P6T3
xnQRKESIuqwv4RCyt1Jw6EcEtFlHX3fK9IbbdqReSQjn9IuH493BD65VDPvY
rRTBDarZoo1lHPi38rhFZALBdoANhXsI/NdOIuqKcLYIZmxl0IoENi35xdM3
y4FnnaAtNYVDdhusc14Kh5TbHHd1nWJAg7ddNJV4L14o+8P8i8lwaTzgtrpP
NbDoimnJdeNQNaqW4eUSB8eHw9WbVlKg5dXC9J8fOHZmjK7LOAjhbP7hWpZ1
PbCfextDV4FDxfGFzMuZyXD+ATZPJ/kB2EfCe80mEd/aU69c1C9G/O/np0Bd
AWfpDQfOFyIdxZg78OJSNdAoihB6WRfh3ECy992LrYj/NdlbXs5D9pOwakPe
Umh6BUPnv+HAVMqea+WWAhWtCh8f8ecD6+GEphPrOJRQ2Y3Yx74HUVLuAy39
xSA3+i0k9jsOn6uOPhIqDgYt4YvGwR8rwKu2Te3JZxyu/rORlnSLAoqLdFpH
I2ogxkf8Jm0HDp6FtxxnChOAy8542iy1Hu5AOeEx8dxmQbHOnUMpcOLKbyHf
8BlQiGP/6PBqCZOc+zhM96oVTng1FOUXfYKGvLTWIDEcK4tpDKv4EAJR6p7X
NusGQH12y9AjhIApmRm9uG2TCuy79B4fYQTY+o6r+PxcwxjI8vkJNnkgKcN0
cz/5M6RYS4Y/2V3FKpgZ3zI8LQWMezI1m+IrqFL9DPOhXcXOmeu4Z6A3/Pku
bc5vMg2amykOynwr2Ku9NxOeAvUQ+P6Kyl7hN3jy4ePnyqvLmM3Dsry6hCb4
48+d43QyARQJO7+J3zeozuuIx8Q4AlPkxyYKj1lo91/zb3b9jh0sbtYyZeyE
7b/9vlNm+SCdpVObgepFhOZ9F7/BcKiucb1HeWoOvj4XvaTSv4jVCjfq5pJ3
A13iF+dAj1Io2C4VykD5xVcg7kv7ORnqsz7pffowB2Kml1+kMS9il+wfuqUX
9sKPAXguJlYNgsMeoWeRn/LODgvIO5oH2lPP+ET552GevSZQXncBUx1Xl21/
1A+S6/Icbnz1cO7Mf3uaSJcKx1dy/GYtAWchClqSuHlUB51dyrLmMdoHLctD
9QOgYf0lmL+hEY5oyzrFoTq+JiXXNdpTCTzU2dd4/s1DFCd//6uNOUwvpGZ7
8uwQ9HKe7Sspa4HJrmOJ8/LIx9U8znrdg8FsvkGvyLkF0Dv2MabNYA5rLnLL
u1A8DDnj7iZZxW3wb9BwegHpW45WwwGxnkaIPCjNe0w+BDbDbQOJ3zdUszJx
UgNbWGHrPnxAuxMaGfwIhz8RsFHh7+QqTa3Q9nizVNUuBagljok4b+EYxlrd
66MQDMFfwvo3X3ZBO62YYpkzAZvzWRYvU+8EPtrnMxb8WSAbwfmD2McYGcHD
KHAgDvQ4LdkyTXrgH4dPujE/AeO58p6BdaUbrp+Ok41lLgDmNra/T5HPlcjn
3u2dSAehwHVhEZY+KJqqpabtXcO+PjA9YNHVB3f5UubzkorhNNWs1T/kfxUP
DsfevpAPbP1r6gYH+6HlvG/4KcM1jCOmgMy2fADoyzNSXDPKwBInCAt04pjR
2tkEs9oSqOeYJL081A8LC3Leb3+uYklLjQ9tkoaAMmX7gSB1FewbLmrgBThm
JmIiXfyqCqZ4S2rtTQZgMT72O5frKsbcYGaX7joCkithoW2PqmEl6773s0hU
j6Ie/n4sVgeT72x7o5Cu+EkdcPGWOY6d0PFycHvdCJQC4icT/OrhjPaD1RIZ
HAMKzwhH9xagF/oLiSUNYCbgqPoSzRfbY+dv2iHtsKB6n2l0qBF6M9hpa6cJ
2FGTU9kvBj/BhYw3LBVrTSAVEsWYnUzAUmi5SV2u9YKBRPp314VmsFISMRd4
RMCSub8/O6TWD100jzVoy1tgxNVft4qGgPW+qk3noB2E0ErrO3U0eUBFdajN
BumlHQOjtpyHFRBLqXL1aasHDCl9OedCXDfZk9gPmbQASbOIbyS+oZDIut84
gfR5MXu/hH6HDyjr/B2RUI6GNLlCoRbivk4Ss1Luw+FQ9osRvmkmgaPFnL8X
8qEtXE6KLOFJoGbMG8jvlwp0z8ICCteJ94YHOPw9mQnHNpa5HodnAMOtqvIk
FA8HPA8v31TPh7Q8m6iBtmxonox6kIV4G8gPWQT7lYBDl7WdxWFXqApl/pFB
7HvXCusQk34FzBxVflyb+XBbaN66Gfl0L92FS6qBNXCzsyej4n4gOAk35rii
+I8305dkNHwHzqfsYj5FFcIboZYTeVk4VsRiVz1ZiHzLLyaP3fthkCJT8f4n
8fz2Ke2MfK5QqCYJnvgRVARFUupNaUE4Njx7AwtnaYKxzPmRsAsx8FjgokYt
ypfne6OVr2US4ILFPdZzz4phpM475aEV4h+aC7Ens1tggOXBY4eziVDwNB6/
9RvpNAbdm0wn0uHyZ3y263QJhPjRkpvew7HRgHdaRnfbgWuwPK14IhlOm6+Z
HkW8d5td5O2PzFww7zFip6ssgR7T+0+5z+MY3XGqWXuqTyBd8GxJ/W4afA3G
jgTMI9/nl8xQNVkE7vrhxauUpdBuyWtWfhDpjZv2T8QGumFUVIprYi0d4mQ9
fpB8Qbr6xQnTg2plgLvxOASFOcCbupU94r297daEwKAZU/jS/TGS5V8mJMb2
p+ghvbolcnDZmPYjZBWwJCTRvQffzVOPiPeZ/idDcupCtCckz3n8YjLNBlrZ
qOTWauQjYsIiil7WwSDJNYG84SBQPHT4fS7R9wUonJ0tDAaT7nfWggE5cIr3
RMIymheDcyKUfU8b4L3mEaF833BoTOBhOIPijaolje7hZixE50hYl+vkguUP
y5bxEByj/TX2Syu3CW4raQSJe0ZDYoHvVXcUh83741l/nVJhI4qCgrCWC2Nb
sZRX7JBPYcnjjqNqBevbNga29PEgUpfTbrOB5n2HUrUgNBssylyUhijzoCP5
cCyVDo5lxulr1b5oh5JtyXCR50lwTfaRT8UyjlEL+E2suhdC79KlzPb0XDDq
+fgmWRzHNJSsHRxGO0HGyGpv3DcZbnUu/lhC+jmjY2hlqaAE5qnIn+etp0BS
UyAZ/wiO2Vz/knKEshJkDQqLdetTQd5DLLmiHenAjmf/jhyogcufrEwIAmnQ
xqFyo70K+YWoq2zhsxjEDZBdXZFNg9KEpTp5hNv893xVwnYDKDYt5ZGQpkEW
159E0zAc2+DnfxdL0wzkr1hYLwinQrD3znF2Zxw7+aaa/xVzK1BU29QEjScD
39xZh14jpGNJAn5d52qHlBq+riSLSDh7IlxAZQXH7i67Dv66VgTOLYYOJBtW
EBriduwzipN5yicvOn8+h55Dif4S8u7AWBnzk7hO9DhZvzdnxw0E+zjDrmV5
w31NqWxrFCcPdwafEc4EgoI5k6fhxUBQizhkkI/y7oiYCrdUYhSMZ8ZXzaL6
leQXEEqH/H5XufqRgQvJIJRx3zbHIwwUA0+ffIH85lEOJ8I1nwzo1DYdNXWL
AGE+d/nvSB/+jC9g1P+VB/bNqwWuJ6PAP9BZ2p+I/88cvZjhUvA2UAg+4mIJ
T1/qXfyGxsm6wl6R428MpSoVe4NZkeDWJh7oNY7yyztudIC2EmYn1WxSH0Ug
63v/z2gv8f6+p5nYuWpwEI+ApB0X5Nf8554R1x8PcMV//+cKMntOmTKJnjCp
479LPIfN9nU+3Wsff6ivFbKing+FjvwXttpIbwgLNzvG8tch/7C04yPqC8GX
bOOI+1AWbt7yC9CPBMYiM74QriBQ76o6+4p4HmyXknidZz2I0g7fiA7zhIZb
W4qHkI4dC3PPMehsgNKU7OKgDITr7sb8JMJt8HxCSqNyEmwy1Lae8QyGwM6K
W0UoL8Smsxoq7qYDKMW2cbvqw2xWB88vFD/i87mssbGN0HwmRkJ0OQSmJCUs
FlFeSO9u8MU/yAUSZRIuwxuh4CPmGc5FwDFB1s102kuFgOd4Ha7/FwL9Tcwv
+hZQXWDoliZ1LIE7nJnphIBXQP2tR5PoZ8M5V+R5tY0gKmxV8H5eMDwJjjC3
ncKxFfmTuSKPyoH0QNjYvetOMPvZ94EjcX2W+accHbcreLYZcz4NDoCBF/Kd
W6PIb7L63qTYrYR3P6R/mPK4A8WZwI1JhPNYqO8xZ14/ELtjSl5T4QVwbP/D
6z4cc2nmUxQ0rAbevFmHTxvvYLHv0B9nhHOvdxtnrHwECBr3KUTftAErs9OK
xR04Nv74ynkKw1qYO+HlQB/pC/dDbv5zQPwjKKOsv0GdCLdTssxY1J9jN5Qu
R7SgeZwZNmzXsq6DBlIbo4KjAcDraaFfhnxNdQq5QS6kAaUqd4wPXT/s7LZX
mGTPYYlGWrZ88wsQk3ta5kNRIGhsCbz0+4Vj+57cPCbT2VB4isF371oghF+E
QFcUz0yhJZdJnPKhN4dEeEzAH8jLO611Ef8c0qsmcbxRDJdZLKeS871Bc69K
22cOx0zWK25oVpSC8kT6ubtXXYFjfotLHOHMUX595nZLOfhMrNPGuj+DA8KX
r7V8xrHulrMRWo8rQV776QubXR9IoHgiTo94iaUkK5QtuwqsjCnG8EffgVFD
us9jdAYrdyy3TX3cD3+uHPfRsmwDl0E8b/otAXLSX3fb0/fCv3e5t5rM3EFC
Si78DPpfi5EBCp5suaByiqwjjv8lHD7pcX+NmHfOZfs7jwxhYl4v5lP4Gzix
P3YsDv2+mvtdIsjHGWLrLurNjTvB0WP93SzEPoqdwin5BR/InpF6yfHDDVjq
T42SoXnvuqV5JNsqDOlJXIlWxRPkheulniE+6VT7xstnGgeS0em+4opeEChZ
mXoF5YVt2recddMUUCYPJXj1eIJRSNr+CZQXPL/KFOOlM2FNg6tkL/0trB9o
qLyB8Bcp6H39JagAtpOHkiX6jOFhnlYrjsYzfPvVhmygAbx/tBK8laMHQmL/
iTiuIV2ndKB29WIRjFyaGmMhm4aogdvf1NqHMJrzgs1r+Utwb3D9xNWXNnBM
m3qMqGfG77bw8hg6wWeS/UKNnbdg2+WvKETs+5K391377Q30sjnelPwdEEqz
EfdOBwcuEXlPXCka3twkVw8hd4Vn1/7eFCL2mX/lbXpYGgoveBmunLpXARMm
SZt1X3BQ2yQttXkQDNuPdvttq6qAuUJq8uIQDnPcx03GzKMg0+cQG0OfG0hd
r5KsQ7i9sdVcnlOMhfxOHvu/p9whtHjpaRdxf3emjMH12GRIShul3EzDgOZE
9739GhzuPCp1ClRIgmbRVsfqOlfw2r8rTovi33t+q1OZMQNOkpjk/rV3AIOn
oiYZSP/0HzRXEX+bDVk3426pYM+hKGA39zPimVdtW++ofuaBzOM014yxZ5DN
8KeA2J+AhShMdo0/Bd+0CPsoX1XsuLAARRninwRFrs8BiYWQOF/4x8bPCuwf
7JUWoOfxJ19F13QcIUJX+vkbghvojz4zpt1dBRXV6K9GrBMg1+o2pelsBy8d
ysmJ94TuDKtNW7F4w/DZxHm61SJYZNrlWF/GQYg5Ns5BPhBOidFe3Ut0gm/m
Gw7EfYgjApdyDyC+e27fOkAL5WBQzaAPUzjoMPPEyguFwyWKtJrqaBc4KtzG
R7xHvvBkltbHmzFQtb9AJ+pbDTVH1HqgGwdJVtKNFo84EFn9T6RS1AXIJGD7
DnF9zUYs5r+hJPiaefKLhW096LHNp5NW4BAQ1fZhJycZdrvv1cuMvAU+BtPo
TYQzYYeSZ205DYru1NpJa1oC9sqMgQ7F84/Z6aLY9kywcmcd3NeWwZ5cbagx
QfhvzqrTqJHkgJRU1ZZZahD2XkAg7CbSUePi9rPabc2Q8sS9+h19BnZTzViG
jWQN/rDJeEvMfwZTRX+RqIFiEM4kNYz+jgPVOf746ZJg2D+o26hUUwG6DMJv
tT/jcLspfrjFMwrCZvxqdKJrQH1us5a0A4fiVJFq7YoEKKgLniDLqIfXBu/0
ifsQSX1lRQ5Sp8D/bzlYdg==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Lambda]\"", TraditionalForm], 
    FormBox[
    "\"1/\[CapitalDelta] (\\!\\(\\*SuperscriptBox[\\(K\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalJ]\\), \\(c\\)]\\) (K)\"", 
     TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->900,
  LabelStyle->{FontSize -> 20},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 1.}, {0.000046656298600308496`, 
   0.05351477449455676}, {-3.9999994039535522`, 0.1873455047607422}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.381107365006253, 0.08098645536845506, 0.10749037327762184`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.777740135524677*^9, 3.778289516470149*^9, 3.7786435545233545`*^9, 
   3.7787870193021746`*^9, 3.779293119655408*^9, 3.779293169346833*^9, 
   3.7792940626713457`*^9, {3.7798044145118575`*^9, 3.779804418708333*^9}, 
   3.779807036538355*^9, 3.7800955882138367`*^9, 3.780418467307369*^9, 
   3.7810582966846523`*^9, 3.781061628243744*^9, {3.781240732041932*^9, 
   3.7812407415171275`*^9}, {3.7812409615053225`*^9, 
   3.7812409872584343`*^9}, {3.781241021636503*^9, 3.7812410513718815`*^9}, 
   3.781241283480772*^9, {3.781241316546567*^9, 3.7812413257151394`*^9}, 
   3.781241489443801*^9, 3.781241746197129*^9, 3.781285445519124*^9, 
   3.7823345455487347`*^9, 3.782353235078872*^9, 3.78235377969208*^9, 
   3.7823538390146594`*^9, 3.7823566023670197`*^9, {3.7823571756447926`*^9, 
   3.782357194474841*^9}, 3.7869959960007343`*^9, 3.7870128043924437`*^9, 
   3.7870128427691326`*^9, 3.787013019376607*^9, 3.7870136794085855`*^9, 
   3.787013860492839*^9, 3.78701389735267*^9, {3.787014249525901*^9, 
   3.7870142910509596`*^9}, 3.787014828811844*^9, 3.7870149704119077`*^9, 
   3.787015030381408*^9, 3.7870151462375336`*^9, 3.787100571513015*^9, 
   3.7871016340812736`*^9, 3.787101800929311*^9, 3.7871021808890305`*^9, {
   3.787102442145915*^9, 3.7871024641788235`*^9}, 3.790045396160718*^9, 
   3.7900519072807784`*^9, 3.797114494104565*^9, 3.7971198211720695`*^9, {
   3.7971199798885527`*^9, 3.797119985854687*^9}, 3.79712002197904*^9, 
   3.7971201236237297`*^9, {3.7971202090707006`*^9, 3.797120224141252*^9}, 
   3.7971202546874*^9, 3.797817965529828*^9, 3.7978209274727025`*^9, 
   3.7979014759159555`*^9, 3.801267435048049*^9, 3.801306455248191*^9, 
   3.801327072999135*^9, 3.801623622886428*^9, {3.801882278604568*^9, 
   3.801882313583675*^9}, 3.8020474612083464`*^9, 3.8033084497485857`*^9, 
   3.8033521939409943`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Determination", "Subsection",
 CellChangeTimes->{{3.801931342486289*^9, 3.801931354322246*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Determine", " ", "which", " ", "basis", " ", "state", " ", "the", " ", 
   "ground", " ", "states", " ", "form"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.801931347231104*^9, 3.801931392287868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Eigenstates", " ", "represented", " ", "in", " ", "the", " ", "basis", 
     " ", "of", " ", "the", " ", "two", " ", "lowest"}], "-", 
    RowBox[{"lying", " ", "doublets"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pState", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mState", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmmm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "mState", ",", "mState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmmm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "mState", ",", "mState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mpmm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "pState", ",", "mState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmpm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "mState", ",", "pState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmmp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "mState", ",", "mState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ppmm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "pState", ",", "mState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmpm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "mState", ",", "pState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmmp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "mState", ",", "mState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mppm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "pState", ",", "pState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mpmp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "pState", ",", "mState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmpp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "mState", ",", "pState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pppm", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "pState", ",", "pState", ",", "mState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ppmp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "pState", ",", "mState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmpp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "mState", ",", "pState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mppp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"mState", ",", "pState", ",", "pState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pppp", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"pState", ",", "pState", ",", "pState", ",", "pState"}], "]"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", "*", "\[Pi]", "*", 
        RowBox[{"\[ImaginaryI]", "/", "3"}]}], "]"}], "//", "N"}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Tetrahedron", " ", "basis", " ", "states", " ", "given", " ", "by", 
      " ", "\"\<Quantum spin configurations in \!\(\*SubscriptBox[\(Tb\), \(2\
\)]\)\!\(\*SubscriptBox[\(Ti\), \(2\)]\)\!\(\*SubscriptBox[\(O\), \
\(7\)]\)\>\"", " ", "by", " ", "Curnoe"}], ",", " ", 
     RowBox[{"doi", ":", 
      RowBox[{
       RowBox[{"10.1103", "/", "PhysRevB"}], ".75", ".212404"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "6"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
       "ppmm", "+", "pmpm", "+", "pmmp", "+", "mppm", "+", "mpmp", "+", 
        "mmpp"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ep1", "=", "pppp"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Em1", "=", "mmmm"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ep2", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"pmmm", "+", "mpmm", "+", "mmpm", "+", "mmmp"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Em2", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"pppm", "+", "ppmp", "+", "pmpp", "+", "mppp"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ep3", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "6"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"ppmm", "+", 
        RowBox[{"\[Epsilon]", "*", "pmpm"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmmp"}], "+", "mmpp", "+", 
        RowBox[{"\[Epsilon]", "*", "mpmp"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mppm"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Em3", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "6"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"ppmm", "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "\[Conjugate]"}], "*", "pmpm"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Epsilon]", "\[Conjugate]"}], "^", "2"}], "*", "pmmp"}], 
        "+", "mmpp", "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "\[Conjugate]"}], "*", "mpmp"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Epsilon]", "\[Conjugate]"}], "^", "2"}], "*", "mppm"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1x1", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Epsilon]", "^", "2"}]}], "*", "pppm"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "ppmp"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmpp"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mppp"}], "+", 
        RowBox[{"\[Epsilon]", "*", "pmmm"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mpmm"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mmpm"}], "+", 
        RowBox[{"\[Epsilon]", "*", "mmmp"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1y1", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Epsilon]", "*", "pppm"}], "-", 
        RowBox[{"\[Epsilon]", "*", "ppmp"}], "+", 
        RowBox[{"\[Epsilon]", "*", "pmpp"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mppp"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmmm"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mpmm"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmpm"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmmp"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1z1", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
       "pppm", "+", "ppmp", "-", "pmpp", "-", "mppp", "+", "pmmm", "+", 
        "mpmm", "-", "mmpm", "-", "mmmp"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1x2", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "2"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"pmmp", "-", "mppm"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1y2", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "2"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"pmpm", "-", "mpmp"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1z2", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "2"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"ppmm", "-", "mmpp"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2x", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Epsilon]", "^", "2"}]}], "*", "pppm"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "ppmp"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmpp"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mppp"}], "-", 
        RowBox[{"\[Epsilon]", "*", "pmmm"}], "+", 
        RowBox[{"\[Epsilon]", "*", "mpmm"}], "+", 
        RowBox[{"\[Epsilon]", "*", "mmpm"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mmmp"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2y", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Epsilon]", "*", "pppm"}], "-", 
        RowBox[{"\[Epsilon]", "*", "ppmp"}], "+", 
        RowBox[{"\[Epsilon]", "*", "pmpp"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mppp"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmmm"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mpmm"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmpm"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmmp"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2z", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
       "pppm", "+", "ppmp", "-", "pmpp", "-", "mppp", "-", "pmmm", "-", 
        "mpmm", "+", "mmpm", "+", "mmmp"}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8019447465356603`*^9, 3.801944854312714*^9}, {
   3.8019474221989603`*^9, 3.801947423173354*^9}, {3.8019474959836197`*^9, 
   3.8019475011668944`*^9}, {3.8019475511789083`*^9, 3.801947603017579*^9}, {
   3.8019477519255705`*^9, 3.801947894027135*^9}, {3.8019480232093725`*^9, 
   3.8019480911143045`*^9}, {3.8019488244242077`*^9, 3.801949037929413*^9}, {
   3.801949466492858*^9, 3.801949595272847*^9}, {3.8019496651182036`*^9, 
   3.8019497416972218`*^9}, {3.8019499710418253`*^9, 
   3.8019499741789694`*^9}, {3.8019500127807064`*^9, 3.801950020531841*^9}, {
   3.8019503238838806`*^9, 3.80195033482605*^9}, {3.801950376814454*^9, 
   3.801950378238967*^9}, {3.801950551764553*^9, 3.8019505728039055`*^9}, {
   3.8019506086438665`*^9, 3.8019506256396065`*^9}, {3.8019506597890973`*^9, 
   3.801950662719681*^9}, {3.801950714202832*^9, 3.801950717682575*^9}, {
   3.8019508817261505`*^9, 3.80195088680905*^9}, {3.801951179263166*^9, 
   3.801951302450016*^9}, {3.8019603694667015`*^9, 3.801960397551317*^9}, {
   3.8019604379004583`*^9, 3.801960456649537*^9}, {3.8019604988281655`*^9, 
   3.8019605120779862`*^9}, {3.80196687149055*^9, 3.801966974008211*^9}, {
   3.801967013428557*^9, 3.8019670919722815`*^9}, {3.80196753547478*^9, 
   3.80196775257773*^9}, {3.8019680180646243`*^9, 3.8019680230970287`*^9}, 
   3.802048353605003*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", "/", "\[CapitalDelta]"}], " ", "points"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Inverse\[CapitalDelta]List", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.000046656298600308496", ",", "0.0009331259720062202", ",", 
       "0.0019595645412130644", ",", "0.0033125972006220836", ",", 
       "0.004992223950233283", ",", "0.0066718506998444775", ",", 
       "0.009984447900466563", ",", "0.01250388802488336", ",", "0.015", ",", 
       "0.01665629860031104", ",", "0.0175", ",", "0.020808709175738727", ",",
        "0.0225", ",", "0.025007776049766724", ",", "0.0275", ",", 
       "0.028506998444790047", ",", "0.03", ",", "0.0325", ",", 
       "0.03331259720062209", ",", "0.035", ",", "0.0375", ",", 
       "0.03998444790046657", ",", "0.0425", ",", "0.04544323483670297", ",", 
       "0.0475", ",", "0.05", ",", "0.05351477449455676"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]List", "=", 
     RowBox[{"1.", "/", "Inverse\[CapitalDelta]List"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Critical", " ", "\[ScriptCapitalJ]", " ", "points", " ", "signifying", 
      " ", "the", " ", "change", " ", "in", " ", "ground"}], "-", 
     RowBox[{"state", " ", "degeneracy", " ", 
      RowBox[{"(", 
       RowBox[{"change", " ", "of", " ", "phase"}], ")"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]List", "=", 
     RowBox[{"{", "0.0", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]List", "=", 
     RowBox[{"{", "100", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalJ]List", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", "0.01"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fidelityList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "\[ScriptCapitalJ]List", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", "=", 
          RowBox[{
          "\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"crystalFieldH", "=", 
          RowBox[{"HcfFull", "[", "\[CapitalDelta]", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "\[ScriptCapitalJ]List", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[ScriptCapitalJ]", "=", 
             RowBox[{
             "\[ScriptCapitalJ]List", "\[LeftDoubleBracket]", "k", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"H", "=", 
             RowBox[{"crystalFieldH", "+", 
              RowBox[{"Hint", "[", 
               RowBox[{"\[ScriptCapitalJ]", ",", "\[ScriptCapitalD]"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"energies", ",", "energyKets"}], "}"}], "=", 
             RowBox[{"Transpose", "[", 
              RowBox[{"Sort", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"Eigensystem", "[", "H", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{
                   "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "<", 
                  RowBox[{"Re", "[", 
                   RowBox[{
                   "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "&"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"energies", "=", 
             RowBox[{"Take", "[", 
              RowBox[{"energies", ",", "16"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"energyKets", "=", 
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{"Chop", "[", 
                RowBox[{"energyKets", ",", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "6"}]}]}], "]"}], ",", "16"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "A1"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Ep3"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Em3"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"4", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "T1x2"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"5", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "T1y2"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"6", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "T1z2"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"7", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Ep1"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
              RowBox[{"8", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Em1"}], "]"}], "//", 
              "Chop"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8019447465356603`*^9, 3.801944854312714*^9}, {
   3.8019474221989603`*^9, 3.801947423173354*^9}, {3.8019474959836197`*^9, 
   3.8019475011668944`*^9}, {3.8019475511789083`*^9, 3.801947603017579*^9}, {
   3.8019477519255705`*^9, 3.801947894027135*^9}, {3.8019480232093725`*^9, 
   3.8019480911143045`*^9}, {3.8019488244242077`*^9, 3.801949037929413*^9}, {
   3.801949466492858*^9, 3.801949595272847*^9}, {3.8019496651182036`*^9, 
   3.8019497416972218`*^9}, {3.8019499710418253`*^9, 
   3.8019499741789694`*^9}, {3.8019500127807064`*^9, 3.801950020531841*^9}, {
   3.8019503238838806`*^9, 3.80195033482605*^9}, {3.801950376814454*^9, 
   3.801950378238967*^9}, {3.801950551764553*^9, 3.8019505728039055`*^9}, {
   3.8019506086438665`*^9, 3.8019506256396065`*^9}, {3.8019506597890973`*^9, 
   3.801950662719681*^9}, {3.801950714202832*^9, 3.801950717682575*^9}, {
   3.8019508817261505`*^9, 3.80195088680905*^9}, {3.801951179263166*^9, 
   3.801951257284769*^9}, {3.8019682009052935`*^9, 3.801968243442241*^9}, {
   3.801968646926055*^9, 3.8019686731726923`*^9}, {3.8019687086328373`*^9, 
   3.8019687126447673`*^9}, {3.801968899484115*^9, 3.801968900363948*^9}, {
   3.8019689409772778`*^9, 3.8019689417489595`*^9}, {3.8019690522844777`*^9, 
   3.801969079665043*^9}, {3.801969112424893*^9, 3.801969134709461*^9}, {
   3.8019695508739443`*^9, 3.8019695573632746`*^9}, 3.8019702100365076`*^9, {
   3.801970242626371*^9, 3.8019703017210407`*^9}, {3.8019703416552286`*^9, 
   3.801970422027598*^9}, {3.8019706326163473`*^9, 3.801970650053569*^9}, 
   3.801970979083866*^9, {3.801971244370846*^9, 3.8019713111238184`*^9}, {
   3.8019718226606746`*^9, 3.801971834425634*^9}, {3.8019734553061695`*^9, 
   3.801973483625146*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fidelity Plots", "Subsection",
 CellChangeTimes->{{3.8019709848402123`*^9, 3.801970986924445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Phase", " ", "boundary", " ", "plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"minX", "=", 
     RowBox[{"Min", "[", "\[ScriptCapitalJ]List", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxX", "=", 
     RowBox[{"Max", "[", "\[ScriptCapitalJ]List", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minY", "=", 
     RowBox[{
      RowBox[{"Min", "[", "fidelityList", "]"}], "-", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxY", "=", 
     RowBox[{
      RowBox[{"Max", "[", "fidelityList", "]"}], "+", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(+\)], \((3)\)]\)\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(-\)], \
\((3)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(1  x\)], \
\((2)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(1  y\)], \
\((2)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(1  z\)], \
\((2)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(+\)], \((1)\)]\)\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(-\)], \
\((1)\)]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"n", "=", "1"}], ",", 
     RowBox[{"n", "\[LessEqual]", "8"}], ",", 
     RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}],
        "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"\[ScriptCapitalJ]List", ",", 
          RowBox[{"fidelityList", "\[LeftDoubleBracket]", 
           RowBox[{"n", ",", "1", ",", "1", ",", "All"}], 
           "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plot", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}],
        "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
         "data", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"minX", ",", "maxX"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"ColorData", "[", 
           RowBox[{"3", ",", "n"}], "]"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<|\[LeftAngleBracket]\!\(\*SubscriptBox[\(\[Psi]\), \
\(0\)]\)|\>\"", "<>", 
            RowBox[{
            "legend", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
            "<>", "\"\<\[RightAngleBracket]\!\(\*SuperscriptBox[\(|\), \(2\)]\
\)\>\""}], "}"}]}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"plot", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<\[Lambda] = 0, 1/\[CapitalDelta] = 0.01\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[ScriptCapitalJ] (K)\>\"", ",", 
        "\"\<|\[LeftAngleBracket]\!\(\*SubscriptBox[\(\[Psi]\), \(0\)]\)|\
\[Square]\[RightAngleBracket]\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8019705667948275`*^9, 3.8019705970849285`*^9}, {
  3.8019709206755047`*^9, 3.8019709285770454`*^9}, {3.8019709752260866`*^9, 
  3.8019711810292015`*^9}, {3.801971426964219*^9, 3.8019714813499346`*^9}, {
  3.8019715442996235`*^9, 3.801971555773082*^9}, {3.801971619124426*^9, 
  3.8019717829353604`*^9}, {3.801971874746458*^9, 3.8019718984444265`*^9}, {
  3.801971944861559*^9, 3.8019719483188705`*^9}, {3.801971981201395*^9, 
  3.801971987034896*^9}, {3.8019720379115543`*^9, 3.801972038366596*^9}, {
  3.801972112413104*^9, 3.801972130245485*^9}, {3.801972260017295*^9, 
  3.8019722688558607`*^9}, {3.801972302960285*^9, 3.80197232044959*^9}, {
  3.8019723905906754`*^9, 3.801972439746997*^9}, {3.8019734899796762`*^9, 
  3.8019735354025497`*^9}, {3.80201937056802*^9, 3.8020194246109695`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0., 0., 0.]], 
         LineBox[CompressedData["
1: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
B+XhNs75l/8DCI1bIQ==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
         LineBox[CompressedData["
1:eJxd2HlcVFUbB/AxNZXKEBC1ZDFSQcMQTcllfmNaJPoi4o68AS6ouLEYuaGD
S7ag6SuaqNmovG6ZkqIlKY2UHzdEcMEV2WWUbQYGZoZheeHex3vfz3P/0d9n
hjPnPN9zzj339pmzPHD+awqFYkc7haLtX7q0r/7z4HDkaJsHLX+9yqd8C1c7
nJLz5vLJfzhvlnPwDxl17sFyHiJccrYRGpRzW2u+hc1Sbm2stUU5C839IOdw
4ZLzaKFBOTsIHZRzRVv3ypukLDSXIee9SW2XnKOEBuX8udBBObsIA5ZzfVtz
dY1SvpXZdsk5ua18h+W8RuignAOFAcvZQyignMVLzqKHlXlYmYeVeViZh5V5
WJlHA/NoYB4NzEPOSqHBBubRwDwszMPCPOQslC/SwjwszMPCPMzMw8w8zMzD
zDzMzMPMPMzMw8Q8TMzDxDxMzMPEPEzMo555yHm7UMB65lHPPOqZRz3zqGMe
dcyjjnnUMQ85C91zrmMeRikLHJlG5mFkHkbmYWQeRuZhZB61zKOWedQyj1rm
Ucs8aplHDfOoYR41zKOGedQwjxrmYWAeBuZhYB4G5mFgHgbmoWceeuahZx56
5qFnHnrmoWf1r2b1rmb1rWb1rGL1q2L1qmL1qWT1qGTjr2TjrZCywLlazkJ5
3OWcK8yncilvEuaPnL2F+SLnIqHBl2w+vGT+L5n3C+b7gnm+YH465qVjPjrm
oWMeZcyjjHmUMY/nzOM583jOPEqZRynzKGUeJcyjhHmUMI9i5lHMPIqZRxHz
KGIeRcyjkHkUMo9C5lHAPAqYRwHzKGD1z2f1fsbq+4zVM4/V7ymr11NWnydS
LhC6/1jKo4Txy3mPMN5HUjYKDT6UcoDQQTmfFObTAyl3FjdgKc8T5kuulLXC
/LgvZVdhPsh5rTDge1J+KDR3V8pDBd+7zPMO88thXjnMJ5t5ZLP6Z7F632L1
zWT1vMHqd53V6xqrz1VWjytSXimM/x8pewnj/VvKOmF8l6WsETqolXKK0P90
ub5Cfy/K9RL6d0Eev9Cf36WsFn4/Vcp64fd+k/srtH9K/n2hvePs75PZ9w+w
zxNZ3sQ8/u/qLnwO9vdYe21WcWVJNcQD4AG87xbZ4t0jE/T7mAOzbtTBy1CL
/ZP+nvov5QJxfKz9VClTfaQsjveClKm+rP10+fuij5TFel6WMvmy3/9Hbk+c
H1C9rdkUeu0z2IrzBwFFrfcczxjQ/ELL0t9ST313AGL/rmO71TlnWuAe0PyE
4n5iaMgmN3iJ8xeaswcjfL4YDZrf0J0wRZ1TjIfY/yzorzX90OH4NupHNuyW
xIYkZSTgmLh+EDM5zfqV8nvQ+oJi592fL9V2hDi+HET2G+yb98Zw0PqE4mL/
KzsTapU+4vpFdlbQlglOk0DrGyPTDn1Qpvsa4vy/h4JDw1Yld3AG7Q/443Ly
LI/740D7BxQn+06Z5JSvXCjuL9AkvJX28L3NoP0HQdeOqK13NyFF3J+g3Zf7
n069XaleDxHw05JdnT4eCrO4v2Gd36eh4SUbQfsfFA993ZqelStV4v4IbW6C
+uYHHlTPx3gSNX1FatBGfCPur0g5NqPC4u0F2n/RbZfZ8ItpA7LF/Rmqm6eU
o672pHrnISmmOfX3fRvQU9zfsXjckqTIlRtA+z/2h0zdOO7nQISK9weo8xeE
WCs9yKMAu8b5dvUujcdU8f6CE/nPPM88jQfdf+Co+H5El9UzaHwF0NrFWmcU
dievQijatbu5/QMH7BfvbzAGfZZy/qA/6P4HTYH7wI6LHSHeH4qgiH73xke9
hpBnEfannXTYXTGJ6lGEkRFxvtqE9RD352Kk9Ou0Nm2nGnR/xgGfaT2DotXk
XQztohLDIc8BVK8SqG6s/GpS/+4Q9/8SKEquXFmm6wA6HyA7SlPjPtCH5kMp
/IfrvXYtW0/1LIU+ZN2XN0sH4B/x/IFnK/JKDz1bBzqfQKHMUA+Kd4A4X55j
xqXsbx7Hr6V6P4ddZP7IY+3W4U3x/IOIAq9G/7NxoPMRZthfyskLj6P5VIaL
Xzd2maWdSB46qEoKfvUcb0seOgROK3UZsHoteeiwff1a1cDXhpCHDhfzDNrK
H2PJ4wVWDjzqbt20hjxeYNXgHadjB68hjxcYNTsk+attq8njJdRPd2f2s1eQ
x0sYm8d+G3ZmLnm8xJc97wx3K15FHuX4/O3S2NtbV5FHOfYPsrndfvgq8ijH
oSL71VWxkeRRgbRHn+oTt6wkjwoovNuPDxhRpaTzMxTjz+4My3i1PiuhTrka
fH50k5LO31B/2zm5jymWPFrzjuM2P5+rUdL5HZdPfDMgfV4seVRBPVJv13y2
K3lUwTVqt6PPxmHk0brP734y/UTPXuRRDXWEfXf9WBfyqIZqwfGlzm6O5KGH
4l5WTMA9BQaIzyfQTHiv+NGWiaDnF+xZHHtg+bIYGl/r90O27Wj0tCcvPYL7
JHoOSYlGlvh8hGWL+mTc+Vc06PkJXR86byt8GUXjN8C968kfh2yMIk8D/tox
PMbPLYrmpwGrbqVM90+PBD2/wWWUZlDwrEjQ8x2iQxoMy3XLyduAIyXxz5Pf
XU7ztwYnBxt0SyYtAz0/Qj8iL3tpgy3o+RIai1oTtqMbzYcahO6PONs/zpbq
WQOFbVOPmh4uEM/DNfCZ2Tdk0zRX0PMt3smf37F+2SKaL7VIaLc8IrzDfKp3
Ld74NcHJpXY+vhafnxHwIOJMek4f0PM1Wnv2xlu9w2k+1WLN++5/n/OdTx5G
pN+8kHnc7R3yMGJ2Wsj11QlzycOIuJAuE33S55CHEbbBqfraP8PIw4gxe573
3jfIlTyM0KzJOdp7xOvkYUTK3WEb/F6zI4869B9xr5uTNZg86lBRPvnoh2Nm
k0cdVMF7j8yre6Gk9xuwj3m97PDtGeRRB83c6hNvrrAo6f0I1HFmx6CTj2j+
1kPztufpzRcblfR+BUWqVKfvjwSQRz1yJx1smTLEnzzqsXPjzayjR/3Iox4d
8ob8njnYlzzqkdpFob51cix5mBBQlph0Y2utUvQw4ce+Ng5bh31MHiYci+lj
lxtUoRQ9TDhcdr4ko1c/8jBBe7p0gs/CJKXoYcIfWf6dz5cXKEUPM+Lmvz4h
psWOPMw4qBg75Xr0YPIwo6Da+kt2bplS9DAjbGj1Ahebm0p6f4b+x8InzIod
Sx5maK1rNm/MzVfS+zfs1p4ZrT7gRx4W3HZ2iAob4E8eFiimh0SvG/iI9gsL
Nvy6/lqPPwNpfViQ3PvJ7BqvAPKwYHv4jMMnwuxpfViQuK2D9+H+M2l9NOCT
EPdFiy2zaH00YGFC3RaTxpU8GrD32fAg2+8+I4/Wz/tMzpz6W1/yaICf49Ev
py0IJY8GRPZe/HnohjDysCKo6dPzX0TOofVhRejIn8Z2/7hJSe9XW89X7S7d
/ndHWh9WzKx38KgcOJ88rLCtVO6Zd6EXrQ8rHn9kP2e9JZzWRyNSJh78UG/q
SR6NmNnTUnF57ULyaITKCd9tu+tE66MROrvj+YVpA2h9tH7+Tk64b/uO5NEI
tdGp6pO4JbQ+GqHpf8c3SduePJoQH59XvLd1P6H321iYNMt4/y93Wh9N2Ns1
2/yew6v9qgkRTmnvL1vxar9qwpv5HhlVlkjyaIJq6ObDzul1tD6asT394dLx
5a7k0YyJW1d52IdEk0czgqbvm9d0Opo8mpG7486uvn4x5NGMeWP8n45OjyGP
ZgTOdFk/d+gK8miBNrxlzH93OpFHCxQ2pyp1rhbyaME11RSH8nQv8miBW+LV
qT91jiWPFmiGew/98EBv8miB6lyvcd0WdXx17lZFpCSoHCdPx/8AKn9Ikw==

          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.996078431372549, 0.9882352941176471, 0.03529411764705882]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
         LineBox[CompressedData["
1:eJxd1zuIXFUcx/GJpJBgYRHRKmoXrUQtLMyji5VosEwhomJnBAuJFikSESyi
YKEiQcgWCrJECMRAiJu4opHNsjExu2oS57GPec+dmfu+8zDzP2f///C9ze6P
2T1zzu9z5ty5T77x7uG3HiiVSp/vKJVmP/21sP3L6pmj+3atTn/ezvOHKsd2
z1s+2Xr1pz0nLR85dSXae8Tyc3JZ3iUDWp6Ndqgy0XxvsHsjWpbhTll+Wy7L
+2RAy7tlgpbbs+m1xppluCuWv/5qdll+Twa0/JJM0PLjsmDL8Wy4aKT52tLs
sjw3q++M5Q9lgpYPy4ItPyUFWnaXZedRwKOARwGPAh4FPAp45PDI4ZHDw/J+
GTCHRw6PDB4ZPCxLfUczeGTwyOCRwiOFRwqPFB4pPFJ4pPBI4JHAI4FHAo8E
Hgk8YnhY/kwKjOERwyOGRwyPCB4RPCJ4RPCwLNPbE8Ej1CwcSyE8QniE8Ajh
EcIjhMcQHkN4DOExhMcQHkN4DOAxgMcAHgN4DOAxgEcfHn149OHRh0cfHn14
BPAI4BHAI4BHAI8AHgH676HvHvrtoc8u+uuiry766aCPDtbfwXrbmoXzmGWp
Z6/lW7KfWppPyP6x/KzsF8tVGbCJ/dCEfxPeDfg24NmAXx1edfjU4VGHxxY8
tuCxBY9NeGzCYxMeG/DYgMcGPNbhsQ6PdXjU4FGDRw0eVXhU4VGFRwUeFXhU
4FGGRxkeZXiU0f9/6Psu+r2LPu+gv9vo6zb6+VdzWab/j+YXZf2Wv5T1/q05
lAHXNL8iE7T8g+ynVc0PugNY85uyX25pXpD98ZfmJ2Q/WP5IFnxT85oMd0Pz
8+J7A55/wu86vK7DZwUeK+h/GX1fQ79L6PMP9HcVff2Ofn5DH79q/kDWv6j5
GVnvL5rrsr7Lmr+VCS5oPivzv2T9ynwvWl8yvwu2fpnPec3H5f3PaQ7k/X60
+cr48/b+Mt73+P85/P1pvP4F8gl43Hc9Iq8fwP9rdl8AT+P1uQPvP5rt+PTl
nfuPu/np637+mstuffj/cza+60ezW+8Fzb5fjH/J/t75aHZ9XtbsffH+izae
2x+aH3b7R7PfX5jfVVuf25/2fm7/avb7G/NftvXLtaL5O/f50ew/X1ifZf/5
1PyC+/xq9p9vzW7/37R+3fmAPiy/484Xzf780XzWnU/oa01z6s43zf7803zQ
nY/o0/In7nzV7M9fzSvufEbfdzQ/5s53zf781/y6uz/Ao6z5NXd/0ezvP1hf
GV4Vzd+4+5tmf//T7O4PVXhW0Ydldz7XNPv7M7xr6Gtdszv/LfvvB9gPG+jT
8qL7/qHZfz/BftlE35Yfct9/NPvvR9hPW/Cow6MOjzo86vBowKMBjwY8mvBo
wqMJjxY8WvBowaMNjzY82vDowKMDjw48uvDowqMLjx48evDowSPQ/LR7PtHs
n1+wvgBelpfd85Fm//yE9ffh2Ucflv3zm2b/fAfvPvoaaPbPj5r98yX2wwB9
Wnbfhy3751vslyH6tvyxe37W7J+vsZ+G8AjhEcIjhEcIjxAeITxCeETwiOAR
wSOCRwSPCB4xPGJ4xPCI4RHDI4ZHAo8EHgk8Engk8EjgkcIjhUcKjxQeKTxS
eKTwyOCRwSODRwaPDB4ZPHJ45PDI4ZHDI4dHDo8CHgU8CngU8CjgUcBjBI8R
PEbwGMFjBI8RPEbwGMNjDI8xPMbwGMNjDI8JPCbwmMBjAo8JPCbwmMJjCo8p
PKbwmMJjCo/Swe1f/gdMSK/6
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
         LineBox[CompressedData["
1:eJxd1zuMVGUUwPHRyhALC0ysUDuwImphIUqHpRJKCmPU2ImdQQsLMHZoYqHG
EBO2wMRsMCFREgMLrlHMslkE2VUB57GPec+9M/d95yFzvm/PMf/bwD+7e+d+
5/fNnblPv/Hu0bcerlQqnz1Uqcz/9cfS7n/Wz504tGd9dmW3F4/UTu5dtD7d
ee3Hfaetj5+5Fu8/bv2cHNZ75ITW87MdqU21H5zswRmt5XRnrN+Ww/qQnNB6
r1ygdXd+eZ2JtpzumvVXX84P6/fkhNavyAVaPykLtk7mp4vH2jdW5of1wnx8
56w/kAu0PioLtj4gA7R2h7XzKOFRwqOERwmPEh4lPAp4FPAo4GH9kpywgEcB
jxweOTysZXwncnjk8MjhkcEjg0cGjwweGTwyeGTwSOGRwiOFRwqPFB4pPBJ4
WH8qA0zgkcAjgUcCjxgeMTxieMTwsJbL2xfDI9IWjpUIHhE8InhE8IjgEcFj
BI8RPEbwGMFjBI8RPIbwGMJjCI8hPIbwGMIjhEcIjxAeITxCeITwCOARwCOA
RwCPAB4BPALMf4B5DzDfAebZx/z6mFcf8+lhHj2sv4f1drWF86S1jGe/9R3Z
Tx3tU7J/rJ+V/WJdlxO2sR/a8G/DuwXfFjxb8GvCqwmfJjya8NiBxw48duCx
DY9teGzDYwseW/DYgscmPDbhsQmPBjwa8GjAow6POjzq8KjBowaPGjyq8KjC
owqPKub/L+Z9H/O9j3new/zuYl53MZ9/tKty+X9rvyjrt/5C1vuXdiQn3NB+
VS7Q+jvZT+vaj7gbsPabsl/uaC/J/vhT+ynZD9YfyoJva2/I6W5pPy++t+D5
B/xuwusmfNbgsYb5r2LeNzDfFczzd8zvOub1G+bzK+bxi/b7sv5l7YOy3p+1
m7K+q9rfyAUuaV+Q679s85Xr/cnmJdd3ydYv1/OD9kfy+he1A3m97+165fyL
9vpyvm/x9wv4/bP4+efoU/D43/G4/Pxl/L22+wJ4Fj9fsHbXp+2vX7vq1oe/
v2jnd/PRduu9pO3ni/Nftt93Ptpunle1vS9ef9nO5/aH9mNu/2j7/YXru27r
c/vTXs/tX22/v3H9q7Z+Oda0z7v3j7Z/f2F91v79qf2Ce/9q+/e3ttv/t22+
7v6AeVi/4+4v2v7+o33B3Z8wrw3tzN3ftP39T/uwuz9intafuPurtr//aq+5
+zPmfU/7CXd/1/b3f+3X3ecDPKrax9zni7b//MH6qvCqaX/tPt+0/eeftvt8
qMOzjnlYu/tzQ9t/PsO7gXltarv7v7X/foD9sIV5Wi+77x/a/vsJ9ss25m39
qPv+o+2/H2E/7cCjCY8mPJrwaMKjBY8WPFrwaMOjDY82PDrw6MCjA48uPLrw
6MKjB48ePHrw6MOjD48+PAbwGMBjAI9A+xn3fKLtn1+wvgBe1qvu+UjbPz9h
/SE8Q8zD2j+/afvnO3iHmNdQ2z8/avvnS+yHIeZp7b4PW/vnW+yXEeZt/bF7
ftb2z9fYTyN4RPCI4BHBI4JHBI8IHhE8YnjE8IjhEcMjhkcMjwQeCTwSeCTw
SOCRwCOFRwqPFB4pPFJ4pPDI4JHBI4NHBo8MHhk8Mnjk8MjhkcMjh0cOjxwe
BTwKeBTwKOBRwKOARwmPEh4lPEp4lPAo4TGGxxgeY3iM4TGGxxgeY3hM4DGB
xwQeE3hM4DGBxxQeU3hM4TGFxxQeU3jM4DGDxwweM3jM4DGDR+Xw7n/+AxTw
rVo=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
         LineBox[CompressedData["
1:eJxd1zuIXFUcx/HRSoKFRQSrqF20Ek0h4rrpItjEYJlCRMXOCBYSLVIkYhcF
CxUJkQRUkCVCwCxo3MQVjW6WjYnZVZM4j33MY2fmzsx933mY+Z+z/798b5P8
2N0z5/w+Z86999FX3jz02r2lUumje0ql6b/+Wtj5z+qZIzO7Vic/7uS5A5Wj
u+csn2i9eGHPCcuHT16O9h62/JRclnfJgJanox2ojDXfHezuiJZluJOWX5fL
8owMaHm3TNDy9nR6rZFmGe6y5c8+nV6W35IBLT8vE7T8sCzYcjwdLhpqvro0
vSyfndZ3xvK7MkHLh2TBlh+TAi27y7LzKOBRwKOARwGPAh4FPHJ45PDI4WH5
ORkwh0cOjwweGTwsS31HMnhk8MjgkcIjhUcKjxQeKTxSeKTwSOCRwCOBRwKP
BB4JPGJ4WP5QCozhEcMjhkcMjwgeETwieETwsCzT2xPBI9QsHEshPEJ4hPAI
4RHCI4THAB4DeAzgMYDHAB4DePTh0YdHHx59ePTh0YdHDx49ePTg0YNHDx49
eATwCOARwCOARwCPAB4B+u+i7y767aLPDvrroK8O+mmjjzbW38Z6tzUL51HL
Us9eyzdlP7U0H5f9Y/lJ2S+WqzJgE/uhCf8mvBvwbcCzAb86vOrwqcOjDo8t
eGzBYwsem/DYhMcmPDbgsQGPDXisw2MdHuvwqMGjBo8aPKrwqMKjCo8KPCrw
qMCjDI8yPMrwKKP/f9H3HfR7B33eRn+30Nct9POP5rJM/2/Nz8r6LX8i6/1L
cygDrmk+KBO0/I3sp1XN97kDWPOrsl9ual6Q/fGn5kdkP1h+TxZ8Q/OaDHdd
8z7xvQ7PP+B3DV7X4LMCjxX0v4y+r6LfJfT5G/q7gr5+RT+/oI+fNb8j61/U
/ISs9yfNdVnfJc2nZYILms/J/C9avzLf760vmd+8rV/m853mY/L55zUH8nnf
2nxl/Dn7fBnva/z9Wfz+Kfz8Y+Tj8Pjf9aD8fBZ/r9k9AJ6afeH3+X1fzHVn
/OfPvn3hy2d+ON2fOebmp7/v56+57NaH8c/b+K4fzW6985p9vxj/ov2+89Hs
+ryk2fvi8xdtPLc/ND/g9o9mv78wvyu2Prc/7fPc/tXs9zfmv2zrl2tF81fu
+6PZf7+wPsv++6n5aff91ey/35rd/r9h/brzAX1YfsOdL5r9+aP5nDuf0Nea
5tSdb5r9+ad5vzsf0aflD9z5qtmfv5pX3PmMvm9rfsid75r9+a/5ZXd/gEdZ
80vu/qLZ33+wvjK8Kpo/d/c3zf7+p9ndH6rwrKIPy+58rmn292d419DXumZ3
/lv2zwfYDxvo0/Kie/7Q7J9PsF820bfl+93zj2b/fIT9tAWPOjzq8KjDow6P
Bjwa8GjAowmPJjya8GjBowWPFjy24bENj214tOHRhkcbHh14dODRgUcXHl14
dOERaH7cvZ9o9u8vWF8AL8vL7v1Is39/wvp78OyhD8v+/U2zf7+Ddw999TX7
90fN/v0S+6GPPi2752HL/v0W+2WAvi2/796fNfv3a+ynATxCeITwCOERwiOE
RwiPEB4RPCJ4RPCI4BHBI4JHDI8YHjE8YnjE8IjhkcAjgUcCjwQeCTwSeKTw
SOGRwiOFRwqPFB4pPDJ4ZPDI4JHBI4NHBo8cHjk8cnjk8MjhkcOjgEcBjwIe
BTwKeBTwGMJjCI8hPIbwGMJjCI8hPEbwGMFjBI8RPEbwGMFjDI8xPMbwGMNj
DI8xPCbwmMBjAo8JPCbwmMCjtH/nP/8B5aK2cQ==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.15294117647058825`, 0.11372549019607843`, 0.49019607843137253`]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
         LineBox[CompressedData["
1:eJxd2Hl8DecaB3DlalQbzac3XXBF9FLa0lhadUv9ULEULalaKlEaWoJY26B2
OYrElQhJxNbalyaSoqRZSyKCVAgRGtmXk+1Mzr5lucw8M3M/z/zD75Oc97zv
833ed2bS45ulPvPbtmnTJvy5Nm2e/UtXuvyfh8eWfdzxYWuanOPGlq51j1Oz
pm7KFQ+Nmn13XzX38VXzIPFSc0dxQDU/G21saYuSnw72dEQ1i8PtVvO34qXm
j8UB1ewuTlDN9c+mV9esZHG4q2qO2f/sUvNycUA1jxMnqObu4oLVbHk2nLlJ
yTm3n11qPv6sfMfU/KM4QTX7iAtW89tiAdUsXWqWPJzMw8k8nMzDyTyczMPJ
PBzMw8E8HMxDzcPFAR3Mw8E87MzDzjzULJZvmZ152JmHnXnYmIeNediYh415
2JiHjXnYmIeVeViZh5V5WJmHlXlYmYeFeag5TCyghXlYmIeFeViYh5l5mJmH
mXmYmYeaxel5mJmHSckix20T8zAxDxPzMDEPE/MwMQ8j8zAyDyPzMDIPI/Mw
Mg8D8zAwDwPzMDAPA/MwMA8989AzDz3z0DMPPfPQM49G5tHIPBqZRyPzaGQe
jcyjkdVfYPUWWH0FVk8dq5+O1UvH6tPA6tHA1t/A1luvZJFzrZrF8vRRc77Y
T3VKDhb7R80DxX5Rc5k4YC3rh1rmX8u8a5hvDfOsYX5a5qVlPlrmoWUe1cyj
mnlUM48q5lHFPKqYRyXzqGQelcyjgnlUMI8K5lHOPMqZRznzKGMeZcyjjHmU
Mo9S5lHKPEqYRwnzKGEeJaz+xazeRay+RayeT1j9Clm9Cll9/lZyiTj9x0oe
Jq5fzdHieh8p2SQOWKDkyeIE1fyr2E8PldxBOoCVPE/sl3wlp4v98UDJnmI/
qHmduOD7Si4Qh8tT8vuibx7zvMf87jKvu8wnl3nksvr/xeqdw+p7m9XzJqtf
NqvXDVafLFaPTCWvFtefoeT+4nqvKVkrru9PJf8sTjBdyfHi/FPV+orzTVbr
Jc4vUV2/OJ/LSt4kfv9FJTeK35egzlccP079fnG8M+zzx9nvH2Y/38tyMPP4
v+tV8edgn4c+tzB1fLMPpAfAwxgdlLzKP2UQ6PuRFP+N/VZGP2yS5qd8nuav
5BJpfWz8i0qm+ihZWm+ikqm+bPxU9fclHyVL9fxTyeTLvj9DHU/qD2hiNJ7+
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
          "]]}}}, {}, {}, {{}, {}}}}, {
    PlotLabel -> 
     FormBox["\"\[Lambda] = 0, 1/\[CapitalDelta] = 0.01\"", TraditionalForm], 
     AxesLabel -> {
       FormBox["\"\[ScriptCapitalJ] (K)\"", TraditionalForm], 
       FormBox[
       "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(0\\)]\\)|\[Square]\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\)\"", TraditionalForm]}, ImageSize -> 800, 
     LabelStyle -> {FontSize -> 20}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2., 2.}, {-0.1, 1.0999541810638693`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2., 2.}, {-0.1, 1.0999541810638693`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SubscriptBox[\\(A\\), \
\\(1\\)]\\)\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\)\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(+\\)], \\((3)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6640522875816994, 0.24052287581699347`, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.996078431372549, 0.3607843137254902, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(-\\)], \\((3)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6640522875816994, 0.6588235294117648, 
                    0.023529411764705882`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.996078431372549, 0.9882352941176471, \
0.03529411764705882]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(1  x\\)], \\((2)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(1  y\\)], \\((2)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(1  z\\)], \\((2)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(+\\)], \\((1)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1019607843137255, 0.0758169934640523, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15294117647058825, 0.11372549019607843, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(-\\)], \\((1)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8019711814924912`*^9, 3.8019714437137146`*^9, 3.801971482184147*^9, {
   3.801971788835229*^9, 3.801971806165318*^9}, 3.8019719065813093`*^9, {
   3.8019721021670055`*^9, 3.8019721254858756`*^9}, {3.801972240798213*^9, 
   3.8019722700122695`*^9}, {3.80197230944905*^9, 3.80197232131466*^9}, {
   3.8019724236008887`*^9, 3.801972440402108*^9}, 3.8020193916660223`*^9, {
   3.8020194255509624`*^9, 3.802019431853141*^9}, 3.802047593900301*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Effective Hamiltonian", "Section",
 CellChangeTimes->{{3.802019518095395*^9, 3.8020195217575674`*^9}}],

Cell[CellGroupData[{

Cell["Eigenstates", "Subsection",
 CellChangeTimes->{{3.8018645535187764`*^9, 3.801864554698451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Ground", "-", 
    RowBox[{
    "states", " ", "and", " ", "first", " ", "excited", " ", "states"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plusState", "[", 
     RowBox[{"a1_", ",", "a2_", ",", "a4_", ",", "a5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "a4", ",", "0", ",", "0", ",", 
      RowBox[{"-", "a1"}], ",", "0", ",", "0", ",", "a2", ",", "0", ",", "0", 
      ",", 
      RowBox[{"-", "a5"}], ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minusState", "[", 
     RowBox[{"a1_", ",", "a2_", ",", "a4_", ",", "a5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "a5", ",", "0", ",", "0", ",", "a2", ",", "0", ",", "0", ",", 
      "a1", ",", "0", ",", "0", ",", "a4", ",", "0", ",", "0"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upState", "[", 
     RowBox[{"b1_", ",", "b2_", ",", "b4_", ",", "b5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "b4", ",", "0", ",", "0", ",", "b1", ",", "0", ",", 
      "0", ",", "b2", ",", "0", ",", "0", ",", "b5", ",", "0"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"downState", "[", 
     RowBox[{"b1_", ",", "b2_", ",", "b4_", ",", "b5_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "b5"}], ",", "0", ",", "0", ",", "b2", ",", "0", ",", "0", 
      ",", 
      RowBox[{"-", "b1"}], ",", "0", ",", "0", ",", "b4", ",", "0", ",", 
      "0"}], "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "a1", "=", 
     "0.0960023006569961009317604323639708844716307460964755250591787622584529\
813089767698810571800909907200936626013310387`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "a2", "=", 
     "0.1388976829934512769899363793643009436431045855160542453041384163665907\
376155181566008226602983001450395344287920164`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "a4", "=", 
     "0.9402137436584117102803389171690795195304604179630104367516510172338664\
876161921960814106181068536878355883513006478`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a5", "=", 
     RowBox[{
     "-", "0.29578557801801107314893451198428232799867699782942812905144325395\
19923893431000063944642632227447313723561228891602`100."}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "b1", "=", 
     "0.0809031712516095451371563547034817715595304871573509109207424435287669\
9682114508866445549236451570901970918703058`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "b2", "=", 
     "0.1917008150552997468777642490225760918592058666335852191883543088451498\
31841360096334160179449731245038678965028986`100."}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b4", "=", 
     RowBox[{
     "-", "0.31172264723204881932869284495927195442219972813401190305781058160\
66006378278671108417326679997032775713005252249615`100."}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "b5", "=", 
     "0.9271108162410846058075149011383053038963114115323363041768748809065148\
838751133789071431892027360344146560344223858`100."}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plusState", "[", 
        RowBox[{"a1", ",", "a2", ",", "a4", ",", "a5"}], "]"}], ",", 
       RowBox[{"minusState", "[", 
        RowBox[{"a1", ",", "a2", ",", "a4", ",", "a5"}], "]"}], ",", 
       RowBox[{"upState", "[", 
        RowBox[{"b1", ",", "b2", ",", "b4", ",", "b5"}], "]"}], ",", 
       RowBox[{"downState", "[", 
        RowBox[{"b1", ",", "b2", ",", "b4", ",", "b5"}], "]"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.801864577598671*^9, 3.8018645966386347`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Phase Factors Conventions", "Subsection",
 CellChangeTimes->{{3.7523802817643156`*^9, 3.752380305065014*^9}, {
  3.753035444399607*^9, 3.7530354453680096`*^9}, {3.8018799086720715`*^9, 
  3.8018799103236427`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Defining", " ", "the", " ", "phase", " ", "factors", " ", 
    SubscriptBox["\[CapitalLambda]", "ij"], " ", "following", " ", 
    "conventions", " ", "by", " ", "Mukherjee", " ", "and", " ", "Curnoe"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"convention", ",", "\"\<Curnoe\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lambda", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", "0", 
            ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            StyleBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], "+", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}],
             FontWeight->"Bold"], ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Defining", " ", "the", " ", "phase", " ", "factors", " ", 
     SubscriptBox["\[CapitalLambda]", "ij"], " ", "following", " ", 
     "conventions", " ", "by", " ", "Ross", " ", "et", " ", 
     RowBox[{"al", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"convention", ",", "\"\<Ross\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lambda", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", "0", 
            ",", "1"}], "}"}], ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}], ",", 
            StyleBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], "-", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Sqrt]", "3"}], "/", "2"}], "*", "I"}]}],
             FontWeight->"Bold"], ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7521968157680054`*^9, 3.7521968702955494`*^9}, {
   3.752196911936741*^9, 3.752196961691113*^9}, {3.752197569305252*^9, 
   3.7521976347485747`*^9}, {3.7522674348245125`*^9, 3.752267455892947*^9}, {
   3.7522675260127883`*^9, 3.752267548504938*^9}, {3.7522690627244177`*^9, 
   3.752269064171279*^9}, {3.752290848122053*^9, 3.752290851053297*^9}, {
   3.7522909144915953`*^9, 3.752291017835594*^9}, 3.752291086294176*^9, 
   3.752911291469513*^9, {3.779804488515576*^9, 3.779804498186434*^9}, {
   3.78235326204873*^9, 3.782353368488678*^9}, {3.801879920371265*^9, 
   3.801879920509514*^9}, {3.801879968634967*^9, 3.801879997675079*^9}, {
   3.803091635268618*^9, 3.803091651617913*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Angular Momentum Operators", "Subsection",
 CellChangeTimes->{{3.7777395228701334`*^9, 3.777739527300748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Angular", " ", "momentum", " ", "operators"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jz", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jm", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "*", "J"}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", "J"}], "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Jm", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"m", "+", 
           RowBox[{"(", 
            RowBox[{"J", "+", "1"}], ")"}]}], ",", 
          RowBox[{"m", "+", "1", "+", 
           RowBox[{"(", 
            RowBox[{"J", "+", "1"}], ")"}]}]}], "\[RightDoubleBracket]"}], 
        "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", "*", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "-", 
           RowBox[{"m", "*", 
            RowBox[{"(", 
             RowBox[{"m", "+", "1"}], ")"}]}]}], ")"}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "J"}], ",", 
        RowBox[{"J", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jp", "=", 
     RowBox[{"Jm", "\[ConjugateTranspose]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jx", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"Jp", "+", "Jm"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jy", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "I"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"Jp", "-", "Jm"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"id", "=", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "*", "J"}], "+", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Stevens", " ", "operators"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"J", "*", 
      RowBox[{"(", 
       RowBox[{"J", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O2n2", "=", 
     RowBox[{
      RowBox[{"Jx", ".", "Jy"}], "+", 
      RowBox[{"Jy", ".", "Jx"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O2n1", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Jy", ".", "Jz"}], "+", 
        RowBox[{"Jz", ".", "Jy"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O20", "=", 
     RowBox[{
      RowBox[{"3", "*", 
       RowBox[{"Jz", ".", "Jz"}]}], "-", 
      RowBox[{"X", "*", "id"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O21", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Jx", ".", "Jz"}], "+", 
        RowBox[{"Jz", ".", "Jx"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O22", "=", 
     RowBox[{
      RowBox[{"Jx", ".", "Jx"}], "-", 
      RowBox[{"Jy", ".", "Jy"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Pseudospin", "-", 
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", "matrices"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sz", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sp", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sm", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"id", "=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Lists", " ", "of", " ", 
       SuperscriptBox["2", "4"], " ", "\[Times]", " ", 
       SuperscriptBox["2", "4"]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "16", " ", "\[Times]", " ", "16", " ", "representation", " ", "of", 
        " ", "the", " ", "pseudospin"}], "-", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "operators", " ", "for", " ", "atom", 
        " ", "sites", " ", "1"}]}]}], ",", " ", "2", ",", " ", "3", ",", " ", 
     RowBox[{
     "and", " ", "4", " ", "on", " ", "a", " ", "single", " ", 
      "tetrahedron"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1z", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"sz", ",", "id", ",", "id", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2z", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "sz", ",", "id", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3z", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "sz", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s4z", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "id", ",", "sz"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1p", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"sp", ",", "id", ",", "id", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2p", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "sp", ",", "id", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3p", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "sp", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s4p", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "id", ",", "sp"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1m", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"sm", ",", "id", ",", "id", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2m", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "sm", ",", "id", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3m", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "sm", ",", "id"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s4m", "=", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"id", ",", "id", ",", "id", ",", "sm"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"szList", "=", 
     RowBox[{"{", 
      RowBox[{"s1z", ",", "s2z", ",", "s3z", ",", "s4z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spList", "=", 
     RowBox[{"{", 
      RowBox[{"s1p", ",", "s2p", ",", "s3p", ",", "s4p"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"smList", "=", 
     RowBox[{"{", 
      RowBox[{"s1m", ",", "s2m", ",", "s3m", ",", "s4m"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"idFull", "=", 
     RowBox[{"IdentityMatrix", "[", "16", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroFull", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8018695529388666`*^9, 3.8018696906786833`*^9}, {
  3.8018697598487463`*^9, 3.8018698093486843`*^9}, {3.80186989390872*^9, 
  3.8018699124685154`*^9}, {3.8018802019395204`*^9, 3.801880247182637*^9}, {
  3.8018803245986834`*^9, 3.8018803410189033`*^9}, {3.8020208752872686`*^9, 
  3.802020916186907*^9}, {3.8020211138724685`*^9, 3.802021114912258*^9}, {
  3.802034129195738*^9, 3.802034131803507*^9}, {3.8020343768199787`*^9, 
  3.802034404483214*^9}, {3.8020363717423887`*^9, 3.8020363891393957`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Matrix Elements", "Subsection",
 CellChangeTimes->{{3.8020209480170407`*^9, 3.8020209498970833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Matrix", " ", "elements"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"matrixElements", "[", "states_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "p", ",", "m", ",", "u", ",", "d", ",", "j1", ",", "j2", ",", "j3", 
        ",", "j4", ",", "j5", ",", "j6", ",", "j7", ",", "j8", ",", "j9", ",",
         "t", ",", "matrixElementsList"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{
        "states", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"m", "=", 
        RowBox[{
        "states", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{
        "states", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{
        "states", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"j1", "=", 
        RowBox[{"p", ".", "Jz", ".", "p"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j2", "=", 
        RowBox[{"u", ".", "Jz", ".", "u"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j3", "=", 
        RowBox[{"u", ".", "Jz", ".", "p"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", 
        RowBox[{"u", ".", "Jp", ".", "m"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j4", "=", 
        RowBox[{
         RowBox[{"p", ".", "O2n2", ".", "m"}], "/", "\[ImaginaryI]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"j5", "=", 
        RowBox[{
         RowBox[{"u", ".", "O2n2", ".", "m"}], "/", "\[ImaginaryI]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"j6", "=", 
        RowBox[{
         RowBox[{"p", ".", "O2n1", ".", "m"}], "/", "\[ImaginaryI]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"j7", "=", 
        RowBox[{
         RowBox[{"u", ".", "O2n1", ".", "m"}], "/", "\[ImaginaryI]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"j8", "=", 
        RowBox[{"p", ".", "O20", ".", "p"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j9", "=", 
        RowBox[{"u", ".", "O20", ".", "p"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"matrixElementsList", "=", 
        RowBox[{"{", 
         RowBox[{
         "j1", ",", "j2", ",", "j3", ",", "j4", ",", "j5", ",", "j6", ",", 
          "j7", ",", "j8", ",", "j9", ",", "t"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "matrixElementsList"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8020210155370045`*^9, 3.802021022367215*^9}, {
  3.8020210586067553`*^9, 3.802021059447031*^9}, {3.802021145723832*^9, 
  3.802021205901333*^9}, {3.8020222972624383`*^9, 3.802022307161126*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Coupling Constants", "Subsection",
 CellChangeTimes->{{3.8020209578469563`*^9, 3.802020960946987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"couplings", "[", 
    RowBox[{
    "matrixElementsList_", ",", "\[CapitalDelta]_", ",", "\[ScriptCapitalJ]_",
      ",", "\[ScriptCapitalD]_", ",", "\[ScriptCapitalQ]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "j1", ",", "j2", ",", "j3", ",", "j4", ",", "j5", ",", "j6", ",", "j7", 
       ",", "j8", ",", "j9", ",", "t", ",", "I1", ",", "I2", ",", "I3", ",", 
       "I4", ",", "const", ",", "jzz", ",", "jpm", ",", "jpp", ",", "jzp", 
       ",", "jzpz", ",", "jppp", ",", "jppm", ",", "couplingConstants"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["j", "1"], ",", " ", 
        SubscriptBox["j", "2"], ",", " ", 
        SubscriptBox["j", "3"], ",", " ", 
        SubscriptBox["j", "4"], ",", " ", 
        SubscriptBox["j", "5"], ",", " ", 
        SubscriptBox["j", "6"], ",", " ", 
        SubscriptBox["j", "7"], ",", " ", 
        SubscriptBox["j", "8"], ",", " ", 
        SubscriptBox["j", "9"], ",", " ", "t"}], "}"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"j1", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j2", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j3", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "3", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j4", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j5", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "5", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j6", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "6", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j7", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "7", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j8", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "8", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j9", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "9", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{
       "matrixElementsList", "\[LeftDoubleBracket]", "10", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"I1", "=", 
       RowBox[{"\[ScriptCapitalJ]", "-", 
        RowBox[{"5", "*", "\[ScriptCapitalD]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"I2", "=", 
       RowBox[{"\[ScriptCapitalJ]", "-", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "*", "\[ScriptCapitalD]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"I3", "=", 
       RowBox[{"\[ScriptCapitalJ]", "+", 
        RowBox[{
         RowBox[{"7", "/", "4"}], "*", "\[ScriptCapitalD]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"I4", "=", 
       RowBox[{"\[ScriptCapitalJ]", "-", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "*", "\[ScriptCapitalD]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"const", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jzz", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpm", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpp", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jzp", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jzpz", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jppp", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"jppm", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Couplings", " ", "from", " ", 
        SubscriptBox["PH", "ex"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "3"}], "*", "I1", "*", 
        RowBox[{"j1", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Couplings", " ", "from", " ", 
        SubscriptBox["PH", "ex"], 
        SubscriptBox["QH", "ex"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"const", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", "*", 
           RowBox[{"I1", "^", "2"}], "*", 
           RowBox[{"j1", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"j3", "^", "2"}], "/", "3"}]}], "+", 
          RowBox[{"8", "*", 
           RowBox[{"I2", "^", "2"}], "*", 
           RowBox[{"j1", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "3"}]}], "+", 
          RowBox[{
           RowBox[{"I1", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"j3", "^", "4"}], "/", "3"}]}], "+", 
          RowBox[{"4", "*", 
           RowBox[{"I2", "^", "2"}], "*", 
           RowBox[{"j3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "3"}]}], "+", 
          RowBox[{
           RowBox[{"I3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "4"}], "/", "6"}]}], "+", 
          RowBox[{
           RowBox[{"I4", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "4"}], "/", "24"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", "*", 
           RowBox[{"I1", "^", "2"}], "*", 
           RowBox[{"j1", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"j3", "^", "2"}], "/", "9"}]}], "-", 
          RowBox[{"4", "*", 
           RowBox[{"I2", "^", "2"}], "*", 
           RowBox[{"j1", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "9"}]}], "+", 
          RowBox[{
           RowBox[{"I3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "4"}], "/", "36"}]}], "-", 
          RowBox[{
           RowBox[{"I4", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "4"}], "/", "144"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"I1", "*", "I4", "*", 
           RowBox[{"j3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "18"}]}], "+", 
          RowBox[{"2", "*", 
           RowBox[{"I2", "^", "2"}], "*", 
           RowBox[{"j3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "9"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "I1"}], "*", "I3", "*", 
           RowBox[{"j3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "9"}]}], "+", 
          RowBox[{"2", "*", 
           RowBox[{"I2", "^", "2"}], "*", 
           RowBox[{"j3", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"t", "^", "2"}], "/", "9"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jzpz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"\[Sqrt]", "2"}], "*", "I1", "*", "I2", "*", 
          RowBox[{"j1", "^", "2"}], "*", "j3", "*", 
          RowBox[{"t", "/", "9"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Couplings", " ", "from", " ", 
        SubscriptBox["PH", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"const", "+=", 
       RowBox[{
        RowBox[{"51", "/", "4"}], "*", "\[ScriptCapitalQ]", "*", 
        RowBox[{"j8", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"1", "/", "8"}], "*", "\[ScriptCapitalQ]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j4", "^", "2"}], "-", 
          RowBox[{"104", "*", 
           RowBox[{"\[Sqrt]", "2"}], "*", "j4", "*", "j6"}], "+", 
          RowBox[{"80", "*", 
           RowBox[{"j6", "^", "2"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"1", "/", "8"}], "*", "\[ScriptCapitalQ]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"49", "*", 
           RowBox[{"j4", "^", "2"}]}], "-", 
          RowBox[{"8", "*", 
           RowBox[{"\[Sqrt]", "2"}], "*", "j4", "*", "j6"}], "+", 
          RowBox[{"368", "*", 
           RowBox[{"j6", "^", "2"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Couplings", " ", "from", " ", 
        SubscriptBox["PH", "ex"], 
        SubscriptBox["QH", "eqq"], "P", " ", "and", " ", "its", " ", 
        "Hermitian", " ", "conjugate"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "1"], 
        SubscriptBox["Q", "o"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "17"}], "/", "2"}], ")"}], "*", "I1", "*", "j1", "*", 
        "j3", "*", "j8", "*", "j9"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I1", "*", "j1", "*", "j3", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j4", "*", 
           RowBox[{"j5", "/", "6"}]}], "-", 
          RowBox[{"26", "*", 
           SqrtBox["2"], "*", "j5", "*", 
           RowBox[{"j6", "/", "3"}]}], "-", 
          RowBox[{"26", "*", 
           SqrtBox["2"], "*", "j4", "*", 
           RowBox[{"j7", "/", "3"}]}], "+", 
          RowBox[{"40", "*", "j6", "*", 
           RowBox[{"j7", "/", "3"}]}]}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I1", "*", "j1", "*", "j3", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "49"}], "*", "j4", "*", 
           RowBox[{"j5", "/", "6"}]}], "+", 
          RowBox[{"2", "*", 
           SqrtBox["2"], "*", "j5", "*", 
           RowBox[{"j6", "/", "3"}]}], "+", 
          RowBox[{"2", "*", 
           SqrtBox["2"], "*", "j4", "*", 
           RowBox[{"j7", "/", "3"}]}], "-", 
          RowBox[{"184", "*", "j6", "*", 
           RowBox[{"j7", "/", "3"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jzpz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I1", "*", "j1", "*", "j3", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j4", "/", "4"}], "+", 
          RowBox[{
           SqrtBox["2"], "*", "j6"}]}], ")"}], "*", "j9"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "2"], 
        SubscriptBox["Q", "o"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I2", "*", "j1", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], "*", 
           RowBox[{"j4", "/", "2"}]}], "+", 
          RowBox[{"4", "*", "j6"}]}], ")"}], "*", "j9", "*", "t"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I2", "*", "j1", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SqrtBox["2"]}], "*", 
           RowBox[{"j4", "/", "2"}]}], "-", 
          RowBox[{"4", "*", "j6"}]}], ")"}], "*", "j9", "*", "t"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jzpz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "\[CapitalDelta]"}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I2", "*", "j1", "*", "t", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"47", "*", 
           SqrtBox["2"], "*", "j4", "*", 
           RowBox[{"j5", "/", "24"}]}], "+", 
          RowBox[{"25", "*", "j5", "*", 
           RowBox[{"j6", "/", "3"}]}], "+", 
          RowBox[{"25", "*", "j4", "*", 
           RowBox[{"j7", "/", "3"}]}], "+", 
          RowBox[{"26", "*", 
           SqrtBox["2"], "*", "j6", "*", 
           RowBox[{"j7", "/", "3"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "3"], 
        SubscriptBox["Q", "o"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "No", " ", "contributions", " ", "to", " ", "coupling", " ", 
        "constants"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "4"], 
        SubscriptBox["Q", "o"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "No", " ", "contributions", " ", "to", " ", "coupling", " ", 
        "constants"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "1"], 
        SubscriptBox["Q", "t"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "17"}], "/", "12"}], ")"}], "*", "I1", "*", 
        RowBox[{"j3", "^", "2"}], "*", 
        RowBox[{"j9", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I1", "*", 
        RowBox[{"j3", "^", "2"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"j5", "^", "2"}], "-", 
           RowBox[{"104", "*", 
            SqrtBox["2"], "*", "j5", "*", "j7"}], "+", 
           RowBox[{"80", "*", 
            RowBox[{"j7", "^", "2"}]}]}], ")"}], "/", "12"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I1", "*", 
        RowBox[{"j3", "^", "2"}], "*", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "49"}], "*", 
            RowBox[{"j5", "^", "2"}]}], "+", 
           RowBox[{"8", " ", 
            SqrtBox["2"], "*", "j5", "*", "j7"}], "-", 
           RowBox[{"368", "*", 
            RowBox[{"j7", "^", "2"}]}]}], ")"}], "/", "12"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "2"], 
        SubscriptBox["Q", "t"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I2", "*", "j3", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SqrtBox["2"]}], "*", "j5"}], "-", 
          RowBox[{"8", "*", "j7"}]}], ")"}], "*", "j9", "*", 
        RowBox[{"t", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I2", "*", "j3", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], "*", "j5"}], "+", 
          RowBox[{"8", "*", "j7"}]}], ")"}], "*", "j9", "*", 
        RowBox[{"t", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I2", "*", "j3", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SqrtBox["2"]}], "*", "j5"}], "-", 
          RowBox[{"8", "*", "j7"}]}], ")"}], "*", "j9", "*", 
        RowBox[{"t", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "3"], 
        SubscriptBox["Q", "t"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"const", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I3", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"49", "*", 
            RowBox[{"j5", "^", "2"}]}], "-", 
           RowBox[{"8", "*", 
            SqrtBox["2"], "*", "j5", "*", "j7"}], "+", 
           RowBox[{"368", "*", 
            RowBox[{"j7", "^", "2"}]}]}], ")"}], "/", "4"}], "*", 
        RowBox[{"t", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I3", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"49", "*", 
            RowBox[{"j5", "^", "2"}]}], "-", 
           RowBox[{"8", "*", 
            SqrtBox["2"], "*", "j5", "*", "j7"}], "+", 
           RowBox[{"368", "*", 
            RowBox[{"j7", "^", "2"}]}]}], ")"}], "/", "24"}], "*", 
        RowBox[{"t", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", 
        RowBox[{"17", "/", "12"}], "*", "I3", "*", 
        RowBox[{"j9", "^", "2"}], "*", 
        RowBox[{"t", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PX", "4"], 
        SubscriptBox["Q", "t"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"const", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I4", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"j5", "^", "2"}], "-", 
           RowBox[{"104", "*", 
            SqrtBox["2"], "*", "j5", "*", "j7"}], "+", 
           RowBox[{"80", "*", 
            RowBox[{"j7", "^", "2"}]}]}], ")"}], "/", "8"}], "*", 
        RowBox[{"t", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", "I4", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"j5", "^", "2"}]}], "+", 
           RowBox[{"104", "*", 
            SqrtBox["2"], "*", "j5", "*", "j7"}], "-", 
           RowBox[{"80", "*", 
            RowBox[{"j7", "^", "2"}]}]}], ")"}], "/", "48"}], "*", 
        RowBox[{"t", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[CapitalDelta]"}], ")"}]}], ")"}], "*", 
        "\[ScriptCapitalQ]", "*", 
        RowBox[{"(", 
         RowBox[{"17", "/", "24"}], ")"}], "*", "I4", "*", 
        RowBox[{"j9", "^", "2"}], "*", 
        RowBox[{"t", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PH", "EQQ"], 
        SubscriptBox["Q", "o"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"const", "+=", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"16", " ", "\[CapitalDelta]"}]]}], "3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1201", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j5", "2"]}], "-", 
          RowBox[{"248", " ", 
           SqrtBox["2"], " ", "j4", " ", 
           SuperscriptBox["j5", "2"], " ", "j6"}], "+", 
          RowBox[{"2720", " ", 
           SuperscriptBox["j5", "2"], " ", 
           SuperscriptBox["j6", "2"]}], "-", 
          RowBox[{"248", " ", 
           SqrtBox["2"], " ", 
           SuperscriptBox["j4", "2"], " ", "j5", " ", "j7"}], "+", 
          RowBox[{"23552", " ", "j4", " ", "j5", " ", "j6", " ", "j7"}], "-", 
          RowBox[{"5632", " ", 
           SqrtBox["2"], " ", "j5", " ", 
           SuperscriptBox["j6", "2"], " ", "j7"}], "+", 
          RowBox[{"2720", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j7", "2"]}], "-", 
          RowBox[{"5632", " ", 
           SqrtBox["2"], " ", "j4", " ", "j6", " ", 
           SuperscriptBox["j7", "2"]}], "+", 
          RowBox[{"70912", " ", 
           SuperscriptBox["j6", "2"], " ", 
           SuperscriptBox["j7", "2"]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j9", "2"]}], "+", 
          RowBox[{"72", " ", 
           SqrtBox["2"], " ", "j4", " ", "j6", " ", 
           SuperscriptBox["j9", "2"]}], "+", 
          RowBox[{"288", " ", 
           SuperscriptBox["j6", "2"], " ", 
           SuperscriptBox["j9", "2"]}], "+", 
          RowBox[{"867", " ", 
           SuperscriptBox["j8", "2"], " ", 
           SuperscriptBox["j9", "2"]}]}], ")"}], " ", 
        SuperscriptBox["\[ScriptCapitalQ]", "2"]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{"-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", "\[CapitalDelta]"}]], "3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"25", " ", 
            SuperscriptBox["j4", "2"], " ", 
            SuperscriptBox["j5", "2"]}], "-", 
           RowBox[{"3", " ", 
            SqrtBox["2"], " ", "j4", " ", 
            SuperscriptBox["j5", "2"], " ", "j6"}], "-", 
           RowBox[{"56", " ", 
            SuperscriptBox["j5", "2"], " ", 
            SuperscriptBox["j6", "2"]}], "-", 
           RowBox[{"3", " ", 
            SqrtBox["2"], " ", 
            SuperscriptBox["j4", "2"], " ", "j5", " ", "j7"}], "+", 
           RowBox[{"262", " ", "j4", " ", "j5", " ", "j6", " ", "j7"}], "+", 
           RowBox[{"56", " ", 
            SqrtBox["2"], " ", "j5", " ", 
            SuperscriptBox["j6", "2"], " ", "j7"}], "-", 
           RowBox[{"56", " ", 
            SuperscriptBox["j4", "2"], " ", 
            SuperscriptBox["j7", "2"]}], "+", 
           RowBox[{"56", " ", 
            SqrtBox["2"], " ", "j4", " ", "j6", " ", 
            SuperscriptBox["j7", "2"]}], "+", 
           RowBox[{"1344", " ", 
            SuperscriptBox["j6", "2"], " ", 
            SuperscriptBox["j7", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[ScriptCapitalQ]", "2"]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{
        RowBox[{"+", 
         FractionBox["1", 
          RowBox[{"64", " ", "\[CapitalDelta]"}]]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2399", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j5", "2"]}], "-", 
          RowBox[{"184", " ", 
           SqrtBox["2"], " ", "j4", " ", 
           SuperscriptBox["j5", "2"], " ", "j6"}], "-", 
          RowBox[{"10784", " ", 
           SuperscriptBox["j5", "2"], " ", 
           SuperscriptBox["j6", "2"]}], "-", 
          RowBox[{"184", " ", 
           SqrtBox["2"], " ", 
           SuperscriptBox["j4", "2"], " ", "j5", " ", "j7"}], "+", 
          RowBox[{"14176", " ", "j4", " ", "j5", " ", "j6", " ", "j7"}], "+", 
          RowBox[{"13696", " ", 
           SqrtBox["2"], " ", "j5", " ", 
           SuperscriptBox["j6", "2"], " ", "j7"}], "-", 
          RowBox[{"10784", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j7", "2"]}], "+", 
          RowBox[{"13696", " ", 
           SqrtBox["2"], " ", "j4", " ", "j6", " ", 
           SuperscriptBox["j7", "2"]}], "+", 
          RowBox[{"122624", " ", 
           SuperscriptBox["j6", "2"], " ", 
           SuperscriptBox["j7", "2"]}], "-", 
          RowBox[{"204", " ", "j4", " ", "j5", " ", "j8", " ", "j9"}], "+", 
          RowBox[{"10608", " ", 
           SqrtBox["2"], " ", "j5", " ", "j6", " ", "j8", " ", "j9"}], "+", 
          RowBox[{"10608", " ", 
           SqrtBox["2"], " ", "j4", " ", "j7", " ", "j8", " ", "j9"}], "-", 
          RowBox[{"16320", " ", "j6", " ", "j7", " ", "j8", " ", "j9"}], "+", 
          RowBox[{"18", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j9", "2"]}], "+", 
          RowBox[{"144", " ", 
           SqrtBox["2"], " ", "j4", " ", "j6", " ", 
           SuperscriptBox["j9", "2"]}], "+", 
          RowBox[{"576", " ", 
           SuperscriptBox["j6", "2"], " ", 
           SuperscriptBox["j9", "2"]}]}], ")"}], " ", 
        SuperscriptBox["\[ScriptCapitalQ]", "2"]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"32", " ", "\[CapitalDelta]"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"49", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j5", "2"]}], "-", 
          RowBox[{"2552", " ", 
           SqrtBox["2"], " ", "j4", " ", 
           SuperscriptBox["j5", "2"], " ", "j6"}], "+", 
          RowBox[{"416", " ", 
           SuperscriptBox["j5", "2"], " ", 
           SuperscriptBox["j6", "2"]}], "-", 
          RowBox[{"2552", " ", 
           SqrtBox["2"], " ", 
           SuperscriptBox["j4", "2"], " ", "j5", " ", "j7"}], "+", 
          RowBox[{"5120", " ", "j4", " ", "j5", " ", "j6", " ", "j7"}], "-", 
          RowBox[{"19456", " ", 
           SqrtBox["2"], " ", "j5", " ", 
           SuperscriptBox["j6", "2"], " ", "j7"}], "+", 
          RowBox[{"416", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j7", "2"]}], "-", 
          RowBox[{"19456", " ", 
           SqrtBox["2"], " ", "j4", " ", "j6", " ", 
           SuperscriptBox["j7", "2"]}], "+", 
          RowBox[{"29440", " ", 
           SuperscriptBox["j6", "2"], " ", 
           SuperscriptBox["j7", "2"]}], "-", 
          RowBox[{"4998", " ", "j4", " ", "j5", " ", "j8", " ", "j9"}], "+", 
          RowBox[{"408", " ", 
           SqrtBox["2"], " ", "j5", " ", "j6", " ", "j8", " ", "j9"}], "+", 
          RowBox[{"408", " ", 
           SqrtBox["2"], " ", "j4", " ", "j7", " ", "j8", " ", "j9"}], "-", 
          RowBox[{"37536", " ", "j6", " ", "j7", " ", "j8", " ", "j9"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["j4", "2"], " ", 
           SuperscriptBox["j9", "2"]}], "-", 
          RowBox[{"144", " ", 
           SqrtBox["2"], " ", "j4", " ", "j6", " ", 
           SuperscriptBox["j9", "2"]}], "-", 
          RowBox[{"576", " ", 
           SuperscriptBox["j6", "2"], " ", 
           SuperscriptBox["j9", "2"]}]}], ")"}], " ", 
        SuperscriptBox["\[ScriptCapitalQ]", "2"]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jppp", "+=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"9", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"49", " ", 
             SuperscriptBox["j4", "2"], " ", "j5"}], "+", 
            RowBox[{"192", " ", 
             SqrtBox["2"], " ", "j4", " ", "j5", " ", "j6"}], "-", 
            RowBox[{"32", " ", "j5", " ", 
             SuperscriptBox["j6", "2"]}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["2"], " ", 
             SuperscriptBox["j4", "2"], " ", "j7"}], "+", 
            RowBox[{"336", " ", "j4", " ", "j6", " ", "j7"}], "+", 
            RowBox[{"1472", " ", 
             SqrtBox["2"], " ", 
             SuperscriptBox["j6", "2"], " ", "j7"}]}], ")"}], " ", "j9", " ", 
          SuperscriptBox["\[ScriptCapitalQ]", "2"]}], 
         RowBox[{"32", " ", "\[CapitalDelta]"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jppm", "+=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"9", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["j4", "2"], " ", "j5"}], "+", 
            RowBox[{"5", " ", 
             SqrtBox["2"], " ", "j4", " ", "j5", " ", "j6"}], "+", 
            RowBox[{"8", " ", "j5", " ", 
             SuperscriptBox["j6", "2"]}], "+", 
            RowBox[{
             SqrtBox["2"], " ", 
             SuperscriptBox["j4", "2"], " ", "j7"}], "+", 
            RowBox[{"14", " ", "j4", " ", "j6", " ", "j7"}], "+", 
            RowBox[{"24", " ", 
             SqrtBox["2"], " ", 
             SuperscriptBox["j6", "2"], " ", "j7"}]}], ")"}], " ", "j9", " ", 
          SuperscriptBox["\[ScriptCapitalQ]", "2"]}], 
         RowBox[{"2", " ", "\[CapitalDelta]"}]]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        SubscriptBox["PH", "EQQ"], 
        SubscriptBox["Q", "t"], 
        SubscriptBox["H", "EQQ"], "P"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"const", "+=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1201", " ", 
             SuperscriptBox["j5", "4"]}], "-", 
            RowBox[{"496", " ", 
             SqrtBox["2"], " ", 
             SuperscriptBox["j5", "3"], " ", "j7"}], "+", 
            RowBox[{"28992", " ", 
             SuperscriptBox["j5", "2"], " ", 
             SuperscriptBox["j7", "2"]}], "-", 
            RowBox[{"11264", " ", 
             SqrtBox["2"], " ", "j5", " ", 
             SuperscriptBox["j7", "3"]}], "+", 
            RowBox[{"70912", " ", 
             SuperscriptBox["j7", "4"]}], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox["j5", "2"], " ", 
             SuperscriptBox["j9", "2"]}], "+", 
            RowBox[{"144", " ", 
             SqrtBox["2"], " ", "j5", " ", "j7", " ", 
             SuperscriptBox["j9", "2"]}], "+", 
            RowBox[{"576", " ", 
             SuperscriptBox["j7", "2"], " ", 
             SuperscriptBox["j9", "2"]}], "+", 
            RowBox[{"289", " ", 
             SuperscriptBox["j9", "4"]}]}], ")"}], " ", 
          SuperscriptBox["\[ScriptCapitalQ]", "2"]}], 
         RowBox[{"64", " ", "\[CapitalDelta]"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jzz", "+=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"25", " ", 
             SuperscriptBox["j5", "4"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["2"], " ", 
             SuperscriptBox["j5", "3"], " ", "j7"}], "+", 
            RowBox[{"150", " ", 
             SuperscriptBox["j5", "2"], " ", 
             SuperscriptBox["j7", "2"]}], "+", 
            RowBox[{"112", " ", 
             SqrtBox["2"], " ", "j5", " ", 
             SuperscriptBox["j7", "3"]}], "+", 
            RowBox[{"1344", " ", 
             SuperscriptBox["j7", "4"]}]}], ")"}], " ", 
          SuperscriptBox["\[ScriptCapitalQ]", "2"]}], 
         RowBox[{"8", " ", "\[CapitalDelta]"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpm", "+=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"13", " ", 
             SuperscriptBox["j5", "2"]}], "-", 
            RowBox[{"848", " ", 
             SqrtBox["2"], " ", "j5", " ", "j7"}], "+", 
            RowBox[{"824", " ", 
             SuperscriptBox["j7", "2"]}]}], ")"}], " ", 
          SuperscriptBox["j9", "2"], " ", 
          SuperscriptBox["\[ScriptCapitalQ]", "2"]}], 
         RowBox[{"32", " ", "\[CapitalDelta]"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jpp", "+=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"421", " ", 
             SuperscriptBox["j5", "2"]}], "-", 
            RowBox[{"32", " ", 
             SqrtBox["2"], " ", "j5", " ", "j7"}], "+", 
            RowBox[{"3272", " ", 
             SuperscriptBox["j7", "2"]}]}], ")"}], " ", 
          SuperscriptBox["j9", "2"], " ", 
          SuperscriptBox["\[ScriptCapitalQ]", "2"]}], 
         RowBox[{"32", " ", "\[CapitalDelta]"}]]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"{", 
        RowBox[{"C", ",", " ", 
         SubscriptBox["J", "zz"], ",", " ", 
         SubscriptBox["J", 
          RowBox[{"\[PlusMinus]", "\[MinusPlus]"}]], ",", " ", 
         SubscriptBox["J", 
          RowBox[{"\[PlusMinus]", "\[PlusMinus]"}]], ",", " ", 
         SubscriptBox["J", 
          RowBox[{"z", "\[PlusMinus]"}]], ",", " ", 
         SubscriptBox["J", 
          RowBox[{"z", "\[PlusMinus]", "z"}]], ",", " ", 
         SubscriptBox["J", 
          RowBox[{"\[PlusMinus]", 
           RowBox[{"\[PlusMinus]", "\[PlusMinus]"}]}]], ",", " ", 
         SubscriptBox["J", 
          RowBox[{"\[PlusMinus]", 
           RowBox[{"\[PlusMinus]", "\[MinusPlus]"}]}]]}], "}"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"couplingConstants", "=", 
       RowBox[{"{", 
        RowBox[{
        "const", ",", "jzz", ",", "jpm", ",", "jpp", ",", "jzp", ",", "jzpz", 
         ",", "jppp", ",", "jppm"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "couplingConstants"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8020247328690877`*^9, 3.802024814749071*^9}, {
   3.802032329539916*^9, 3.802032343385488*^9}, {3.8020324006486044`*^9, 
   3.802032505743438*^9}, {3.802032599957091*^9, 3.802032600405298*^9}, {
   3.8020327462945013`*^9, 3.802032781489752*^9}, {3.8020328116817245`*^9, 
   3.802032902698243*^9}, {3.8020329343004923`*^9, 3.8020330206049414`*^9}, {
   3.802033101471464*^9, 3.8020331107047415`*^9}, {3.802033155653231*^9, 
   3.802033255598815*^9}, {3.802033313817187*^9, 3.8020333170812902`*^9}, {
   3.802482915181333*^9, 3.802482927418913*^9}, {3.8024845789780893`*^9, 
   3.8024847433765135`*^9}, {3.8024847771547165`*^9, 3.80248479988513*^9}, {
   3.802485373866664*^9, 3.80248537909202*^9}, {3.8024869774868174`*^9, 
   3.8024869827430973`*^9}, {3.8024870269864893`*^9, 
   3.8024870805975847`*^9}, {3.802572843025565*^9, 3.8025728946678534`*^9}, {
   3.8025729649328566`*^9, 3.80257318058403*^9}, {3.8025732123899*^9, 
   3.8025732436721263`*^9}, {3.802573273837581*^9, 3.8025733204919257`*^9}, {
   3.802573367950598*^9, 3.802573370389303*^9}, {3.8025737862811785`*^9, 
   3.8025737892294865`*^9}, {3.8025738336742954`*^9, 
   3.8025738571636147`*^9}, {3.80257394559411*^9, 3.8025739801350317`*^9}, {
   3.802574278558957*^9, 3.8025743301936035`*^9}, {3.8025744717276216`*^9, 
   3.802574488443243*^9}, {3.802574534259041*^9, 3.8025746282784204`*^9}, {
   3.8025748468310957`*^9, 3.802574860673832*^9}, {3.8025749201322775`*^9, 
   3.80257492192109*^9}, {3.8025751774196424`*^9, 3.802575211799426*^9}, {
   3.802576135048295*^9, 3.80257615207617*^9}, {3.8025763844737844`*^9, 
   3.8025763906736345`*^9}, {3.8025766668489404`*^9, 3.802576887509353*^9}, 
   3.8025771511961937`*^9, {3.8025772582262726`*^9, 3.8025773587761126`*^9}, {
   3.8025773928556786`*^9, 3.802577399155764*^9}, {3.802577440976057*^9, 
   3.8025774418260565`*^9}, {3.802577620615423*^9, 3.802577623365613*^9}, {
   3.80262125843322*^9, 3.802621326393133*^9}, {3.8026215285930157`*^9, 
   3.8026215663414364`*^9}, {3.8026219320871735`*^9, 
   3.8026219899785147`*^9}, {3.802622094495389*^9, 3.8026221460261836`*^9}, {
   3.802622200765014*^9, 3.8026222040433254`*^9}, {3.8026222375788517`*^9, 
   3.8026222839537554`*^9}, {3.8026224230990973`*^9, 3.802622551667222*^9}, {
   3.80273819384356*^9, 3.80273819539147*^9}, {3.8027385199819403`*^9, 
   3.802738521906665*^9}, {3.8027386326921177`*^9, 3.802738634446252*^9}, {
   3.8027390712888403`*^9, 3.8027390724586954`*^9}, 3.8027392049449415`*^9, {
   3.8027405086920896`*^9, 3.802740652820223*^9}, 3.8027411526282597`*^9, {
   3.802741537496733*^9, 3.8027415959188704`*^9}, {3.8027416308811293`*^9, 
   3.8027416433605146`*^9}, {3.8029952634587603`*^9, 3.802995418038642*^9}, {
   3.8029960162250886`*^9, 3.8029960219576607`*^9}, {3.8029985153970056`*^9, 
   3.8029985904369345`*^9}, {3.802998811350073*^9, 3.802998811434663*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Projected Hamiltonian", "Subsection",
 CellChangeTimes->{{3.7786386642715597`*^9, 3.7786386669650683`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Defining", " ", "the", " ", "different", " ", "possible", " ", 
   "components", " ", "of", " ", "the", " ", "projected", " ", "Hamiltonian", 
   " ", "along", " ", "with", " ", "their", " ", "coupling", " ", 
   "strengths"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.752380951143705*^9, 3.752380985986271*^9}, {
  3.7530279749137325`*^9, 3.7530279930087137`*^9}, {3.7542371707603607`*^9, 
  3.7542372449258275`*^9}, {3.754237312252535*^9, 3.7542373146819315`*^9}, {
  3.8020380163250732`*^9, 3.802038142186241*^9}, {3.802038197851159*^9, 
  3.802038200057485*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "16", " ", "\[Times]", " ", "16", " ", "representation", " ", "of", " ", 
     "the", " ", "Hamiltonian", " ", "in", " ", "units", " ", "of", " ", 
     "meV", " ", "given", " ", "values", " ", "for", " ", "\[CapitalDelta]"}],
     ",", "\[NonBreakingSpace]", "\[ScriptCapitalJ]", ",", " ", 
    "\[ScriptCapitalD]", ",", "\[NonBreakingSpace]", 
    RowBox[{
    "and", " ", "\[ScriptCapitalQ]", " ", "in", " ", "units", " ", "of", " ", 
     "Kelvin", " ", 
     RowBox[{"(", "K", ")"}]}], ",", " ", 
    RowBox[{
    "as", " ", "well", " ", "as", " ", "the", " ", "four", " ", "states"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"projectedHamiltonian", "[", 
     RowBox[{
      RowBox[{"\[CapitalDelta]_Real", "|", "\[CapitalDelta]_Integer"}], ",", 
      RowBox[{"\[ScriptCapitalJ]_Real", "|", "\[ScriptCapitalJ]_Integer"}], 
      ",", 
      RowBox[{"\[ScriptCapitalD]_Real", "|", "\[ScriptCapitalD]_Integer"}], 
      ",", 
      RowBox[{"\[ScriptCapitalQ]_Real", "|", "\[ScriptCapitalQ]_Integer"}], 
      ",", "states_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "matrixElementsList", ",", "couplingConstants", ",", "const", ",", 
        "jzz", ",", "jpm", ",", "jpp", ",", "jzp", ",", "jzpz", ",", "jppp", 
        ",", "jppm", ",", "Hzz", ",", "Hpm", ",", "Hpp", ",", "Hzp", ",", 
        "Hzpz", ",", "Hppp", ",", "Hppm", ",", "totalH"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"matrixElementsList", "=", 
        RowBox[{"matrixElements", "[", "states", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"couplingConstants", "=", 
        RowBox[{"couplings", "[", 
         RowBox[{
         "matrixElementsList", ",", "\[CapitalDelta]", ",", 
          "\[ScriptCapitalJ]", ",", "\[ScriptCapitalD]", ",", 
          "\[ScriptCapitalQ]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"{", 
         RowBox[{"C", ",", " ", 
          SubscriptBox["J", "zz"], ",", " ", 
          SubscriptBox["J", 
           RowBox[{"\[PlusMinus]", "\[MinusPlus]"}]], ",", " ", 
          SubscriptBox["J", 
           RowBox[{"\[PlusMinus]", "\[PlusMinus]"}]], ",", " ", 
          SubscriptBox["J", 
           RowBox[{"z", "\[PlusMinus]"}]], ",", " ", 
          SubscriptBox["J", 
           RowBox[{"z", "\[PlusMinus]", "z"}]], ",", " ", 
          SubscriptBox["J", 
           RowBox[{"\[PlusMinus]", 
            RowBox[{"\[PlusMinus]", "\[PlusMinus]"}]}]], ",", " ", 
          SubscriptBox["J", 
           RowBox[{"\[PlusMinus]", 
            RowBox[{"\[PlusMinus]", "\[MinusPlus]"}]}]]}], "}"}], " ", "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"const", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jzz", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jpm", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jpp", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "4", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jzp", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "5", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jzpz", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "6", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jppp", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "7", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jppm", "=", 
        RowBox[{
        "couplingConstants", "\[LeftDoubleBracket]", "8", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Hzpz", "=", "zeroFull"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         SubscriptBox["\[Sum]", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightAngleBracket]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Sigma]", "iz"], 
           SubscriptBox["\[Sigma]", "jz"]}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Hzz", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "szList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           ".", 
           RowBox[{
           "szList", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}],
           ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "+", "1"}], ",", "4"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         SubscriptBox["\[Sum]", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightAngleBracket]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", "+"}]], 
            SubscriptBox["\[Sigma]", 
             RowBox[{"j", "-"}]]}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", "-"}]], 
            SubscriptBox["\[Sigma]", 
             RowBox[{"j", "+"}]]}]}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Hpm", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "spList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            ".", 
            RowBox[{
            "smList", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}], "+", 
           RowBox[{
            RowBox[{
            "smList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            ".", 
            RowBox[{
            "spList", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "+", "1"}], ",", "4"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         SubscriptBox["\[Sum]", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightAngleBracket]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Gamma]", "ij"], 
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", "+"}]], 
            SubscriptBox["\[Sigma]", 
             RowBox[{"j", "+"}]]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Gamma]", "ij"], "\[Conjugate]"}], 
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", "-"}]], 
            SubscriptBox["\[Sigma]", 
             RowBox[{"j", "-"}]]}]}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Hpp", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"lambda", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
             "\[Conjugate]"}], "*", 
            RowBox[{
             RowBox[{
             "spList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", 
             RowBox[{
             "spList", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}], "+", 
           RowBox[{
            RowBox[{"lambda", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "*", 
            RowBox[{
             RowBox[{
             "smList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", 
             RowBox[{
             "smList", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "+", "1"}], ",", "4"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         SubscriptBox["\[Sum]", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{"i", ",", "j", ",", "k"}], "\[RightAngleBracket]"}]], " ", 
         RowBox[{"[", 
          RowBox[{
           SubscriptBox["\[Sigma]", "iz"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Gamma]", "ij"], "\[Conjugate]"}], "+", 
                RowBox[{
                 SubscriptBox["\[Gamma]", "jk"], "\[Conjugate]"}]}], ")"}], 
              SubscriptBox["\[Sigma]", 
               RowBox[{"j", "+"}]]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[Gamma]", "ij"], "+", 
                SubscriptBox["\[Gamma]", "jk"]}], ")"}], 
              SubscriptBox["\[Sigma]", 
               RowBox[{"j", "-"}]]}]}], ")"}], 
           SubscriptBox["\[Sigma]", "kz"]}], "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Hzpz", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"j", "\[NotEqual]", "i"}], " ", "&&", " ", 
             RowBox[{"j", "\[NotEqual]", "k"}]}], ",", 
            RowBox[{
             RowBox[{
             "szList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
              ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"lambda", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "+", 
                  RowBox[{"lambda", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}]}], 
                 ")"}], "*", 
                RowBox[{
                "spList", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lambda", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
                   "\[Conjugate]"}], "+", 
                  RowBox[{
                   RowBox[{"lambda", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}], 
                   "\[Conjugate]"}]}], ")"}], "*", 
                RowBox[{
                "smList", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}]}], ")"}], ".", 
             RowBox[{
             "szList", "\[LeftDoubleBracket]", "k", 
              "\[RightDoubleBracket]"}]}], ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1"}], ",", "4"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Total", " ", "Hamiltonian", " ", "given", " ", "values", " ", "for", 
         " ", "coupling", " ", "constants"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Note", " ", "the", " ", "minus", " ", "sign", " ", "in", " ", 
         "front", " ", "of", " ", "Hpm", " ", "follows", " ", "convention"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"totalH", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"jzz", "*", "Hzz"}], "+", 
          RowBox[{"jpm", "*", "Hpm"}], "+", 
          RowBox[{"jpp", "*", "Hpp"}], "+", 
          RowBox[{"jzpz", "*", "Hzpz"}], "+", 
          RowBox[{"const", "*", "idFull"}]}], "//", "Chop"}]}], ";", 
       "\[IndentingNewLine]", "totalH"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.752380991290395*^9, 3.752381116418169*^9}, {
   3.752381188075718*^9, 3.752381191856042*^9}, {3.7524251428009415`*^9, 
   3.752425177470664*^9}, {3.7524252313207183`*^9, 3.7524252314729986`*^9}, {
   3.7525254550977077`*^9, 3.752525455597522*^9}, {3.7530279997556934`*^9, 
   3.7530281226508756`*^9}, {3.7530284014535475`*^9, 
   3.7530284852767887`*^9}, {3.753031071284375*^9, 3.7530311062080717`*^9}, {
   3.753031170365345*^9, 3.753031594754537*^9}, {3.753031630739008*^9, 
   3.7530317391553764`*^9}, {3.7530317978121443`*^9, 
   3.7530319937939167`*^9}, {3.7530320287957845`*^9, 
   3.7530321397698526`*^9}, {3.753032174943837*^9, 3.753032274039163*^9}, {
   3.7530323720379477`*^9, 3.7530324058245025`*^9}, {3.7530326035148325`*^9, 
   3.753032606687396*^9}, {3.753033069245668*^9, 3.753033091273777*^9}, {
   3.753033844811151*^9, 3.753033846777856*^9}, 3.753033995440806*^9, {
   3.7530342210899315`*^9, 3.7530342219644313`*^9}, {3.753035214337163*^9, 
   3.753035277768578*^9}, {3.753035328523506*^9, 3.7530353710441046`*^9}, {
   3.7530354138890066`*^9, 3.7530354298861575`*^9}, {3.7530354907743616`*^9, 
   3.7530355857077436`*^9}, {3.753037405778368*^9, 3.753037447101551*^9}, {
   3.7530377074140277`*^9, 3.753037727618513*^9}, {3.7530394918720074`*^9, 
   3.753039515319679*^9}, {3.753040163564842*^9, 3.7530402130844274`*^9}, {
   3.753042857311799*^9, 3.7530429834594564`*^9}, {3.753048660303727*^9, 
   3.7530488486969757`*^9}, {3.753048899787674*^9, 3.7530489045209365`*^9}, {
   3.7530510651712866`*^9, 3.753051066998982*^9}, {3.753051366307581*^9, 
   3.7530513664637327`*^9}, {3.75306925035785*^9, 3.7530692689717607`*^9}, {
   3.753725288173916*^9, 3.753725288642519*^9}, {3.753725482043355*^9, 
   3.7537254821483903`*^9}, {3.754237298416603*^9, 3.754237328212888*^9}, {
   3.754240258805423*^9, 3.7542402848770103`*^9}, {3.7786384206572285`*^9, 
   3.7786384834550037`*^9}, {3.78259162576659*^9, 3.782591631946948*^9}, 
   3.782593296102789*^9, 3.7825941894870644`*^9, {3.8020342003178053`*^9, 
   3.8020343658422666`*^9}, {3.8020347628225718`*^9, 
   3.8020347753073325`*^9}, {3.8020361685567036`*^9, 3.802036184090276*^9}, 
   3.802036363753697*^9, {3.80203639856824*^9, 3.8020364473675847`*^9}, {
   3.8020364781953325`*^9, 3.8020364905288334`*^9}, 3.8020379365532846`*^9, {
   3.8020379831973543`*^9, 3.802037985066099*^9}, 3.8020380263573413`*^9, {
   3.8020380750757685`*^9, 3.8020380771499634`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Determination of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalJ]", "c"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.777739765206789*^9, 3.7777397751189113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", "/", "\[CapitalDelta]"}], " ", "points"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Inverse\[CapitalDelta]List", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.000046656298600308496", ",", "0.0009331259720062202", ",", 
       "0.0019595645412130644", ",", "0.0033125972006220836", ",", 
       "0.004992223950233283", ",", "0.0066718506998444775", ",", 
       "0.009984447900466563", ",", "0.01250388802488336", ",", "0.015", ",", 
       "0.01665629860031104", ",", "0.0175", ",", "0.020808709175738727", ",",
        "0.0225", ",", "0.025007776049766724", ",", "0.0275", ",", 
       "0.028506998444790047", ",", "0.03", ",", "0.0325", ",", 
       "0.03331259720062209", ",", "0.035", ",", "0.0375", ",", 
       "0.03998444790046657", ",", "0.0425", ",", "0.04544323483670297", ",", 
       "0.0475", ",", "0.05", ",", "0.05351477449455676"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]List", "=", 
     RowBox[{"1.", "/", "Inverse\[CapitalDelta]List"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Critical", " ", "\[ScriptCapitalJ]", " ", "points", " ", "signifying", 
      " ", "the", " ", "change", " ", "in", " ", "ground"}], "-", 
     RowBox[{"state", " ", "degeneracy", " ", 
      RowBox[{"(", 
       RowBox[{"change", " ", "of", " ", "phase"}], ")"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]List", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.0", ",", "0.05", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.25", 
       ",", "0.3", ",", "0.35", ",", "0.4", ",", "0.45", ",", "0.5", ",", 
       "0.55", ",", "0.6", ",", "0.65", ",", "0.7", ",", "0.75", ",", "0.8", 
       ",", "0.85", ",", "0.9", ",", "0.95", ",", "1.0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalJ]cListEff", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalD]", "=", "0.0315"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalQ]", "=", 
     RowBox[{"1.517", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Binary", " ", "search", " ", "to", " ", "determine", " ", 
          SubscriptBox["\[ScriptCapitalJ]", "c"], " ", "phase"}], "-", 
         RowBox[{
         "boundary", " ", "between", " ", "the", " ", "singlet", " ", "and", 
          " ", "non"}], "-", 
         RowBox[{"singlet", " ", "states", " ", "for", " ", "H"}]}], " ", "=",
         " ", 
        RowBox[{
         SubscriptBox["H", "cf"], " ", "+", " ", 
         SubscriptBox["H", 
          RowBox[{"ex", " "}]], "+", " ", 
         SubscriptBox["H", "d"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", "=", 
          RowBox[{
          "\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"-", "2.0"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"b", "=", "2.0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"HA", "=", 
          RowBox[{"projectedHamiltonian", "[", 
           RowBox[{"\[CapitalDelta]", ",", "a", ",", "\[ScriptCapitalD]", ",", 
            RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", "states"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesA", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HA", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyA", "=", 
          RowBox[{"Min", "[", "energiesA", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyA", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesA", "-", "minEnergyA"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.00001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"HB", "=", 
          RowBox[{"projectedHamiltonian", "[", 
           RowBox[{"\[CapitalDelta]", ",", "b", ",", "\[ScriptCapitalD]", ",", 
            RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", "states"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesB", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HB", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyB", "=", 
          RowBox[{"Min", "[", "energiesB", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyB", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesB", "-", "minEnergyB"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.00001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"b", "-", "a"}], "]"}], "\[GreaterEqual]", "0.000001"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "+", "b"}], ")"}], "/", "2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"HC", "=", 
             RowBox[{"projectedHamiltonian", "[", 
              RowBox[{
              "\[CapitalDelta]", ",", "c", ",", "\[ScriptCapitalD]", ",", 
               RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", 
               "states"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"energiesC", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Chop", "[", 
               RowBox[{"Eigenvalues", "[", "HC", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minEnergyC", "=", 
             RowBox[{"Min", "[", "energiesC", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"degeneracyC", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"energiesC", "-", "minEnergyC"}], ",", 
                RowBox[{
                 RowBox[{"#", "<", "0.00001"}], "&"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"degeneracyC", "\[Equal]", "1"}], ",", 
              RowBox[{"a", "=", "c"}], ",", 
              RowBox[{"b", "=", "c"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]cListEff", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", "c"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalJ]c2ListEff", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Binary", " ", "search", " ", "to", " ", "determine", " ", 
          SubscriptBox["\[ScriptCapitalJ]", "c"], " ", "phase"}], "-", 
         RowBox[{
         "boundary", " ", "between", " ", "the", " ", "doublet", " ", "and", 
          " ", "non"}], "-", 
         RowBox[{"doublet", " ", "states", " ", "for", " ", "H"}]}], " ", "=",
         " ", 
        RowBox[{
         SubscriptBox["H", "cf"], " ", "+", " ", 
         SubscriptBox["H", 
          RowBox[{"ex", " "}]], "+", " ", 
         SubscriptBox["H", "d"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", "=", 
          RowBox[{
          "\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"-", "4.0"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"b", "=", "1.0"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"HA", "=", 
          RowBox[{"projectedHamiltonian", "[", 
           RowBox[{"\[CapitalDelta]", ",", "a", ",", "\[ScriptCapitalD]", ",", 
            RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", "states"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesA", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HA", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyA", "=", 
          RowBox[{"Min", "[", "energiesA", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyA", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesA", "-", "minEnergyA"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.000001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"HB", "=", 
          RowBox[{"projectedHamiltonian", "[", 
           RowBox[{"\[CapitalDelta]", ",", "b", ",", "\[ScriptCapitalD]", ",", 
            RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", "states"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"energiesB", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"Eigenvalues", "[", "HB", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"minEnergyB", "=", 
          RowBox[{"Min", "[", "energiesB", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"degeneracyB", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"energiesB", "-", "minEnergyB"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "0.000001"}], "&"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"b", "-", "a"}], "]"}], "\[GreaterEqual]", "0.00001"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "+", "b"}], ")"}], "/", "2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"HC", "=", 
             RowBox[{"projectedHamiltonian", "[", 
              RowBox[{
              "\[CapitalDelta]", ",", "c", ",", "\[ScriptCapitalD]", ",", 
               RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", 
               "states"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"energiesC", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Chop", "[", 
               RowBox[{"Eigenvalues", "[", "HC", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minEnergyC", "=", 
             RowBox[{"Min", "[", "energiesC", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"degeneracyC", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"energiesC", "-", "minEnergyC"}], ",", 
                RowBox[{
                 RowBox[{"#", "<", "0.000001"}], "&"}]}], "]"}], "]"}]}], ";",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"degeneracyC", "\[Equal]", "2"}], ",", 
              RowBox[{"b", "=", "c"}], ",", 
              RowBox[{"a", "=", "c"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]c2ListEff", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", "c"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7777395582466288`*^9, 
   3.7777395828939037`*^9}, 3.7777396693165517`*^9, 3.7777397038503647`*^9, {
   3.777739744112523*^9, 3.777739745051776*^9}, 3.7777397811661105`*^9, {
   3.7777402036071315`*^9, 3.7777402104913826`*^9}, {3.7779195721217785`*^9, 
   3.7779195954169793`*^9}, {3.777919768806902*^9, 3.7779197720741105`*^9}, {
   3.7779198581750336`*^9, 3.777919929940053*^9}, {3.7779202569638433`*^9, 
   3.7779202629201202`*^9}, {3.778182254405136*^9, 3.778182297620714*^9}, {
   3.778182508388516*^9, 3.77818252387066*^9}, {3.7782849978404474`*^9, 
   3.77828501003275*^9}, 3.778285112226073*^9, {3.778285209527841*^9, 
   3.778285243263448*^9}, {3.778286236213961*^9, 3.778286241218108*^9}, 
   3.7782863240595875`*^9, {3.7782866920105686`*^9, 3.7782867049865446`*^9}, {
   3.7782875188900375`*^9, 3.7782875259733405`*^9}, {3.778288851884556*^9, 
   3.7782888660735817`*^9}, {3.77828916078312*^9, 3.7782891622287364`*^9}, {
   3.778289807750908*^9, 3.778289830244421*^9}, 3.7782983486602125`*^9, 
   3.7804184264371185`*^9, {3.7810571508236685`*^9, 3.7810571697098937`*^9}, 
   3.7810581446787815`*^9, {3.7812387519734287`*^9, 3.7812387540607367`*^9}, {
   3.7812387860844216`*^9, 3.7812387868185816`*^9}, {3.7812394854162674`*^9, 
   3.781239486478487*^9}, {3.781240346156703*^9, 3.7812403865728784`*^9}, {
   3.7812406417773075`*^9, 3.78124064627625*^9}, {3.782353884925498*^9, 
   3.7823538884876285`*^9}, {3.7823546295828495`*^9, 
   3.7823546747735434`*^9}, {3.785198154201902*^9, 3.785198262621868*^9}, {
   3.7851982992619267`*^9, 3.7851983085069537`*^9}, {3.785198389262246*^9, 
   3.7851984699522*^9}, {3.7851985013622074`*^9, 3.7851985366521196`*^9}, {
   3.785203107085289*^9, 3.7852031086535172`*^9}, {3.7852034326865616`*^9, 
   3.7852034526871023`*^9}, {3.785203922148464*^9, 3.7852039223583713`*^9}, {
   3.7852040125861206`*^9, 3.785204023976022*^9}, {3.785204273028832*^9, 
   3.7852043168386126`*^9}, {3.7852046582867117`*^9, 3.785204658356521*^9}, {
   3.7852065351383123`*^9, 3.7852065649733152`*^9}, {3.785207072982994*^9, 
   3.785207150694762*^9}, {3.7852572497826777`*^9, 3.7852572773546934`*^9}, {
   3.785258061493988*^9, 3.7852581149594*^9}, 3.786411836655532*^9, {
   3.7869381148023033`*^9, 3.786938128593343*^9}, {3.787015211137886*^9, 
   3.7870152176076603`*^9}, {3.787015795107221*^9, 3.7870158418422794`*^9}, {
   3.787016388338808*^9, 3.7870164128552837`*^9}, {3.7870165197225475`*^9, 
   3.7870165221244135`*^9}, 3.7870168430262823`*^9, {3.797114754984907*^9, 
   3.7971147660603466`*^9}, {3.7971148128618207`*^9, 3.79711481842305*^9}, {
   3.797116109665139*^9, 3.7971161330814714`*^9}, {3.797116192058287*^9, 
   3.797116246006528*^9}, {3.79711629498925*^9, 3.797116305314905*^9}, {
   3.7971166979747434`*^9, 3.797116715734376*^9}, {3.797116765794797*^9, 
   3.7971167725245805`*^9}, {3.797117704229657*^9, 3.7971177069009366`*^9}, {
   3.797117741182783*^9, 3.7971177480705338`*^9}, {3.7971183694221525`*^9, 
   3.7971183973643107`*^9}, {3.797118438729569*^9, 3.79711845116413*^9}, {
   3.797118505940196*^9, 3.7971185259191713`*^9}, {3.7971197789981546`*^9, 
   3.7971197829035025`*^9}, {3.7971198602682433`*^9, 3.797119867563465*^9}, {
   3.797815484574119*^9, 3.7978154956017056`*^9}, {3.79781863392881*^9, 
   3.7978186495428886`*^9}, {3.797898209890738*^9, 3.797898210037983*^9}, 
   3.8012653470640545`*^9, {3.801299527865739*^9, 3.8012997040261173`*^9}, {
   3.8018809580209484`*^9, 3.801881096293948*^9}, {3.8018811278147755`*^9, 
   3.8018811938591595`*^9}, {3.801881233890485*^9, 3.8018813011735964`*^9}, {
   3.8018813588433113`*^9, 3.8018813625373125`*^9}, {3.8018816708831797`*^9, 
   3.8018817307882023`*^9}, 3.8018819609095144`*^9, {3.802038313154836*^9, 
   3.802038401655013*^9}, {3.8020385102067637`*^9, 3.8020385198327436`*^9}, {
   3.802038550160202*^9, 3.8020385653220015`*^9}, {3.8020386376268625`*^9, 
   3.802038647485538*^9}, {3.8020398622428904`*^9, 3.8020398745816126`*^9}, {
   3.802048211997422*^9, 3.802048219990381*^9}, {3.8029989164326906`*^9, 
   3.802998938135257*^9}, {3.8029989828773556`*^9, 3.8029989896440334`*^9}, {
   3.802999021129791*^9, 3.8029990475950284`*^9}, {3.803000071643727*^9, 
   3.8030000774225283`*^9}, {3.8030016920852237`*^9, 3.803001703921596*^9}, 
   3.803088492848631*^9, {3.80308858008998*^9, 3.803088587711794*^9}}],

Cell[CellGroupData[{

Cell[BoxData["273.9520869`9.889219606628455"], "Print",
 CellChangeTimes->{3.8020385847513504`*^9, 3.8020386221962767`*^9, 
  3.802038661074918*^9, 3.802039942024625*^9, 3.8020480614755344`*^9, 
  3.8020482711230183`*^9, 3.802999362833151*^9, 3.8030003598435717`*^9, 
  3.803001978738209*^9}],

Cell[BoxData["515.970786`10.164170106289529"], "Print",
 CellChangeTimes->{3.8020385847513504`*^9, 3.8020386221962767`*^9, 
  3.802038661074918*^9, 3.802039942024625*^9, 3.8020480614755344`*^9, 
  3.8020482711230183`*^9, 3.802999362833151*^9, 3.8030003598435717`*^9, 
  3.803002220756908*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Boundary Plot", "Subsection",
 CellChangeTimes->{{3.7777398080908194`*^9, 3.777739808531269*^9}, {
  3.801931266959448*^9, 3.801931269112642*^9}, {3.80193137871883*^9, 
  3.8019313793203325`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Phase", " ", "boundary", " ", "plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maxX", "=", 
     RowBox[{"Max", "[", "Inverse\[CapitalDelta]List", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minY", "=", 
     RowBox[{
      RowBox[{"Min", "[", "\[ScriptCapitalJ]cListEff", "]"}], "-", "0.1"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxY", "=", 
     RowBox[{
      RowBox[{"Max", "[", "\[ScriptCapitalJ]cListEff", "]"}], "+", "0.1"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "Inverse\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[ScriptCapitalJ]cListEff", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "Inverse\[CapitalDelta]List", "]"}]}], 
          "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table2Eff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "Inverse\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[ScriptCapitalJ]c2ListEff", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "Inverse\[CapitalDelta]List", "]"}]}], 
          "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tableEff", ",", "table2Eff"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda]\>\"", ",", 
        "\"\<1/\[CapitalDelta] (\!\(\*SuperscriptBox[\(K\), \(-1\)]\))\>\"", 
        ",", "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalJ]\), \(c\)]\) \
(K)\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", "Full", ",", "Full"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.775958993986372*^9, 3.7759590379916906`*^9}, {
   3.775993752274399*^9, 3.775993850704097*^9}, {3.77599395954931*^9, 
   3.775994042924046*^9}, {3.775994080404234*^9, 3.7759941074442043`*^9}, {
   3.7759968737310133`*^9, 3.775996912241263*^9}, {3.775997009426234*^9, 
   3.7759970346061816`*^9}, {3.775997065911278*^9, 3.775997138391062*^9}, {
   3.775997170830858*^9, 3.775997216870946*^9}, {3.775997306740967*^9, 
   3.77599732764079*^9}, {3.7759976956953897`*^9, 3.775997961790313*^9}, {
   3.7759979921350613`*^9, 3.775997993200055*^9}, {3.775998068459863*^9, 
   3.775998135610181*^9}, {3.775998188259819*^9, 3.7759983059498453`*^9}, {
   3.775998530999428*^9, 3.7759985848396635`*^9}, {3.7759986336296167`*^9, 
   3.7759986877395086`*^9}, {3.7759987231896477`*^9, 3.775998743759351*^9}, {
   3.775998825589379*^9, 3.775998885084236*^9}, {3.7759989246091375`*^9, 
   3.775998925054158*^9}, {3.7773483721795664`*^9, 3.777348385858985*^9}, 
   3.777348444090362*^9, {3.777348562470524*^9, 3.7773485628610554`*^9}, {
   3.777348609179862*^9, 3.777348616787471*^9}, 3.777561274185049*^9, 
   3.777561400149664*^9, {3.7775624018879557`*^9, 3.7775624684177437`*^9}, {
   3.77756279259341*^9, 3.777562796698764*^9}, {3.7775628377786665`*^9, 
   3.7775628715383615`*^9}, {3.7775629074786406`*^9, 3.777563145958152*^9}, {
   3.7775632137779617`*^9, 3.7775632685475388`*^9}, {3.7775633654688005`*^9, 
   3.7775634097636404`*^9}, 3.7775640309347277`*^9, {3.777564129811645*^9, 
   3.7775641308426566`*^9}, {3.7775642156263723`*^9, 
   3.7775642273077807`*^9}, {3.7775642788660536`*^9, 
   3.7775642988278503`*^9}, {3.7775643657477674`*^9, 
   3.7775643698561764`*^9}, {3.7775645028441553`*^9, 
   3.7775645284803343`*^9}, {3.7775645591119566`*^9, 3.777564562001922*^9}, {
   3.7775645935433187`*^9, 3.777564628272694*^9}, {3.777564898985861*^9, 
   3.7775649731358795`*^9}, {3.777565023575453*^9, 3.7775652646849227`*^9}, {
   3.777565310084981*^9, 3.7775653340947833`*^9}, {3.7775653930548096`*^9, 
   3.7775654991846256`*^9}, {3.777565710718251*^9, 3.7775659569422207`*^9}, 
   3.7775659895320807`*^9, {3.777566328088567*^9, 3.7775663288586607`*^9}, {
   3.777566499278164*^9, 3.777566499598072*^9}, {3.777566866977498*^9, 
   3.777566873702125*^9}, {3.77756752174961*^9, 3.7775676743203382`*^9}, {
   3.7775677077510276`*^9, 3.777567866082579*^9}, {3.7775679027301426`*^9, 
   3.777568008425028*^9}, {3.777568716051829*^9, 3.777568731819317*^9}, {
   3.7775687865464725`*^9, 3.7775688427103834`*^9}, {3.777568885456337*^9, 
   3.7775688918358073`*^9}, {3.777568927807233*^9, 3.777568936844*^9}, {
   3.7775689922817936`*^9, 3.777569031651902*^9}, {3.7775690709048004`*^9, 
   3.7775691266097507`*^9}, {3.7775691885930853`*^9, 3.777569332840666*^9}, 
   3.7775694122084846`*^9, {3.7775694469423437`*^9, 3.7775695539635324`*^9}, {
   3.7775696019652405`*^9, 3.7775696365607986`*^9}, {3.7775697098240423`*^9, 
   3.777569712879402*^9}, {3.777597356338475*^9, 3.777597359934311*^9}, {
   3.7775980831418734`*^9, 3.777598122238043*^9}, {3.7776038962311954`*^9, 
   3.7776039700596185`*^9}, {3.777604056083409*^9, 3.777604056379856*^9}, {
   3.777604415072221*^9, 3.777604459856062*^9}, {3.7776045172693963`*^9, 
   3.777604600866763*^9}, {3.7776046648092513`*^9, 3.777604688809087*^9}, {
   3.777604720725335*^9, 3.777604720911575*^9}, {3.7776048018238783`*^9, 
   3.7776048072210207`*^9}, {3.777604887501028*^9, 3.7776049257711487`*^9}, {
   3.777604993246999*^9, 3.7776049936001835`*^9}, {3.7776067417135854`*^9, 
   3.777607145196741*^9}, {3.77773937448938*^9, 3.777739382684129*^9}, {
   3.777739499984274*^9, 3.7777395161067553`*^9}, {3.7777395582466288`*^9, 
   3.7777395828939037`*^9}, 3.7777396693165517`*^9, 3.7777397038503647`*^9, {
   3.777739744112523*^9, 3.777739745051776*^9}, 3.7777397811661105`*^9, {
   3.777740219856539*^9, 3.77774024563313*^9}, {3.777919965027746*^9, 
   3.777920028635236*^9}, {3.778289214867298*^9, 3.778289218880719*^9}, 
   3.778644281191668*^9, {3.7812406806923676`*^9, 3.7812407498432636`*^9}, {
   3.7812408108340282`*^9, 3.7812409867585864`*^9}, {3.781241018824711*^9, 
   3.7812410504033933`*^9}, {3.7812412537632113`*^9, 
   3.7812413252777514`*^9}, {3.781241488131584*^9, 3.7812414888345757`*^9}, {
   3.7823538366307044`*^9, 3.782353838197014*^9}, {3.786412048484284*^9, 
   3.786412082921042*^9}, {3.7864121211015368`*^9, 3.786412126287809*^9}, 
   3.7869959934894323`*^9, {3.7870128012213755`*^9, 3.787012802627287*^9}, {
   3.7870128383759727`*^9, 3.7870128685131793`*^9}, {3.7870129888978133`*^9, 
   3.7870130116666317`*^9}, {3.7870136714933715`*^9, 
   3.7870136780137043`*^9}, {3.787013855812828*^9, 3.7870138963329153`*^9}, {
   3.787014236976088*^9, 3.7870143116357656`*^9}, {3.7870148162320027`*^9, 
   3.7870148275271535`*^9}, {3.78701496945185*^9, 3.7870150294212823`*^9}, {
   3.7870150669177666`*^9, 3.7870151449578743`*^9}, {3.7871016226861205`*^9, 
   3.7871016329891577`*^9}, {3.7871017667329025`*^9, 3.787101800125018*^9}, 
   3.7871020571807685`*^9, {3.787102440408989*^9, 3.7871024628124037`*^9}, {
   3.797119792760494*^9, 3.79711981921945*^9}, {3.7971198885540266`*^9, 
   3.7971198911315465`*^9}, {3.7971199430859013`*^9, 
   3.7971199850424647`*^9}, {3.7971200156523867`*^9, 
   3.7971200202137823`*^9}, {3.7971201130637217`*^9, 
   3.7971201228270454`*^9}, {3.797120205651984*^9, 3.7971202526098304`*^9}, {
   3.8018821682995577`*^9, 3.8018822586172175`*^9}, {3.8018823006768546`*^9, 
   3.8018823127819157`*^9}, {3.8020469092928495`*^9, 
   3.8020469534396753`*^9}, {3.8020481714435415`*^9, 
   3.8020481717974386`*^9}, {3.802048229435266*^9, 3.8020482542325745`*^9}, {
   3.8029998382135057`*^9, 3.8029999424286423`*^9}, {3.8030016644577637`*^9, 
   3.80300167726431*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
6NiHT11zStyXRv85l+vYh3Orch370PdJNujYhzmruY59+LEz17EPo8txHfuw
WlAW6NiHt04wXabFSXm15VwS9qEZwUl5EZyUF8FJmRGclBfBSZkRnJQXwUmZ
EZyUGcFJmRGclBnBSXkRnJQZwUl5EZyUF8FJeRGclBfBSZkRnJQXwUl5EZyU
F8FJeRGclBnBSXkRnJQZwUmZEZyUiuCkdAhOyo7gpIwITkqZKOakbAhOyoDg
pFwITsqG4KRcCE7KheCkXAhOyozgpMwITsqro5iT8roh5qS8CE7Ki+CkzAhO
yozgpMwITsqL4KS8CE7KjOCkvAhOyozgpLwITor7UJuT0iE4KR2Ck3IjOCk3
gpPyJzgpI4KTMiA4KQXBSdkQnJSC4KQMCE7KhuCkDAhOyoDgpAwITkpBcFIK
gpNSEJyUguCkXAhOyoXgpGwITkpBcFIuBCelIDgpF4KTUhGcFNaxDxMITsqB
4KSMCE7KjuCk9AhOyojgpCwITsqN4KQsCE7KgOCkbAhOyoXgpBQEJ+VCcFI2
BCdlQHBSNgQnZUBwUi4EJ2VDcFIuBCdlQ3BSijJiTsqF4KRcCE6K74evS/mQ
6diHKoKTsiY4KR2Ck3IjOCk9gpPyJzgpN4KTciI4KTeCk9IjOCk9gpMyIjgp
J4KT0iM4KRuCkzIgOCkbgpMyIDgpA4KTciE4KQXBSbkQnJQLwUnZEJyU4oiY
k1IRnBTWsQ/1CU7qGsFJeRKclDXBSTkRnJQ/wUkZEZyUkuCk7AhOyo3gpNwI
TsqO4KT0CE7KiOCknAhOyongpJQEJ6VHcFJGBCdlRHBSLgQnpSA4KRuCk3Ih
OCkbgpPiz99A4rmszUlhHfvQmeCkHAlOKoHgpPQJTsqJ4KSMCE7Kn+Ck9AhO
yo3gpNwITsqO4KTsCE5KSXBSbgQnZUdwUk4EJ2VBcFJGBCdlRHBSdgQnpSQ4
KSXBSRkRnJQFwUmpCE4K6yV9yHTsQx2Ck7pGcFIqgpO6RnBSbgQn5UZwUk4E
J+VEcFJ6BCdlR3BSegQnpSQ4KTuCk7IgOCklwUkZEZyUEcFJ+ROclB3BSRkR
nJQRwUkpCU7KieCknAhOip8DQ4nzYWgpHzId+9CP4KT0CU7KgeCkFhCcVALB
SfkTnJQTwUkZEZyUBcFJGRGclAXBSRkRnJQewUn5E5yUBcFJ+ROclD/BSbkR
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
2WmeL471+fj4ubMy/DWMg/cNEz0+/j2Xpvldzxwp0h3KfufXP7rH8JjoK0W6
8YTXoGt9301dPj7eZwY9/gb6oNl/tTjYQbPP+A37BuO0nevUdGd1zfPO9plf
Cd8W55+P+8E4WjlJr6+gj/ytsFOO0+xL/p34fm5etMCa5+a7bnx8/Dy1rszH
1+rLNrE8v5/puukF7aMCZhXpYYF5MM6qgWFvG2e5Funm+3xBx8/lJ5a+ME7A
Xz2Do452KbW/ifc9P4Kv9zIN8/pyYmTUSY1PyoWCjve97UtDYJylw9dFN9o0
vlCX/6zxG3S078mNe/yEcaq9sKyQdbOY++gfAjre9zZU5ePjfa9d5RzQjxVd
/9Ki8f07ZcM4Ey761z+frRnH+n0w6Hjfu7k1GMZB+558bJ8M0EfnL39eqf3q
ovpej/h+q/lvMW/Sio+v9T7hvS8wDt73zv9IBV1zPZuK9GpvU2CcaONLhvqh
xd/7c+IL6Hjfu7aGj6+17z1JAD125YYR2U92FOmLOyXAOLuKXu/F/Et/Pj7e
9wr+fIZx8L7nOTAO9NDoBzU+Ru0p0reFxcI4Ti8KNwjNvvfO4zPoeN87PeNz
iXnQ7HsRDjGgn5rYts6iQweLdGX/GBgnfNrtsRW+FPNiTfj4eN+TfwqCcbS+
92R7NOgTLHNNLg0u/pzOlj8vWpu2nXe3cfH3wR0LAh3ve84WfHy8752py8e3
yFusO9X7sGbf8I6CcTyNdl1esU2z7wXV4uPjfa/Dm0AYB+97H29Egm7TdnTB
g6cafe1u/jyS1Sr7yOCtZhyDi4Gg433PdhUfX+v7XGrz8W8seqE8dluje8bz
51Fu4TTkFH8P4zA+Pt73JtTj4+N9r+5YPk4Hm4aPMzZr9jc/RQDoWjmu8wEw
DrWP9bBfV0HVT7NfKdorQMf71YJJEaA3PJg5O3uRRp/ej+t4/6kVFQ76xbm5
bn6HNfqTJ1zXen+sL9eLfu3Uc0X6nApc18p/DvkOuneQ3Yk1zzR6eHeu49e7
wa8w0C2LfFv8fTdhXNf6/q+lXO9XtMCa1+PKAVzHr8fw299Ad/SzG3B6u0Yf
7Yh09PpqVJHrwbPbLh78VqN3jf4KOn693F7C9X61Q2RlWmj8P3kY17H/d37k
z8fgZ/YTHu/S6Dc9ua6Vy7INLTHPGv33OK5jf3r85s+X6A2TXV/panzYLoLr
Wv3vaqYHmVZBfW62RQHoVrzPRf4MIp6zQaYPeZ+rpYv/vk0Qfg7KjW/+BF23
uM8to9ZT9FSg4/P8Z+9c0PfxPlcecjEbdPSckidHZIEex/tcuf78DNDxc+fF
NiXolqjPfeeeBjp+jlwOSwV9Cepza3ZMAR0/FywPJ4OO+1yrW0mg431+xBSu
4z43JysRdLxv53zguj7qcz3WJ4Cu9XeiynId97lOK+NBx/tqXH+u4z43b18c
6HifnD2S6SFafa6jx2/QcZ+LfSLeJ0NIH25FfW7je7Gg4/0zcGMsjIP7XDw+
5Vvc57oN4ePj/bba33x8fN5L38HvF/e5Xqnc/7jPbRsfAzren1u/i4Fx8Oti
vmEe6LjP3e/yA8bBfa7rZD4+3s/HduXj4/Ne3985oOM+16knf92VRX3udT0+
Pt7/75fn42v9/dJxmaDjPtdmA3+dPkR97uCX0aDj50XVm9Ewjtb3NTgrQcd9
7of8dBgH97lZE/j4+PlSpwcfH7+uB91JAx33uZ2q8X0D97kHEqNAx8+jtR+i
Ssxz8fd+Tk8FHfe5J+vw/Qf3uZ67+fha3wu8nI+P9424Vymg4z63QyDfr3Cf
K2/Hx8fPu401+fh4n+n3KQl03OcmLeb7G+5zzWIjQcfPx1ufI2EcvC9NlfHx
cZ9rtJnvh7jPrXeZj4+fp2WP8vHxPtYtl+2TYbjPlbvH8/0B97mtrfn4+Pnb
ZmAkjPNF2OeGEPte6e+HYvW4z3XZnQA63vdO1uXXb8f7XK3xxfteiFafOyE9
HnSt7yN+FQ/j4Oc7n58wU2fe58oqov0Q97nPDvLx8b530oqPj/vclbN/go76
XPnIw/l8Pov+FeevKvDxtb7vyS0OxtH6OxV5P0BHfa68faUfMA7ucx858+cd
3vc2bObj432veoVs0FGfK08/nAXj4D5XZywfH+97OgZ8fLTvyaMMM0HHfa78
SwaMg/vc4VH8+YX3vR7nY0vMQ9G+J5/4SQk66nPl7pf5fov7XN3FfHy87+l2
5eOjfU9u15CPj/pc+ctKfHzc564sw8fX+js/H2JgHLzvpR9OB30s6nNVNdNh
HNznTj6Nnr9o3wubz8fH+17m2lTQcZ/bfhDfz3Gf62HOx8f7Xi1DPj7e9/4+
mQL6TdTn3rfk+znucxMq8PHxvtc6KhrGwfveoo3JUI/7XENP/hzE+5v5Pj4O
tY/hPjd+YDLoeL/acCAJdNzn3lvLdbz/dDfmOu5zLzbkOt5PzjxPBB33ufnH
uK71/r8e13Gf27E81/HrfW0Y329xn5v3kuv49Zuzmuu4z11sxXX8euyn5Psh
7nOfBSIdvb4mr+M67nP9bbiOXy8BelzHfe6RXL7PYP/bX+I67nObHeU69nOz
mXEl5rn4uT+G69ify+pxHfe5m8twHftQ/ynbB6JMpwr72SjieRpl+lTYz0YR
z8co02qoj8Z6df65rdx3LNfx8wvrB4r7WfUYf3JXFoCO+9nnZ3+CnlDcz6rL
N98YrQIdPV/k2W1+gI4+t5Wnnsgp8Xs1z4uHNbiOPreV18jgn5vjc++J/VxH
/ay8am4m6Pgcu/k513E/O3gj1/H+fG4u1/Hntpt3ZoCO9lt5j15cR/2sfFmY
EnS8f054wnXUz8pXDuE62g/ldxpzHfdrS+3YOb/09y4xXdznRhH7ZOnve2L1
+PPcqqvTQdf6O/Zd0mEccZ9b+nuj2Di4z72blAa61t/dDeD3i/t6PA7ebx+M
5vW4/8X1uD+1fJoK9eK/exyltT8b7eX1uP89Ov431OPPYXvb8Hp83gsY+wvq
8X5uO5bX4/53Tnn+esSfw3b4nQL1+LxX3oW/TvH+vzGS1+P+9/Re/vrF/Wlf
e16P+9ybtrlQj58X5qN4Pe5/pcv89Y7703KpyVCPX++zg7OhHj9f4t7yetz/
Dl/K63F/mrAqucR8al7vVmV4PX4eTbHm9bj/rRLA9x/cnw6S8Xq8n1Q6z+vx
86t8VBLU4/53dUVej/vTBTd4PT7vzZ7H9yv8vHN15vW4/+3Qmtfj/vT3VF6P
96uH0Xx/w8/HXea8Hve/fx/m9bg/3fEnEerxeS+uL6/Hz9NNcbwe92unZ7D9
sPT3fDHdR9jnlv6eO1Yv3vditPpcjzwl6HjfG3iXX4+tsM8t/T1lbBzc5945
ycfH+974LXx8B/R5Nx5HixM34fVHUf+rNQ9F/zT70o0qvF6872nzlXG30qF+
JPqct8lmXo/70+FOvB6fK6rk/IZ6vO95L+f194v738L357+++AX1uD+dZ8zr
8TlkfNV8qMf73shfaVAfg/rfb+vzoB73p7Pu8Hp8brF+9gPqtfrW2bw+hPe/
8nYTeT3uTwsMeD3uc//UzYV6Lb4A3v+PMz2J+t8dihyox/3ps/O8Hu97R3vy
erzvFczh9bj/rdWU1+P+dIMhr9f6HrHAbKjH+55VUgrUo8955TW38Xrcn371
5vX43NVobxbU431v+llej/vf6IW8Hvendqt4Pd73qpbj9XjfsxvB69HnvPKY
kEyox33rrPq8Hp/rNlvxerzvVYlLhvoLqK9ssSUDdGof64763CF/Z4KO9iv5
PB8+Dupz5Q8ech3vP7sPcx3tM/KFI7iO+ln5/i5cx/vG80i+z7zk/ay86Veu
o31AfvwF2udRP/sJ7bf4dT1oJ9dxP/twBdfx63RbD67jfnZdK6Sj112tKL7P
4H72zkuu49dRr3lcx/1s66Fcx6+LU/F8H8D97LQgrmOf9zmRVmKei/XtXMe+
fTyQ67ifrdGO61p/V/8be10nEc/ZJKLPTSKep0lEn5tEPB+TiD43Cfe5Wrr4
+ZUEfW5JXfw9Jkm4z/3Tcvov0PHz5ahXAeiszy3si93j8kv8Xs3zYsggruM+
t4NSBTo+9/67nuv4c9sVfj9Ax+9b1t3LddTnyvf25jrenwuacB31ufLF+rmg
a32PwLMc0HGfGzOW63j/fNKB6/hzWz343DxJaz+supLrqM+Vmyxi+3Dp7+1i
urjPTSL2ydLfF8bqcZ87qAy/Hrx/6n/l1yPuc0t/7xgbB/W58s9uWaDj/fbl
BT6+uM9N0jrv5VrxenGfm4T7XLl+OV5PvV7wvr0jLhPqcZ+L63Gf++k9r6de
X/i8N/8Vr8d9brj3b6hHfa781D+8Hve5vavxevRckFvu4PW4z53lx1+/uM81
HcLrcZ+btu4n1OPniK8Rr8d9btYh/npHfa48Ji8D6vHrPedCHtSj5468dzyv
x31uP0Nej/vcmR4ZJeZT83pf5sr3E/Sckvtc5vW4z7Ww5/W4z02w5/V4Pwns
zevxc+3HLF6P+1yTXXz/wX1u80G8Hu8/wz7yfUmrz+3F63Gfq9rO61GfK9fV
5/Va3JMxr8fPzYu6vB73uRFf+f6G+lz58Wgl1OM+9991vB4/Z69/5vW4zw3c
wPaf0t8Tx3Rxn1v6exJZvXjfS9Hqc61h39bmXoeG8esR97mlv+eOjYP73OZe
2aDjfc/mIh9f3Odqc7WrLXm9uM9NMdX8V7MvjWnE68X7njafmxeZBfW4z8X1
uM9t9YnXi/c9bc43X+L1rM8t/KnjJV6P+9yl53g93vemjOP1+DzcdxOvZ32u
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
8+th44cej97W/FqEZBdkm7pWFgDzOaXZk6V/b4iFejZ+4NLFZYcmhEvnck4O
mKT2CfNtnfZ9u1vW4NfJ9Ot1rfKtBoZLx2qP6b00hc/z4Iixd0NPsOdaID7P
zK4ckQ8689Ueq5BGVWZlgc58EqP2vUU9pZT4bxe7mlUDYb26d5iye2OrGKhn
fij/dHxwzNQU0Nk6LhnUo/mtW4mgs3UZ0VQnvuKneGnGlfaB/yQGwDr2zq6f
bz2CXz+bN1XP4/NnW8dJC/ve/bkwmq/Xh+DcsEOTIqGezYPRnisRVbrEgg6v
u8aHp0wwi5FUmXX3VPgdAOtYoWeLyKvtoqCeXU9L95qhHuujpdHKr8enRvPr
v3ByuPpInCAVFAyKed00ANZ92bW616u359fDrtM+t9KlRSFR0os+fTpMqfIJ
1v2PrMmFpg0UUM+uJ93V6EjXkfx62PjX9lSf+e8XPj4bJ2hftUsN7SKlcrfl
QRFVAsEnM30ND9z9w8dn+srGF42N9SOleUX/voBPbrm65jfo8gt05pOAKqe2
FTTKAR2de0NeOWWAzvzwoFFYyl8V0kFnfrBb0fNhx+YpoLP5vFJju/3W5kmg
s3V3nr/Z/vGBBNDZ+vZN/nvThXHxoLP1zbrf98eqsXGgs3V8t3LuI//NsdLW
FtXfHqwbDL+38knZcP3z/Pey9Uo6XOFKtYAY0Nm6/EozSWrel+tsXWK2jZt6
zisadLYurayWTm0/gets/nsuyLxs/yNK+rX2vkvQuGC4L51c5zJXkuOLn1+h
sC7lZDKjl9P/gI6eO1/nPcsFHZ1zlh7MyQSdrYt5a/8+Ad5K0Nm6ZG9d+7z5
mjTQ2fxs/hk0YeTEFNDZuvy+F+JzyzVJ+tXh9r4eF77B+DtO/RrwfF+G5H+x
/iz/YcEwnzGDMnpkT4qFcdj9mo82SbwwJRF0to5NTS42Xz8iAXS2jr76s/f9
WRIveVj1//1i2Fe4zh+p48dv9ufXyX5vRMN+73w94iTDC+cPP7cLhnUpfz9p
ccOUaKhn6+sS+mVi+QZxoLP1nfjo84Kux2OlKksr7qp98hvMQ16Fjf2XZSZD
PRt/9pccb/tW/H7Zul8yDu4yxztGMrqVEFhp51eYB6mDU71/0xKl9+8K/4XB
uvc5EJ3g9fGP5F5hiluFbxGldFbP/LD5cVDtciNUoDM/+C1vVGnrsGzQ2Xod
33bq1xlVhvT3psdBRzIiYBwLn2XHN3vlQT3ziaVDOxPjSUrQ2fwbR/Tr/nZl
mlTYBx+IjoDfqz632KRvz5HKBY/8p9zGr7AuUep1+d4rHsZh82m8abLt33dS
JCObSGnh53C4zpV2d2ec8syEejZvOY27/7xvkQw6809yzeUjfbomSVNjB+k+
ORcB19/+8tFxY0dmSMeOhW+c/fAbrK+zlexiJ584GIf5zXPJN481wxOlhN0r
u+Ru+A73+7jdztXbE9Ognt1X7eUjvY7vSZCmfg56lX3xK/jhutvsWnM8Y6Ge
+S228vmD1+P4PLDruaO/3rvx9HjJ5HyvR0Peh/P3AdS7+InUVKhn43skLa65
J55fP/PbZnPFre1b46TZioaV+jz8DvM22bDhk4/hLLemAF+p18+5QvQf0Jkf
rp7dN8PMJ0+yL+xrdkWS9ei54Gl7MAd0to5VskdPszLIkjw2/DYJD46A9Vqx
9pWbfxa/HrZeDkcev+5umyHdtf6xbfbhSLge1zbRD9p3/An1bF0mxNxdutZU
KXWwV52b5REB6zho4LnzDdOTpAfq7tFmbyRc52v13QyXcmEcNs/XbrZdnHk5
DXQ2b3HeRw70754q9agi9+vh9h3W3fDBk1nulRMl92F71o4uHwn3O7X60txj
oVkwDrvf/m9uNjhUJUV6JUVbBbyJAD90Lmce12h3omSudu2ahZEwDzvWPn8y
amImjMPua2+5V1vM9Pm8seuJTalhvtAiSXr9uuadYynh/PzQQTdlwfYE6UD4
ePc61nzeFj+uejF9jRLGYddzLyZgY8zlROmgjk5em+Dv4LcQ9Xl10up4qGfj
n5v0+Fkt/UTQWf1QO+dVNc4kSMaLPHJNZJEwz3sq+y14EpIO9cy3t7KDti7o
liD5rxt1/qbaJ0w/PPZ0ctemCdLb3W0a91zN1+X7zL0tOkrs/TruTytLy1db
c/5IOcH6no47ImH+Cyqsr2+A6nG/79H1J+jMJ+o+8OLC17mgs/VtbnXUJ6Bv
tmSkPsW+WRkJ6zJNfa49cScF6tk6HvAbMsdwdSbobP5XvRnsONkkQ7p/NvTX
veV8HWvbr7I3fJcE9WzebvywuBQ0WAk6m4cu6nPvl6rp0sa1VV+V3RwJ6/jd
PSbgZd9kqGfzEPY6OHfA51Rp06bmmTE1ImEdl3uNcNHrmSQZOqSOuJ3Br3Pz
4NnunewzYBx2vw3zdTdeC02RIs80PtZxB1/34QNbbZttmAj17L4+rz0ZZFeF
zw+7zsED150JmsSvk11Pm1uyIc18k6SyE82SlqnXkfmhRvu+9819+fjs975d
tvtSRXM+b6x+iX/MiD/fWD8SDT4pdF/h3xM+sNx9bPOm0TA/czqXu9Z6czrU
M58UPi/nHy4AnfmksXp7bJj3A3Tmk13WYxusG5cjvbbtvG1O9WiYt5ynP8In
LUyDeuaTk+r+d7xDFujw3BknpRh1zZRGG9sfH101CuazeVxSnMW2FKhnPvle
c423SdcM0JlPKqjPmb0WK6W6tS9PP60fDfOfXcE3/VICH4fNw5Irb7a8OJou
1dN/snfT9ShYlx3Zk6ZHRyRLz2vuih26l1/nWMPpfU/Mz4Rx2P2OaHv56Dqn
NGldzwedfZtEwXoZ1dddM8c/CerZfZXfOCBrxqNU0Nl1dqvV5Gb98lxn13PW
rlLZGNsU6ZQydFtl9TqydXefXafNznnJUM9+772nqib5iVxH57Tl/uuSpd9P
Jlssus7n7dbnhWuCbrLzT0wp/xhWHZn82DMG5m1YgySTQk6E1aP3c2TJcb9A
R/tM9PumeaAz/5h23RJuOyNXml3xdaPfV2NgPpfeuv8ltiofn/knY4JDOw/7
bNDZurSp2XdifLMsaVPdiUMafoqF8VVV71wYU/kH1DP/XDnSyFqnfibobB72
X0jsOX5EhuR2s5+qu3sMrMvySSsS9femQT2bh/rHbnkPvKyU7tyxbKU/MAbW
K8Dg5ez+8lRpyg2DzZEtY+E6+05w8K9ulQXjsPst3D9rNOX3y3xyN9kpzHlm
OujsenLLfT1X8UqaVKHntpeV38fCfeWqz+2HrvL7YtfjPt18wOkqaVL3PfaN
L6rXkfnh/fFqJ1v/ToF65p9Hs7KPG25PBZ3VW3S8mV27VqrkbJWdWG5gLMyb
x9PLkU57Wb8cV8o/oVs7hmxNjS+lP78Uu91yXBzMp/LAXdPty/k4zFfD7r2I
O9DlD+jMV018l4c59csHna37uUfHth2d+0OqL01Leq2Kh3H+yfjWanHcH6lA
fYo63j8O5t//wryxehFKGIf5zexr09SmC3Okwv3PNyNe6/2BTqN+Qj1b3z8F
+4176WZL+m7KiHuL4uF6+niGdt5YVQX1bL2Oj15hk5CfCTqbz1VhITMVrTOl
YUNCDn0cEQfrPrL//lGNayul2yuaVwz/GA/X2X3aidsT++bCOGw+a6t/fcz6
DCl70CP99c/itD73GWSaDfVsHu5dmxQUkcHngfnQzGCu1Uk519n1RKq+r51k
oJTO+jeadnFePNyX7Z395y7vzIJ65sM5B1W/LM+nSx9aVHtgol535qvxHW92
a3UwDeqZD5eNsrnuVC8ddFa/4vbsoOcX0qQuyv3bzoTxeWvpanU1AbjphFJ+
05zzE0vpU/ptbpKeHA/z5hTesN/hQXwc5p/QRub3Jif/AR31ofNNrX6Cjj83
d5+rKj7nJ5Ya51ivgjFdvsXD/I+ZeKX9tdsZMA5b364++rNNJuUWn/MTsf8L
HkwvgHq2vnurbSnjnZEtNaxgNqdhCF/HZo+rv37+UFl8nk+E62wSllKvsk4e
jMPWcc0NvemLQ7JAZ/O8o/u6D/N+Z0rREcvbL4yNBz8sNv83cMV3ZfE5PxGu
P6qWXeWBbX/AOPC5vPoc8mp0phQT42g9YnU8+ORC+xbGGZbK4vM8vy/9BWUN
/VvkwDhs3mqFOtoaPs+QhpbfXnAkmfvnaWu3CZ1PpEM9mwcrzz4fqo/i88yu
/31q5Pj1Scri83wizMPS6KuvbszMhnp2nVPK7DuZ7ayUFjy9YvFF7R/mz7PJ
+q86VlNCPbuewepz485xXGf1Q5ffvhhSV1l8/ufz/H1Kg2dTTLKKz3ulfas5
/yfy9wmr5nYdXIfXM7/dduvl1FH5B3Tkn9PH5heAzvww6Kbh/nk2ecXn/0SY
53qV9pT7a30m1LP1bSIdmHF60A/Q2XotebZxUeXAnOLzP5//37dOtJu2IwPq
2Tx/WW84Ttc9G3Q2D3pTGvWyDsgqPv8nwnqZbdjzIfUSH4fNw8AmJhctmmQV
n/8TYb3KPuq6dX6jjOLzP7/Oxt/7vDQqnwvjsPstzLeM3p9ZfP7n6/hc1cTL
4bAS6tl9PfHUy9xTl88Pu84p7zef8rvDr5Ndz+89d4bunJ5RfP5PBD8sN23p
1tOfj89+b/Za7zeX6vJxWL1Rw26TXoYqi897ycT5Pxnmx+zd5/c5iiyoR8/Z
eXHZf0BH73fJOtn/Ah2/H97DKr/4/J8M8zbycMthNwfx8ZlPynUqc/xeexXo
bP4bDmuqs84tt/j8nwTzOUL/+e56ozOhnvlk8KGkvkaOOaDD53FdtnevfTG7
+PyfDPOfU3dPhYiFfBw2D19UFdZ/T8oqPv8nwbrozz6omqzIKD7/8+ucf79N
nQBFLozD7ndx3e57r6rPdZrzfxKsl/e4CpcDLDOgnt1XrdOG4TO+8+th17n3
+AOLQ6u5zq4ns3/b27ebZRaf/5Nh3RWbzL1+O/Hx2e81+Fhnh10I11n9vG2t
paUnM4rP/3zerDrta9Ylgp2rU4jzfwrMW8/xsWa5rrye+edoxrfLu/L+gI7y
KhkH1v4GnfnnSsahyseH/iw+/6fAfFZ8tSXKsyofH54j15UT0qrngc7WxUAn
XrZiz4/i838qjK+4vrhXw8ifUM/8s3dC+vmOU3JBZ/Mw9czqiUl2OcXn/xRY
l3lhljN3d8iCejYPxyfqvn16L7v4/J8C6xVdvfylGhcyi8//qVrnf91HP2Ac
dr82vv9Gr2/M75f5ZOKsbYc/n+e/l13PzRcjx9XrlVV8/k+F+1qf2/P4pHB+
X+x6erbOen8rKrP4/J8CftAZ9WyfNCYT6pl/avfW+dPameusvv6rh2l1J2UW
n/9TYd72tK/t3+8m+xwtjTj/pxPn/zSYTwOTi813rODjMF/lpY4bU/v3H9DR
5/7t2q/nOlt39wvd+qV2Kyg+/6eXGkdz/k+D+beucWPXev9sGIf5reYAnWbn
0/KKz//p2M/L18bw38vW1+KhTpcBM1XF5/90uB6/oa39f78tgHq2XtXytz4b
2/4H6Gw+X9V5t6W5SW7x+T+N930R81q2Tc0qPv+nw3VueP7EZs2dfBgH+vSl
a1913pBTfP7n13n/a+09Rk4qqGfzIL9n+rVqFJ8HyFntnNu+zRyus+uZ3Mdn
2rG8rOLzfzrc14yzv95/usnvi/nQYV5q/iO1nzXn/zT8uf86N90sqGc+NJRa
Hf5jyXXkww8Zf2UVn//5vJ3NqxHybDV731tJnPPTYX5OB41+Ft6T1zOfsHqm
488fH6Vwna3vgYMjXQ40+VV8nk+H+Ry34+qLDkdyoJ6tl8mmxlKjt/mgs3UZ
GZJs0bV7XvG5nc9/xXHzPn87kQ31bJ4PJ/Wt8031A3Q2D+PvSgZ55X8Un8/T
tc7naTf4OGwezNOrNV3WP7f4HJ4O6xVfI3Xi+aa8nt2Xz5Yos4OXcorP23y9
nldS6o07kgX17PoPVfp4bU9LPg/sevLqnLnfz5OPz36vTZdcx8ozsovP1emw
7mM73gz648vHZ7+33OS4mHa1+DjoeTej46esUrn6QPWP0YJcfWE+pI4gV1+p
1i23UEGuvvBTQZkgV39S/Rz8bV86V780t+qdKEGufq6lpWWOIFef1nrNkfWC
XP2bn3kN7why9Z3uXOj2u2bpXH1R9yzI1f+sGvVmkCBXn3/+o3+8IFefNju4
2VpBrj5Gv6V1qCBXf0w+wqtVq9K5+oweARZtBLn6L5fW1RgsyNVPMayrqirI
1Vc9aFkvncjV/xHk6pttedB0gCBX73W/x4+/vMS5+j2CXL3uqXK7fQS5eqtX
38xfErn6uoJc/YD0oPsbBLn6ssflIxSCXP1cp9yhjwW5+vW7q205L8jVu4Rm
3z0qyNUnhEZMnS7I1RfunxcFufrp9fZUeCbI1S/cbPbGVpCrX3Bkycg4Qa7+
m6PtoNxdpXP1d7c/rS7K1d9uINmkTymdq9/Z/dzQDj6lc/WVfNM/zBbk6k+2
HevvKcjV5zfxGph9vXSufpHVukUPBbn66b6GH6oJcvW3XF1dewty9fdfxJmt
I3L1BYJcfb3LGYcSBbn6Nopadm0Fufr3977v6ELk6scLcvWeD7ptWCjI1Tur
z7Eeglx94O8Fm+sIcvXN1f3yElGufv3LXb0EufqqIe4xmYJc/Xaf58FfBbn6
5c6r+tYU5Oq757n330zk6t0FufrCnGpVQa6+/G6rkEGCXL2Veh8eI8jVF76P
d1eQqy/8nLps89K5+g8t/j4cLsjV+/bYNPmmIFffv+uW8Lwh4lx9oCBXH7hq
ksFHQa6+YFKVC7MFuXq3kROv3BDk6vequ9uGglx9R/V5r6YgV79m9KYR3oJc
fZ8LSSdGCXL1i0f8in8jyNUH/o7LPC3I1d9/qmriIsjVew8f09FWkKvP8rzz
crUgV6/etzMiBLn6pupzwGhBrn7CGJ9lYwS5+sJzvrUgV/+Pz9DWMkGuPl/d
X5QV5OofnQob1UmQq+/1NHHUOUGuvnA/GS3I1Z/79T42VJCrd70dqzgmytV3
Hx/rIsjV3wxMc90uyNW/b79zbvKa0rn6vPr5uvsFufqjLYcdbknk6lcLcvXr
Q+THFYJc/arhxzv4C3L1Z3vX868lyNW3NrGuZy/I1Sfn7fYbL8jV5zyy1Gkq
yNXXVDRr8EaQq7/w+ni1rYJcvVe7v0bcE+Tq+xyI9lQIcvUG6mW9J8jVTwxp
ZO4lyNUXPhcGCHL15bYcnVRBkKsv9KFckKtXdMqZkyLI1RfuV7UEufpUi8j+
9QS5+tdqV84S5Orv3f8yuaogV1/Yj6wV5Ornl306fpcgV+9r07mcnyBXP2rA
5CYtBbl6/40pve8JcvXKmTluvQW5+hdZ1wZmNS6dq+9c5rj8hiBXn9vNLtGT
yNVbC3L11rpvrZoLcvW71PvmFUGufojRm56XBbn6HeOmBv4tyNX3KcwNCnL1
86eNOT1KkKu3fGbrbyzI1Sdd3/FPb0Gu/vT2eyYhRK6+oiBXX/g5rC6Rqx8q
yNWv9w1taifI1Z/5NeBmiCBX/7yVopaLIFfvZX1x/Q//0rl6I5O/zk4W5Oq9
XDonTBHk6qu/3/zXAUGufrHqsFNFQa5+c0rvlkOJXP0dIlfvKcjVJx6qP6yz
IFdf9+9WVaoQuXpbQa5+mKpGenNBrv73sMAhfQS5+jF/NX7hKsjVN9n+R9lE
kKv3VT9nnwhy9T8Gll3WX5CrV/skuqYgV1/IHecIcvV+6v3ET5CrL/z8sRaR
q28vyNUXfl6wRpCrb9vLbaW7IFe/ZpJB55OCXP39xPltFwhy9UfUz7UgQa7+
68RurasKcvV7jFsraghy9XbnrRVNBbn6qMWN5x4S5OqH2Dmv6ijI1Yd02WO/
RJCrv2PRw+GiIFf/Znmjoc8EuXoH9WlltiBXX5RvFuTqr6nPFR8EuXrzOS3c
awpy9YXvf5oKcvWjzYa8vCTI1d9Y3MtTlKu/NGbB75+CXP2D3qm3Twpy9XOD
mz1cReTqyywtnas/tfBxVXtBrv5c6/tHPgpy9eaJ/c7WF+TqR86VvdYV5Opv
1Tus10KQq+9yJsZrhSBX/yG+Zvv5RK5+uiBX36l+/+9XBLn6supd/5EgV8/0
krn6Qk6qvCBXX7ifbxfk6o1/7rA+QeTqtxK5+u6CXP3R2cEbRLn6wvN2iiBX
v/X59IoKQa7e7q8XyT0Eufpvnb33nBTk6mtb3gh8JsjV23yzb/pWkKsPeZk0
01KQqx/a9nZiW0Gu/vB+vyErBbn6i6u2td0qyNW7112Sf0KQq991rFfeNEGu
/qbRkTqXiFx9U0Gu/urMsl1PErn6fYJc/RTrxOv2RK4+VJCrL9zPf0eVztXv
fL9l0EBBrr5kPf58eZEgV/9sfPAKa0GuvkP4kAZvBLn6Vup2pJcgV1/ITbcU
5Or9dnc1dxDk6vvsPTm4miBXX/h+wghBrt5ihU1iNpGrHyHI1c9X71f3Bbl6
vaW5VU8IcvWvupTZvFeQq89t23txPUGuvotzvXcjiFx9V0Gu3nvXw0eiXL1l
/PY+doJcfYTNng1pglx9/64PdkUIcvW26vPqNCJX30iQq//lcMWwkSBXf0Hd
/z4U5Op12/e9v4jI1XcjcvU9Bbn6Xur9aIMgV/9gUcHWjoJcfWH//68gV1/o
80WCXP2X+43CggS5+nnTjTo7CnL1veNP27cmcvVjBbn6cUe+vm4jyNU/yAic
FUjk6hVErv69IFdvPWvbYQtBrt7WKfJOFUGuvsXzN4vaELn6Y4JcvceE/olL
iVz9dEGuPuPDxerfBbn6NV/H/alP5OpHC3L1WSPHhpQR5Or/nV0nvnyYOFev
EuTqXd9s6ddMkKtvYn7vxTwiV19XkKsf5bImaYUgV/9kyTePaYJcfdrB3KEj
BLn6APvLm7oIcvUDRvRfOUiQq7+8rsbg3kSuvpsgV+9ySGlzS5Crb1OYFxHk
6kN7RVaPEeTqe1dyuHFSkKsfsNzFWC7I1XtXUupNE+TqC/mgSYJcfeH7z82J
XH2UIFf/seKoZw6CXP2wm2GemYJc/eCyy0xfCHL1fTIuRX8gcvUqQa6+3ObF
V9yJXH0Ckat/I8jV7wtQ+Yly9VsaSwciBLl65dMf4XcFufq7i59tjBLk6ice
9Rk6WpCrDzAqU7+CIFdvnHNyg4UgV+/aVT6nCZGrHyLI1QcZqyYPFeTqW/99
uJ+OIFd/5ei44ZUFufosRf2/Tghy9ZPqjY/SFeTqD38yKrNbkKuf2SXX8RyR
q68jyNWPHhvSpb4gV/9e7beyglz9iZ2dKx8icvUqIlevEuTqj4Rl7tkiyNUX
9umHBLn6Qr85CnL1r/YEqJwEufrCPmIOkauvLcjVF76uDQS5+sL3G9sLcvWf
Hj2v00WQq5/p+NfltYJcvWmd6+HRglz9G/U5IEKQq//15vVSA0Guvqf6HDhN
kKv3OPJvaqQgV39u1PC7JoJcvatygkOUIFcvax/W+ByRq58qyNXXWePd+Lwg
V1+9q4nVNEGuPjt3YNk2glx9OZNBA/8R5Ootq7bv+5LI1ccSuXoVkatXCXL1
OTN2PN4ryNWnjxvjM16Qqy/8PM5EkKvP9yu/7l9Brp6NUzJXP8v33+hzglz9
bttBPQYIcvWFPvQU5OofjhnVSpSrP+Q4u6yPIFe/eMOcshUEufoR1TucmSPI
1V+wVV4R5eqj1X6wJXL1ZkSu/pkgV59r55qgJHL1nwS5eoPUg7lNiVx9F0Gu
vuL6+mbVBLl6ozJTjq0U5Op7jDQbIsrVV7j0MTOTyNUbCnL13Xo4rd4myNXH
9x6yPJDI1U8lcvUqQa6+S8hb2QBBrr6Q42gtyNUX+va4IFfvNNJlzSxBrr7W
jV2fawty9X7/RgefEOTq8/T/OJUV5Oqr53aVTyZy9dUEufo5OouzJwhy9Wst
nYdlCnL1LY3HPhklyNWXG/J+o60gVx+8dne1toJc/TH13Y8S5Orzo9bL1ghy
9brq+9oqyNVXm/jkyXtBrv76w4On9gly9eNPJ+v3FuTq+y33qHdVkKs///p4
NR8iV68S5OpnuHvdyxXk6seP8VkWQeTq2wpy9cqg+426CXL1Fmmt11wU5Opv
3/8y+a4gV1/esNfqVYJc/d5qw1/oCXL1kVPP/uooyNWr/hr2Wk+Qq986Z2mN
YEGuPidcOTNckKt/USHQYpogV29xtP/W94Jc/aad/QaeE+Tqqw//kRFE5Oqn
C3L15c3jch0FufrTMbYV7why9TVObgjNI3L1qwS5+gnq5+YiQa7e9dvXsM5E
rl4lyNWvavq4ep4gV1943JILcvWF70cdFOTq688avPCoIFevcltn/VSQq48u
/Pu3glz9vMUnPOwFufrxDZqe0Cdy9UaCXH2S552XaYJc/ev0Dxd3CnL1X1pE
OXsJcvX7Wt2SVRfk6rc+aLezuiBXP7eFe80tglx9YW7/iyBX/9NYr0sdQa4+
ot324GmCXH2Pk9YBroJcvZXaDw8EufqyHe0zWwhy9ZVGPbOtLsjVX521+9oA
IlevInL1KkGufmPa7ODdglx9y8kz7XUFufrCvlKUqw9ZYXc3XpCrZ+OUzNWv
PfL49SpBrn7+2LvXqFz9CkGufv7XtBdmglz9wYMjXf4IcvWfZzU0tSRy9S2I
XH1LQa6+lXvNUDtBrv5VxVYzuxG5+s6CXL2zfIRXBUGuvlG/d59bCXL1uuqn
8SFBrv5lwLDqQYJcfeH7XQ+JXP0dQa7+ya3KHX4JcvWPDow9nSnI1T822ulG
5epVglx9od9CiVy9SpCrL3y/9K4gV9+pUs+f+wW5+jk5busMBbn6PvGn7esK
cvUVV/U61YHI1YcIcvXPdjX/LMrV/6mwfG6+IFdfqXuPQ+mCXP07q1nbFhG5
+kuCXP2b7zFL9why9Y101ywaKcjVnx+z4PdeQa7+xtnQL6aCXL1ng1EdRLn6
LeaK1HxBrr7VSr3f7YlcveGnLGmmW+EHjTwHO0V97j1xOFWad3hXSsIMnoNt
qN4vehvEStsD2mwMaMNzsIeijauHd4uUJqmfJ2bp92Ddq/f8uWNQ2FdJp/Ot
N7v1Pfk55/xH/121v0r7msi33vtwD9br1CejMvUHB0ltG1b22LHJDdbr7eXI
EXU3+UvH+yUe6Zf4Av/dOZtJtpmS/b4j+2vlecJ6JSpn3v5qEiSd6OwaNrku
z4t+OZLxzWJBknRtTP6lMfkv4PrfqLveI1djpRHz1tdvae8J62g/3aizX/lA
6XBWjnvFcC+4r9TJ1Zdmu0dKS1+ceLxyshus45A/lp7tG72TEn89GXFjxQu4
X+eWww538lRI/zob5kR5e8L6OtTclznzwSfpiZdiWvaI+7C+Y+9c+isk8oMU
9Pjhxl65brCOetmO/wR6vJZurLpy1eu9F8zb4oamHZs0+yaFbv/YZKTKk+8D
s+vEj+7vL/2+VHjDPFd529W1QYftOZJLB6Nb6VEvYN7unRr/6Gjdr5LsmN7A
5xtea73vXV+ZJtUojGHa8FyltaXlP8vWJ0p71bOmOvcC5q1xnUp79j4KkcYV
5gtC/TiPUD9ft2p0tPTMPV8R7PeC79ur8stMahAsvfSx+sdG9znMw8IZB2qc
LftZCjD8sGqf+jrZfRlYrUsKnfhZqnjkWG2rYTz3uL/macNFvSKkrM17QqdX
5PnGmcPbXr705LvUqv7Mof068/zhzwq+6VW+f5N6HewWlmnOc4Njlt+OHqMI
lfRtn9e17f8F5zGC1zf4JZ2IadYnfyLPyVz8q8eucXXV85k97Fz2MJ6TcYo2
Hu22PUM65jO0tX+fz+Cf1+of+9ZLk16oXdK8Is/JpJy2/zAz9P9VduZxNaZt
HK/JvNmGjCVLDWIY24hITcQkimyhBjPzVrbxiuxjFFmyzEwY5WMsY98j+6CR
ehiMskRJQtJ62rfTdtp4z8V5rvvKuZ4/5t/rc30euZ/7nPN7vs99/X550hHj
g53OWD3F+xuz5+Lx85FZUvTIdfMPdYwX73NDpljMic2Uxmj/1QNLxbmRLJut
T/xGvZXM0mcecbQX52RamUcM+shGJT00dfPpE1jvPMmM9mEVUjx8rFeJ8yTf
uLldNs9VS8GwmmbiXM1Q7fezyjVTiq7ynWq0ILHe+R/DycXS3oWqL/e1icfP
RXGGt5/D7HSp3D/5mJutOH9y2XfKkIp+hVKvbqMjbPqJ8zaJIwM9rc0zpL6W
P5nWTXyK+yE1efflzuba6/j4eGwdEo+fi9mBKZa2zdKkhK+eTEqZnYjrtjHy
YN/eGTmSdeol45b24hzOfe1+apaSJq2G77ETSfRz0Tg4/K00oc2uhOWLxLkU
I/cwu8+ssiUDl58PeUYm0XPCjz4aoZGMv4Uv0CSqf4J22JdJ/zQN1v7iPa/3
3sfQIUvqof1U/DxPnK9ovbBRWHubYslj6qpi75niXMoDra7+riZTmj7j9GjL
jYm4DpfDvYzaVmdIc1sBGRHnTHp6WJ9MOZMhBYy63+j0UXEuIia0vTS6Q65U
PfSO9klUnHPYHR79qmGnHCl48/kuB3aK8wnOF254NIzOkvY5tfdZcVScK3CN
nGcSNk8lNYXvgU7iPZrsYzZWvc28rlc65cl7m2yplSbA123XdLo+rmOLKiWX
9C4ts/el4f6B8y3DS8qkVO0uaWEk3ou1dGjY+ftppVKs0YRtCbvT8P5+Ny/9
RLuXxdKsLjevPG6ehp+Li+PCT/cOLpKOw9feNX0fJFVgz6u/3xHvZSzLZ668
mlon5Wp/XbZHZtC/s4VTmyopc2VE6NpB4r3MI//O7s8MKiS/oUVxp/aK9y/m
QVuiNrqXSd77cnostBLvU6LHB87Pu1UiDYWfr0n6vjprPr89wdJD8PygORvG
ru79VgrQPhb0maKi3ydnnQdWS9mxTftlHxXvy67kbUu6bVkotdLuKkdrwefV
EZXJB8aUS61iJ0R7hon3X25bzJZFLciX1nkfv7fWPhOv08vj5ZLYp0WSi0tR
5IWkTNxvRx0W+I1qVySdnZs7vdo1E68z3aJHTbhxoW4/6PsVvN8Pgp/I/hXv
90MefU4JWDm3Trcfcuv57QS8rdLtB8FJXIK7jko00ej2Qy6u89d9rpSY2Jbr
9kOumIs/F73JrXmZbj/oz8W/3w/59HzsO/+E9/shn66/z38WvdHtB/Gcfq+B
74lZ6mrdfhDP46b7G48PKNPo9oN4vp4cscnC8pMK3X7Qn7N+vx/E8508j/9+
P4jnO5iPuLv4rW4/CH4S3aD2jH2rUt1+EM9rjg07r98XX6XbD4KHZAy9fr+w
jVq3HwrwOlnDDjw2TSzV7YcC3A9XP2o78IZXqW4/FOB1rB4mDjNOULN6cjWj
Jz/+xT1xMKMn78FcJ6MnK+Ivmw1m9GQTO3/z1YyenJfT1bgNoyetDs9dVr1K
X09qdezWiQp6MobRk/nRmoKJjJ4cvDXdZiOjJ2O3etw9x+hJz/s3HxYyevKf
nB96NFTQkwMU9OR8BT15g9GTP2t/N08zetLPU7twCnpyNKMnYd06M3pyWNyE
rF8YPfnq2P7Npoye1Op5g2mMnsy4leu1g9GT42qO1Bkq6MmxjJ68uvR07HpG
T07PCdlwmdGTe88V/DWe0ZN79ox4eJjRkyeDij3rkvT15CfJ/s6TGT0JcyVL
GD25y7e/vwujJ4HnXGT05JHludPsGT3pEPqZuwejJ3cauXQPYfTkBe3v5nRG
TwZr7++PjJ7skD/LoHyQvp6Ev9+U0ZPwPs6M0ZPWfXeZ5ivoyepJ+nry8erW
hfaMnvx+SOhnKkZPftpp90srRk++PNv3rimjJ+P21v5uw+jJSLeG5zoo6MmG
jJ6E74FARk9+bbG1UVtGT8J7TyNGT8L52l2Mntzy9FYupydvVCb7mTJ6svWc
1XEzGT3Z0DDnUlNGT8L/64WCnpzA6MkjS2JsjRk9ufbXmBeGjJ708Tp24jij
J+Xzex/qyR3a38HGjJ4Efu7M6MnW2fuu2SvoycmMnrR89EbVntGTjtMbqywV
9KSG0ZOfT/Na8iejJ0HfOjJ6MiA5xDuW0ZOLG4U1WM/oyaCwLoXZCnpSw+jJ
RTt9+69j9CR8nwxl9KR1wuGxEqMnnawtOhxS0JORCnryEaMn6656th/N6Mk5
mf+0vqSgJzWMnpTf236oJ4E/L2f0JPi0r2H05MHG4zc8Y/Tkitvmi5ozetL2
p0nnXBX0pIbRk/J7ww/1pJ12nxszehLmx70YPdl2YOCeDYyeNOvW6Ug/BT2p
YfSk/B7qQz0Jn6MoRk82ql6vGsroyT2mD5rsZ/TkHud7/mpGT24KT8/n9KTX
sW+3RDJ68m749RcNEuRzJkK/OT5PGXuu/2OsU58HR6MsrNM58VcDUrBOv1dV
s19gnc6J56kTsE5zEnfNisc6zcWbFBmHdfm+rI882LfMOVZXv4F/p3Z/plbc
KcZ+mm9o4heD/TTXLypJ/L9ovuGmygfYT/9fC3elYz/NN7xw/T72U58l5+6p
2E/zDTcH3cN+mg/Y5WIy9tPcw5UHo7Gf+pTWOSVhP81DHHI3Cvup78GMSeK+
0DxEC0PRT/PpfG4n6upR9fL4IlLLsJ/mD65d8Qz7aU7fj2kF2E9zCV/OT8B+
mt+XfjIb+3Hu/sLXoxpse4r9NMfN9ngm9tO8wvjoeOyneX/9VqRjP80xNOku
+mm+m2dtKvbTnLuu259gP813uxaTgv0097C8heiX19nB87d2zuGvsU5zAH37
J2Od5gDOLUnCOs1f8898iXWa69ek7gXWac7aVDtRp3lqc7c8xzrN71utkfeD
0LeQu1Qanol1Ov94fGkN1im/MsEc9vh6c1Uly4qxTnOmshoXYJ3mTLV3ycU6
zRWKmJuNdZontT1Lpasn1ss/0ox6g/00N+r67Qzsp7lIXxWWYz+db31Vm479
1A/5xHA19sv3a3GF8dHuU0Q/zY9w7y7WgeZDbYhKw346BzpwrFgfmht1yFX0
y+vjXxM/ufewPOyneVJnc1Kxn+YxHTqQg/00T6rVNtFP833eTJHXP4m+Vzp/
8sRb7Kf5TRfGZWE/zTn6I7sS+2muk8VyFfZT/7EB5aXYT/OAvrmTif3yOu8K
+GPVYTz3mFgv7+l6L9Evr7Pvzesplp8WYz/NgYoIzcB+mo9TVFiA/TQnyGWI
6Kc5OE/65WM/zY0ySk7HfpqD4xKfi3Wao+TwVw7W6bznqSfivtD8muZtRJ3m
IoUtEfeFztNZFIj1p3NzQ8h9oXOa5i3lelq9+RqrNUVY/5B7y3WS0/Hx819r
sE70dpdNrSuxTnI6Rv5vfRnWaR5HzBU11knOwrzzfiVYp7kbfmuLsU5zNAaN
kOfa9Hm43E/nehY7FWCdzu+4LM/H69C8CZMhdVinczFxmzV4HZqjsfR2HvbT
HIqQl+XYT/M1ki3zsE5zNFLO5+J1aD6FTUUp1mm+gN1psZ40d+P6cHEdmk8R
erwE6zRfoOBlMdbldbaelDlMNUiu63N+uZ/mTSz9oQj7aZ6m7+s32E9zBPZu
LcR+sq9mzK6swn6aQ9HraQH2E199I5duldhP52jGDRb9NK+hee9y7Kf5AjOv
5mM/8c8PGxAn1p/mVqwbKfqJf36Kwy011ol/fqpLcQnWyVyJ45SRok7yFzKc
IsT6U9/7B2NEneYvfPlCrD/1t+85WNSpj/2ri2L9aZ5CqL1cF8+JJt+a/dXb
uAzr/H7I1Xs/IteJv7fZ0VO1WCf+3p+82V+FdeLj/Xq5fyXWqd/CqyYVWKfn
ig2zxd9J/bf9XOX7qP/eRO6nPtuhkhrrxE97cZCzGq/z4XsWuU7P056uqMPr
EP/tDgbpJdhP/atNY6uxn/hy3/X+rQTr1H/bxklch/pa++7TYJ36Es/+TKwn
9esuaSSuQ32tV6nLsU59if0bizr1r04aL6+//vsguZ/6VHe6Vor9H74nkvvr
+Q8PFf3Uz7m/nein/tXJz9TYT58TF9TUYD/1tfZaJ/qJz3N80ZUq7Ke+xP+z
Ef3Ud8Kwt1h/6ncdVVWC/cR3176gsgLr9HxgUCNRJz7PLnNGl2Od+jbXnhfr
T/xyT5+1EnXi2xy3PlqsJ/HF9e2+WNSp/+3ObqJO/G99bqn0+cajWuP8IAW+
0ZPhGzCnf/9f8A3wq0xi+Ab4VW5j+Ab4E7oyfKMsf8GXrxm+oX3uditg+Ab4
TOb76vMN8Fe8x/AN8Jl0V+Ab8xi+AT6TvzF8IzBOE+XI8A3wmQxg+MY7n0aG
b4D/5E8M33jnE8jwDfClbKXANyYxfAN8KQsM9PkG+AQuYPgG8LpLDN8AH8gf
Gb4BHGwpwzfAHzKe4Rsw//KI4xvgK8jwDfAx+4LhGzC3G8fwDfAx6MnwDfCT
rO6mzzfAZ8+D4RvgN2jA8A3w2bvJ8A3wn3zN8I2pJ1652TJ8450fI8M3wI/R
m+Eb4IO3kOEb4K9YV6vPN8DvbjjDN8DXbhrDN8BHcSXDN+ZqgrcV8nxjxmGG
b4APmBLfyGP4Bvh9pTB8A/y+TBi+AXrjHMM3wNcrkOEbwGFKGL4B/l3nGL4B
c68DFfhGCsM34HzySQW+0ZXhG819Kpq4MnwDfLoCFfhGL4ZvgH/XHoZvwO9d
R4ZvgK8Xxze+sD2/NJjhG+Dr1Y7hG+CzVM3wDfCVOszwDfDROsnwDfCb4vgG
+Gt1ZfgGfD9bM3wDfJk8GL4BfkSHGL4BvlsSwzfg/vZm+Ab4cV1g+Ab4FOUx
fAP8mpwYvgF+RAkM3wD/rrpX+nwD/IjGMXwD/KxGKPCNEIZvgI9QC4ZvgD/V
nwp8o6MC3xiswDeaKfANG4ZvyO9h5Tr1S3nC8A34fG1k+Ab4pcxh+Ab4otxj
+Ab4XYQwfAP8Tzi+AX4mwxT4hkaBb8xW4Bv2DN+A88/NFPhGDMM3wM9kFcM3
wA/kMMM3YO7jOcM3wM/kOcM3wCfEiuEb4PPwFcM3wP+E4xvgE3KK4Rvg85DN
8I3tHx8vz1TgGxqGb4A/wEKebxisZPjGOz8Hnm+k/5fhG6Ar+jN8A/wNnBX4
xkSGb4BvBsc3wOdhKsM3wMegD8M3wD9kMcM3wMfAjuEb4GOgwDduuzN8A3ww
RjF8A/wHHjF8A3wwBjB8A3wG+jB8A/wEOL4BvhanGL4Bc8dfKPANDcM35Pf1
cp3qzCMM3wgac3B5NcM3YJ56GcM3YE726b/gGzAHvUKBb2gYvgHzziEM34C5
5l8ZviG/95frlG+EMHwD5qANGb4Bc8StGL4B89ELGb4Bc9B2DN+A+WI/hm/A
fOgMhm/A3LSa4RswX8zxDZgP5fjGuzliBb6hYfgGzAt3ZPiGfG5B7q83B8rw
DXg+smL4BswRJzJ8A+YivRm+AfPFHN94N2/L8A2YD/Vm+AbMPxowfAPmjv9m
+AbMP5Yo8I3tDN+Aedt5DN+A+dkqhm/A3OIZhm/A/Owahm/A79TnDN+AOcQd
DN+Aedi/VWrp/xpAZ7M=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
NvV5I2P4H2lWdyw=
          "]], Polygon3DBox[CompressedData["
1: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
W0i6CneTbFW4/udq7zNsPGwrybYq20YyBX9AdWYKPyvpUvj37iu8qaSr8Hlx
Hrwv6Sy8NWeo2urPs9W/Trq2lLGQtBWezBoTPljSUb//fF37TPhzSTvhs+K8
2ltyGfZy8lqZpvtuVXvv6P/u0neTLBA+VOUrs5ezxoTbxPvfg/Ut/DZ1WKuS
t4Svzm1rYXNdKXyH+rC78G7s8XWXf42ty54nvF3hd4ENvxP2ia59obIvJZcI
fyLZS2V7ShYLX64684Xn0f+oP091X5V0FL5IslD4A8mFwqdK/iv8s+R8bNbc
74J30la4u+QP4f9JrmFO1m17YoMOr7v+XOGXOVOjHF9na8ldwrvSB/Wlk2QX
4c+TzyL2lJeEvypty2PTfyq8s9qYKfysZCfmY7T/iqSVcEr2jVoKt2vYnsX2
xQY+KLe/MFG4hfAFDdun2KL74ldI3yR3+QTJxsLLcx4HPl/lW+S2lbGZzxDe
PPfznmFPi/7g+02WbJ/bf3gws+3dVvcvp/ZmSd9LeoeG/cuHo+/tG/59jD3v
YLfc83Fr1oJkkvBDufGWNdu32LvgLThD6GNyfebuzWqvfewfU9n7Gt5PWD+P
Sh/U8Hpi7h0a17Jk/2VP5oLKz8ntezMHzhVuSh5/+nZhw/sDa4U186rwDsnz
4SrhHg3398Aop//b5h4rxnAr4TzZn8K36KT6pfQnpLdmrjbs/7+LbcN+L3yy
5C3hBVEHnfrTJSfk9vdfzPzOjhVeIVnH9++i9o7GxtbYnKtrD5f2+a+WvnFm
LmA36X2kb8p5IH33hvd19vfTKtkP0t+SfrL0+0uPz3uZ+wg/Ueh5jwsfIXyJ
6jaS5x++VGfGP/Yz9sj2wmtjw8fa6qbylZLnMmVXRH30ubHeWI/Ufy/eB+uV
vYUz4GLhdXX/h5w1rE3dv34y/8FYXCp9s+T9g73laukbJ69n1mZX6Ssn7wfs
HVdJXyd5LtL2lbGft9S73F7yRG57hPPyAeEbGz5/ed/4YH/F/oXvDwdwt/Bd
pccSX/eQhvkNzl7O4B+FB6l8e+GJwgeqfGJpW3oWdoH0AaX3D/aWvaX/W/oe
0u+Rvo/0m0vbF9gO+0sfKH1b6fdyTku/o7Ttgu94gPQhpfdX+raX9OfivKdP
8C23qXxH5pfwoSofV9pfnyL9IJ4X/eeeQXWfn+sKryMZUPf5/4/M1zhP4a/Y
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
h/DIsA9uDn9oq2T7oV/4q3yrAH9BriD5hrdX3p+/zx1v4VsH+IU7c+dn8u0F
/jy5iOT0bpvsL5ALSA7mkPC/yTUkH3GX5HxxvqXgG4XDhPdI5irWi/6xR+8R
+9tFyf7VXsH3XFuZHyEXnBzh3pX9u7Njja+V7E8+nPsZPAt/c3acbyMqfw+z
Qc0xNdrH3zsi+I1+lf07crc/kT6gsn9I3jc5jjdWnuPMdfiDU5L9z2NjDa+S
zAccn5vzgfvBHyPXnBzLGyrzTeTevyK9V+Xz+rHc+x+58sxp5jbvjO8j4b/I
zV6KDViZ/yGPjHyyPpX9O3K9ydm8vvL3Iqz1ppg/HZN9ZTgVvq9kfyd2iL0/
IJkf41secvT53gcOEC4Qfvbpypz3mOBc14h8OXhJ+Ml1pO+dPFcYU74vgn85
qbD/SywbjhWulZjqjMr+C7kn+AhjK58XxMqJn/dL/n4FbmfrmB/7J3MH7Dl8
r8n3ZPhmrWJ+830LZ2XzOA/h5OHm+aZttcgnhDsl5/OpyhwCXAKc0klh/xC7
JcY5pnJMgdgCOXnPVOZ04XbhbDdssr1DrJV47o3J/gW5snBIt1b2x8iVISdg
XGX+jNzab7DxK3/vD9fUMuYPfBm5719ikwcfRy49fOWgyvY5ucdLpG+azH+S
G0/+/c2V7YMluePFfKvF982cVY043zlP+TaJnHm+34O/I894ke7fMPn7PfYK
9gy+T4YvJFef74E2ivOfXBr8yVGV/YPewY8Nlv5/KzXWIw==
          "]], Polygon3DBox[CompressedData["
1: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

          "]]}],
       Lighting->"Neutral"]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QiRsXA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmwe0FEUThR+7KzPr9OzDnDCgSFAQREBFUURFEETBgCgqJsCEOeecc0Ix
62/OOeeEOYsZFRNKEkWC4H8/bp3z6ryq7Z6Znpnurlu3atrsdfDQsZWmpqal
a01N+mv6o2VT0076YUfJDOkpa2o6T/r5klL69JZu20EyTfpfksOkHy75W/of
RVPTN9IvUd/lmpuaprZ03+0luX67Su0nSe8vvYXaN9P//8m+XdJX+pGSa6SP
kxwh/Vb1v0z6btJz9b9N9hWyu8qe3/D4DpF9sKQu/VS17ym9n+Qo6YNytVfV
LhmQ+/yPqO1R2qXvqN8OV9thku2ln6dj9lPb2mqbp/PfVXg89G3W9XdNTU0j
1PdoyVjph+iYW6Tfyjmkr6t+x6n/sTHGu3X8eOnHSW+l45fU/71l7yVplj5e
v+1Vb2rqqYffXdfrqd8OVNsBkvUy9z+x4me2VOb2s6SfLVlf+hWFr9dd+gId
31L/D634mfC+Lix8PvouVPv1hY89UHapax9d+H3P1HuaovbjZA+X/Q/vUvbZ
skfJXlX9Z9Oue3xY9/qI5ITcz3uk2hdT+28Nv++x8T6YHxPU/oz0M9S+lK73
sOxbZJ8jexnZ9+j/EjrXkpJ7pW+oc54h/UxJL+lnZ+5/s+SszPaz0p+Lc1wg
+Ur6l5I7pB+ld3Ksjt1dcqj0i/Tb1xX3uVD6/br+DdJP4dnq+ofqGleo75WS
w6UfE/e/iWQf6Zer31zp8yRXSN9Xv20qfRfJftL31TXG6NieOnarZl9vNs9P
crH08zOvh6/DvrjwWlle+iw9r2dkPyB7X9mL6/hLZB8hu7Xsv9X+r57hCNm7
SuZLP5NrSl9J7X+p/YTC7QvUNk32ZbKPlt2Bccs+V/YY2e1lz5E9Sv+vrHgN
cc0DMs8H5tQY6c+p/0PSD5KeNJ6tMq/Fa2LNnqL2PaRXpc/Q+U7VfZ+v+z9P
cpL0DXknsV+wniuZ++8uaSH98sJrA316w89759g7fm/4esx15vwWMT7e/S0x
Zy8qPL9bSZ+p/hvH/nQuc176jYWvv6X0Jo1/vOwzZI+UXZe9Zubnc5SkrfSd
9P6Ga+xHSPaTfozu4Xbpd0jOkL4Ma0h9L4p3xv3+r+o+p0m/U+e/Wm191Paf
xjNGdl/2K8lY6acXXu+s3T8b3u94Nox5E+mvq/1J1jfrQON7UfbDsg+T3Wj2
fsxaPjTW6C6Z98NLJcOlr6K9YzXtHatKVpJeK3Ut6WtIP1vHz9c91WXP1VhP
lL2i2jvJXlntZzX7+F6yN+Ic0leo+1yrSLaRvrqkTS2uIb1VaXt56efo+F90
/pl6Fl+wt8rO1L6M2tdW+7nNXs/782wlG0jvoN97q30TyVrSO0q6SO8ax0zM
fb4Zks+l/6fzN9T2jfSjdL4tuQ/2Hsnx0n9U+1TpH0o/TO2b6/+hVe/520if
rPZp0j9mn1f797J/l/0m/WS/m9ueInlH+ujk8bL39Ff7FNl/yf5O9tGy95E9
WnZ32f1kr6v/p8g+VdJN+t5qHxX6lmr/Nvfxs6q+h+Xqfj9LStpIb6Hn1Sx9
Celnqv9fOn6h+raUfYrs85hjsu+SXCD9ErVfK/1Y6buq/WT9v0b2uNiPb1L7
PdKvkL672i+TfZ3s82XvJntPziH7Usne0o9X+2nSd5G+XZyPvf1RySnSj0u+
t52kb6v2Q5L95TDZ28g+V/8fl/1EXONs9twY6wi1nyH7glhLu8g+Pff4r4nz
7yAZX/UYucbWkpOqfsdbSX8797v5TfKW9Fk63wLpFT2fk3S+qv4nPb9C0kJ6
k2Q55mfNffZX/4PUvw/nVv/mup83c6qkr55/x9BPb/b1arIXq3k+/KPjW/C+
1H6G2g9L3it2Vdtg2a3qbgc8NaQvTB7PYtJPU/sH6pfJzmueoyer/Wwdv4n0
AWrfNPf4DozfJmX2hfjEb9izuD7zV/pa6v8pflt2Q/KZ9JXVvgrzU3ontX8V
/rSVpFnnW6j9ZLr2itf1+5pq/x9+IPwT/pbrdVLfzpLv8eGSLtK7Sv6Qfnv4
s7/xYeznut6siq+9NvNV5/+Z/ZmxyC7UvpiO/UX2OjFe+v8p+Uj60mpfSu2T
pXfm+WS+vybJ+9KXVfuyrH/p66r9Z/1fVfZqcc6JmY9fMsZLO9erSX6UfriO
Pyrm9hAd30Z2W9n/qK2b7BVkrxTX6iB7GdnLxL12kd1Z9nqy58heT3aSncme
Lrsr+xvrU/fyhux2sv/T/c+Q/Zbs9rIvV/v16n+xrr9H4BueNc/wTunT1H+S
9Kukr8D8TX4fD7CXy64lY40nZK8me676/yH7adltZM9Re0vNpR91/mNl/6P2
KWp/mOck+1GecdX3xDn+yo3t2ZNnS/9BMofnwT1Ln8H1qm47rtnrb1ysz4HS
5zJO6cvHM2lW/8Wlz5feXf3nJc/tv9X3BNl/yp6v9nnsLbJn6f/q+KPoM1Pj
/VHjvU7Hr6T233L7G/zLFOlTc9/fYmGPz9z/B8m10qcmj38aWE3H35x5/v0k
uUn6Q5mfx2+S+8NmbjBHeEaTY31XJStqjb6a+X0ukLySeTxcmz4/S/9X452q
tufVtoautxj3J/sZ2avLvjYZD4B9hss+KRm7jpK9I/4itw2m3Uv6JmrvK30N
6X3wv/q/KfuTZFXpGyXbK9O32fgPrHJ0YLw11L5m9N1U7V9ofO9UjNneAltl
jjeulRwj/QT1Px08rP5D2b/UZ5uKMeFp0t+TvMLclDwWxz8m/fGKY5bH9dtd
0l+VPFV4vFy/bYwRfAeeOy4w4fmFY5ftwOfSO+ETuXfJ2uyFmbEa+Id4bR39
tk/VfTpLb5d5bKMla7Dn5T52T0k/fHjg0asDI3UKPHBSHH+wrrl1xRj5ROl9
dP+bq21NtW2m+2+n/x1ld4jfiF/Bn8Mks6QfXxjbz5U+teF4l1gGDEY8zPhO
k356YGrGA14jpiRefbtwfEKssnSz8dq9su+rOIbdVXJ9xTHIiLA5F+fcmTUv
f9RNc289zc3zw1+znx0p2QP/XhiLbsNerParZZ/C85ZdZT4WPh/nzpqNj2+r
OMYGb95b+PpcazHWe+Z3f1ec82a1Xyx9COum2fEC8cmDkv1YT4XxOLFC0Wy8
T+x+R2DukzPf2/WBabHBt09VHHOxHm7UvdwUa4R47RjpB4AF8Bc6/wTWruRl
6R9KXpd+j+TZwngIfHGh5Jzc4+d5gNEHSN8889wYF/HDtpmfz8mSQdFObHFC
YHbaWSvj4xmCR8A7YLqh0p8s/P7A2i0jfgB7g8GJsYj3iaWIqYjBr0uOHR7R
sfup/+P6/4rsV9mPpe+ZPN9/11zaQu3P6rfXZb8heU768uyX0ttIlpN+s/rf
G20Hqv/tsh+U/RpzXfbzsifIfgkcIfvGZKzItfaHb0jGCoXsXrJfzX38A5JX
pL+o9rdCH6v2Z5LH84zsA8CfyVhxnOyRsq/KjS/vjd+In4+rOuY+OHf8BN4j
JiQ+OiKZKxktfXsdPxgMFOsV/3JQMl7fVvpAtfeQvSH4h71Q9qmyz6maW9lZ
9jHJx28he1Cz+Qj81dWS+3PzOcwN5ggYFX6G48FcY6VfnczXoO8E/5E8fmL/
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
vQq169SPUkcKH83afSqu/3/NEk4y
          "]], Polygon3DBox[CompressedData["
1:eJwt13mU1lUdx/EfDMvALIAswzIDDKuswx4KiNTJI+qxBEutWKTMLeXUcaEA
lVWg2GXYZAAhWUVLQCQDkWOgEhaiFFppWVJWspjs0Ot7nvvH+4/P+3x/997f
8tzvfcrHjB32YPUsy7aiJp4uyLJpxPdqZ9ndeE4uLsqyshpZ1qROljVCodwE
V3J15NroXJxlzbguXGO5Ibok15m7Tr4ebeQhGM59X74Lg+X15qk07wPm/CFe
LMitZTrXW+6FP6hbyI3jusrdsER+DCO4y7XcADddnouHuNPcF9jv2kXceK6/
msGokp/BPO4b8jfxrLwWC7k75THYJF8ozLICaz6Sn2XvoY17285vVHeLmpvx
J3Osirm5UrkZfse1RR/XjnSvo9DbteeNV5d711iHUc51UNefu1HNULSTz6ir
zb2t5iBaqevBf4W7Rs1A9OBacz252+U70Ks4N29fbrA8CGUxPm7gbpWHx3uT
d1rzlnS/I/Eh1wjt1fVS0wdN5a64Nrke6G6OSdY3My/LvmxtQ1DMjeemcP3k
vijg9prjJXNMMP54/N1Ym+MdJzcRu+UD2MXNkmfiE3X7uZ3cZHkS/sH91BwL
zXG/8e/FNHk2nuLGyg9ghvy8a1ema6fgdXlq1KobruYW/Fiug+rcWjVr8B9z
TOZmcUPVXI967qMul8dtVLMB/1X3FLeSG6NmNBqqq+RWc/fJ96ARN4er5B6V
H8bP5EYB96KxXsBnxpvATeX6q/kSCl27hzvA7ZN/g93yTzCZ6yP3Rl11a7jn
uN3yqyjjFnAruG/Jt6MBN4tbwN0t34Up8pOYy31bvgMT5QYo5PLkWvHdy83Q
nMvkamgt78Bebpu8FRvlVdjIvSzvRKl5l3JruUfkh9CYK+FKuM/d///QQn4M
07mBagagSF0515ZrEWOhl9wOHbjyWBv6y1fhmlTXPNbt2kHckFTXGrW5edxy
bpj8ddTniuNb4F6zjj2xntjr0vp2y6/gJLfBd7TMd3WTfCM+4JbFt8V1kTvj
vfg20p5TU66BA2kfmsAVyHXxW25N2nNiX+uEd7mfc4u4e+X74vuQf4k13Fj5
QfytKPeNr0p79nfxV24O9yPulL3vJPZxi7lJXCs1LXGoKPfsm7q3vfKr+Lwo
tyfOV9dOLsc7XCX3OFciN8Hb3Mb0+71VHo6/cC9xm9J+Ogx/5pameaPuNqyL
3yRmc43kBjiY6iZzbeU2OMytTvtza7kMv+fqxV5szW/Kb+A0N5Obx43yHkfg
icLc86tM+31f/FFdbf4yVyWvwL+5Aq6Wa7fL23CcK+TyuV3yr3Eqeg9XxY00
/ndwhe9lM/cyt1Cej6ZcLe6iOZa5bik+dW1N7gK3RF6Mf3HzrO9h7qz3cwZv
cPO5R7jz8jm8ya3gZnADXHc1jnILUh+MnncJb3FbufXcUDXX4X1uD7eNGyc/
io+55anHV8jdcYQrQgt7e3H0d+SnZxr7wTz3tQDN3Ns93P3pdzkIY+XFaa9b
Ka9GVWFuT6xKz2URlsjL0m9/k/w81sVvEl/lOslXIt8cm2I/4ebKs1FSnNvb
Y79fJT+DFtzqtNc9LS/D8tgL0JFrK7fDwOif8Rt2b+fkM7jItU+9cbR7vTN6
nPEGcl9LfXoE+skr0x4Wz2BO3Itcnvr5ADVXoUV6fs1Trx2CnrGvpTNS9Olr
0VLekvrRaM99FD7irsZNqXffhgr5XOxD3DvmPBR7lvGq8/XT+aoU9VKf7sBV
ky+r66SuIK2lbrxH1Ix1YBDXIc4V6KquTnouFbHemJcr5Sq4jnJ7NJCrpXk/
Mv6H8VzTWhpwx+RP0J67ZM1F3PvyUbTlasQauZPycZxVsxOvp76wI74F+RXs
T31rF7bLx3AyLzfeB/gsftPYwu2RX0PLdB8l5rgkX0AmN0znl4vy+fi21NXn
2nAnYix04Lpwg7nu8UzQLXo814yrJddAntwy3rt5P43fLi7GM+ZKuXxj1Yln
IP8i7cVT1UzDvoJcj+qYemh15JmjguubeuhFddW4xlwT7lfyDpwwxzjuCa6H
uoqYJ54pd94clWoW4Z9FuXNJnF+OxJ6LhvHszP1x2utW4lzs1/x6dTOMNT32
rMLcOWdm6skTMTf6bOqrl113CdXN+2zcH7c5+jvWyi/Eu0u//RXRb9MZZEv6
rVaFL8z1/TXcOnlD/IblsoArjN4b7yieEzpzxdHzUSPeEdeTOx7nslhPnEW5
XunMcAKXuVbpDBzfczc0ljupq1B3LM6cuFCU6/Gxt5+Sv0Cp3CqdLcKdRGbe
K9S2M95Z6ziNjtzl9I3H/54C1Ir/Ltx21z6pZhqaxLVcPe5o9B2cj+8l/T+6
wXU3o6PcT91AdSVxHWoW585cRdyh6Hc4q65pOnO9Je+Pdafvryy988PxfrnH
07kpzp0/iHcs109nuINx1sAZdfmpD8Z4B1AU51qc5RbI83FM3f8B+MOrhw==

          "]]}],
       Lighting->"Neutral"]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0kkvnWEYgOHPrIZjnmelOMdUNfwB3ZhiiggNYlViCJGKc+xZdFVhYdEF
6yb8AMQWidjpHyCxZddFXRLJd+d6nt37vvlq5ldHV+KCINjTm/FKUKK+fwiC
JCZrwZzCRaZyib4gTSuGdK4yg5laM4e4zixmK0cb9lzm6Yc5n5ssYKG2zEWM
spgxlrBU2+YyduvCAUf4zCWGHHSHRzrTjP2ev/jMPwy5YJN69c8+y3aXi7Kf
+zzRtQ7tD7xlnEd5Yjl7NOuy3ezSjLmT3/iF0+zgZ02Z2znJNrZqwtzCZkU0
bg9zjE1s1Ii5gcP8xHoNmes4yI8cYC1r1GeuZpUqVaF43Tnzozv85g0XeMoD
xdRhn+N/b/GVVwwzSy9v/4T9L+d4zgiPuatlvXj7UV6yhz9Z/v4fvQKzWTZN

       "],
       VertexColors->None]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klOVFEUgOFjYSKEKI4YkEjCENgAoNJX0belYkNXhfRQEMA4gAWAUxJd
ACRMDAkuQIZOYAESpwYWAHO+GwZ/vnMmL/fd9+qKG+OlRxFxqKZMRLNa9FKF
yohXfK2iuZVzbOM829mhRXMnl9jFbq2Ys1xljj3q1bq9j/3aMA9wk4Mc0pZ5
mNsc4Q5HOaYv5vH0jHS+JxH76Rk84jf+5l/d6speVRbxrDyigfXMcla7+mr/
zp884x9e8FqZxxHVFREvOMAmLjDPkt4/dQauacK8yrdc4Rsuc0l58yLHuMB5
jZg/c05FDdkLHOQsZ9RvnmYfpzipHvMn5viRWX5IZ1GXeYLv0jnSGdScnu3M
taxhGf97xxvvd6lfOrX/SPfBPeZYSKpRVfbn/Ocu79zpCa94ruP03ewH6f9g
ieXMZx7+o3vPxj5U
       "],
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2408, 2407, 2430, 3638, 3417, 2453, 3645, 3424, 2470, 3660, 
       3437, 2491, 2492, 2517, 2518, 2547, 3683, 3450, 2570, 3690, 3457, 2587,
        3705, 3470, 2608, 2609, 2634, 2636, 2664, 3728, 3483, 2687, 3736, 
       3490, 2711, 3751, 3496, 2735, 2736, 2762, 2763, 2792, 3773, 3505, 2815,
        3781, 3512, 2839, 3796, 3518, 2863, 2864, 2890},
       VertexColors->None], 
      Line3DBox[{2409, 2411, 2431, 3639, 3418, 2454, 3647, 3426, 2471, 3662, 
       3439, 2493, 2496, 2519, 2523, 2548, 3684, 3451, 2571, 3692, 3459, 2588,
        3707, 3472, 2610, 2613, 2635, 2641, 2666, 3729, 3484, 2689, 3739, 
       3491, 2713, 3753, 3497, 2738, 2741, 2765, 2768, 2794, 3774, 3506, 2817,
        3784, 3513, 2841, 3798, 3519, 2866, 2869, 2892},
       VertexColors->None], 
      Line3DBox[{2410, 2413, 2433, 3640, 3419, 2455, 3649, 3427, 2472, 3664, 
       3440, 2494, 2499, 2520, 2526, 2549, 3685, 3452, 2572, 3694, 3460, 2589,
        3709, 3473, 2611, 2616, 2637, 2644, 2667, 3730, 3485, 2690, 3740, 
       3492, 2714, 3755, 3498, 2739, 2744, 2766, 2771, 2795, 3775, 3507, 2818,
        3785, 3514, 2842, 3800, 3520, 2867, 2872, 2893},
       VertexColors->None], 
      Line3DBox[{2412, 2416, 2434, 3641, 3420, 2456, 3651, 3429, 2473, 2477, 
       3666, 2495, 2501, 2522, 2529, 2551, 3686, 3453, 2573, 3696, 3462, 2590,
        2594, 3711, 2612, 2619, 2638, 2648, 2668, 3731, 3486, 2691, 3742, 
       3493, 2715, 2719, 3757, 2740, 2746, 2767, 2774, 2796, 3776, 3508, 2819,
        3787, 3515, 2843, 2847, 3802, 2868, 2874, 2894},
       VertexColors->None], 
      Line3DBox[{2414, 2419, 2435, 3642, 3421, 2457, 3653, 3431, 2474, 3668, 
       3442, 2497, 2505, 2524, 2533, 2552, 3687, 3454, 2574, 3698, 3464, 2591,
        3713, 3475, 2614, 2622, 2640, 2651, 2670, 3732, 3487, 2693, 3745, 
       3494, 2717, 3759, 3500, 2743, 2750, 2770, 2778, 2798, 3777, 3509, 2821,
        3790, 3516, 2845, 3804, 3522, 2871, 2878, 2896},
       VertexColors->None], 
      Line3DBox[{2415, 2421, 2437, 2445, 3643, 2458, 2463, 3655, 2475, 2482, 
       3670, 2498, 2507, 2525, 2536, 2553, 2561, 3688, 2575, 2580, 3700, 2592,
        2599, 3715, 2615, 2625, 2642, 2655, 2671, 2678, 3733, 2694, 2701, 
       3746, 2718, 2725, 3761, 2745, 2752, 2772, 2781, 2799, 2806, 3778, 2822,
        2829, 3791, 2846, 2853, 3806, 2873, 2880, 2897},
       VertexColors->None], 
      Line3DBox[{2417, 2424, 2439, 3644, 3422, 2459, 3657, 3435, 2476, 2487, 
       3672, 2500, 2513, 2528, 2542, 2555, 3689, 3455, 2576, 3702, 3468, 2593,
        2604, 3717, 2618, 2630, 2645, 2660, 2673, 3734, 3488, 2696, 3748, 
       3495, 2720, 2729, 3763, 2747, 2756, 2775, 2786, 2801, 3779, 3510, 2824,
        3793, 3517, 2848, 2857, 3808, 2875, 2884, 2899},
       VertexColors->None], 
      Line3DBox[{2418, 2429, 2440, 3637, 3423, 2460, 2469, 3659, 2479, 2490, 
       3674, 2503, 2516, 2531, 2546, 2557, 3682, 3456, 2577, 2586, 3704, 2596,
        2607, 3719, 2620, 2633, 2646, 2663, 2674, 3727, 3489, 2697, 2710, 
       3749, 2721, 2734, 3764, 2748, 2761, 2776, 2791, 2802, 3772, 3511, 2825,
        2838, 3794, 2849, 2862, 3809, 2876, 2889, 2900},
       VertexColors->None], 
      Line3DBox[{2420, 2432, 2442, 3646, 3425, 2461, 3661, 3438, 2480, 3675, 
       3446, 2504, 2521, 2532, 2550, 2558, 3691, 3458, 2578, 3706, 3471, 2597,
        3720, 3479, 2621, 2639, 2649, 2665, 2676, 3735, 2688, 2699, 3750, 
       2712, 2723, 3765, 2737, 2751, 2764, 2779, 2793, 2804, 3780, 2816, 2827,
        3795, 2840, 2851, 3810, 2865, 2879, 2891, 2902},
       VertexColors->None], 
      Line3DBox[{2422, 2436, 2444, 3648, 3428, 2462, 3663, 3441, 2481, 3676, 
       3447, 2506, 2527, 2535, 2554, 2560, 3693, 3461, 2579, 3708, 3474, 2598,
        3721, 3480, 2624, 2643, 2652, 2669, 2679, 3737, 2692, 2702, 3752, 
       2716, 2726, 3766, 2742, 2753, 2769, 2782, 2797, 2807, 3782, 2820, 2830,
        3797, 2844, 2854, 3811, 2870, 2881, 2895, 2904},
       VertexColors->None], 
      Line3DBox[{2423, 2438, 2446, 3650, 3430, 2464, 2478, 3665, 2483, 2502, 
       3677, 2509, 2530, 2538, 2556, 2563, 3695, 3463, 2581, 2595, 3710, 2600,
        2617, 3722, 2626, 2647, 2653, 2672, 2681, 3738, 2695, 2704, 3499, 
       3754, 2727, 3502, 3767, 2754, 2773, 2784, 2800, 2809, 3783, 2823, 2832,
        3521, 3799, 2855, 3524, 3812, 2882, 2898, 2906},
       VertexColors->None], 
      Line3DBox[{2425, 2441, 2448, 3652, 3432, 2465, 3667, 3443, 2485, 3678, 
       3448, 2511, 2534, 2540, 2559, 2565, 3697, 3465, 2582, 3712, 3476, 2602,
        3723, 3481, 2628, 2650, 2656, 2675, 2682, 3741, 2698, 2705, 3756, 
       2722, 2728, 3768, 2749, 2755, 2777, 2785, 2803, 2810, 3786, 2826, 2833,
        3801, 2850, 2856, 3813, 2877, 2883, 2901, 2907},
       VertexColors->None], 
      Line3DBox[{2426, 2443, 2449, 3654, 3433, 2466, 3669, 3444, 2486, 2508, 
       3679, 2512, 2537, 2541, 2562, 2566, 3699, 3466, 2583, 3714, 3477, 2603,
        2623, 3724, 2629, 2654, 2658, 2677, 2683, 3743, 2700, 2706, 3758, 
       2724, 2730, 3503, 3769, 2757, 2780, 2787, 2805, 2811, 3788, 2828, 2834,
        3803, 2852, 2858, 3525, 3814, 2885, 2903, 2908},
       VertexColors->None], 
      Line3DBox[{2427, 2447, 2450, 3656, 3434, 2467, 2484, 3671, 2488, 2510, 
       3680, 2514, 2539, 2543, 2564, 2567, 3701, 3467, 2584, 2601, 3716, 2605,
        2627, 3725, 2631, 2657, 2659, 2680, 2685, 3744, 2703, 2708, 3501, 
       3760, 2732, 3504, 3770, 2759, 2783, 2789, 2808, 2813, 3789, 2831, 2836,
        3523, 3805, 2860, 3526, 3815, 2887, 2905, 2910},
       VertexColors->None], 
      Line3DBox[{2428, 2451, 2452, 3658, 3436, 2468, 3673, 3445, 2489, 3681, 
       3449, 2515, 2544, 2545, 2568, 2569, 3703, 3469, 2585, 3718, 3478, 2606,
        3726, 3482, 2632, 2662, 2661, 2684, 2686, 3747, 2707, 2709, 3762, 
       2731, 2733, 3771, 2758, 2760, 2788, 2790, 2812, 2814, 3792, 2835, 2837,
        3807, 2859, 2861, 3816, 2886, 2888, 2909, 2911},
       VertexColors->None], 
      Line3DBox[{2913, 2912, 2935, 3818, 3527, 2958, 3825, 3534, 2975, 3840, 
       3547, 2996, 2997, 3022, 3023, 3052, 3863, 3560, 3075, 3870, 3567, 3092,
        3885, 3580, 3113, 3114, 3139, 3141, 3169, 3908, 3593, 3192, 3916, 
       3600, 3216, 3931, 3606, 3240, 3241, 3267, 3268, 3297, 3953, 3615, 3320,
        3961, 3622, 3344, 3976, 3628, 3368, 3369, 3395},
       VertexColors->None], 
      Line3DBox[{2914, 2916, 2936, 3819, 3528, 2959, 3827, 3536, 2976, 3842, 
       3549, 2998, 3001, 3024, 3028, 3053, 3864, 3561, 3076, 3872, 3569, 3093,
        3887, 3582, 3115, 3118, 3140, 3146, 3171, 3909, 3594, 3194, 3919, 
       3601, 3218, 3933, 3607, 3243, 3246, 3270, 3273, 3299, 3954, 3616, 3322,
        3964, 3623, 3346, 3978, 3629, 3371, 3374, 3397},
       VertexColors->None], 
      Line3DBox[{2915, 2918, 2938, 3820, 3529, 2960, 3829, 3537, 2977, 3844, 
       3550, 2999, 3004, 3025, 3031, 3054, 3865, 3562, 3077, 3874, 3570, 3094,
        3889, 3583, 3116, 3121, 3142, 3149, 3172, 3910, 3595, 3195, 3920, 
       3602, 3219, 3935, 3608, 3244, 3249, 3271, 3276, 3300, 3955, 3617, 3323,
        3965, 3624, 3347, 3980, 3630, 3372, 3377, 3398},
       VertexColors->None], 
      Line3DBox[{2917, 2921, 2939, 3821, 3530, 2961, 3831, 3539, 2978, 2982, 
       3846, 3000, 3006, 3027, 3034, 3056, 3866, 3563, 3078, 3876, 3572, 3095,
        3099, 3891, 3117, 3124, 3143, 3153, 3173, 3911, 3596, 3196, 3922, 
       3603, 3220, 3224, 3937, 3245, 3251, 3272, 3279, 3301, 3956, 3618, 3324,
        3967, 3625, 3348, 3352, 3982, 3373, 3379, 3399},
       VertexColors->None], 
      Line3DBox[{2919, 2924, 2940, 3822, 3531, 2962, 3833, 3541, 2979, 3848, 
       3552, 3002, 3010, 3029, 3038, 3057, 3867, 3564, 3079, 3878, 3574, 3096,
        3893, 3585, 3119, 3127, 3145, 3156, 3175, 3912, 3597, 3198, 3925, 
       3604, 3222, 3939, 3610, 3248, 3255, 3275, 3283, 3303, 3957, 3619, 3326,
        3970, 3626, 3350, 3984, 3632, 3376, 3383, 3401},
       VertexColors->None], 
      Line3DBox[{2920, 2926, 2942, 2950, 3823, 2963, 2968, 3835, 2980, 2987, 
       3850, 3003, 3012, 3030, 3041, 3058, 3066, 3868, 3080, 3085, 3880, 3097,
        3104, 3895, 3120, 3130, 3147, 3160, 3176, 3183, 3913, 3199, 3206, 
       3926, 3223, 3230, 3941, 3250, 3257, 3277, 3286, 3304, 3311, 3958, 3327,
        3334, 3971, 3351, 3358, 3986, 3378, 3385, 3402},
       VertexColors->None], 
      Line3DBox[{2922, 2929, 2944, 3824, 3532, 2964, 3837, 3545, 2981, 2992, 
       3852, 3005, 3018, 3033, 3047, 3060, 3869, 3565, 3081, 3882, 3578, 3098,
        3109, 3897, 3123, 3135, 3150, 3165, 3178, 3914, 3598, 3201, 3928, 
       3605, 3225, 3234, 3943, 3252, 3261, 3280, 3291, 3306, 3959, 3620, 3329,
        3973, 3627, 3353, 3362, 3988, 3380, 3389, 3404},
       VertexColors->None], 
      Line3DBox[{2923, 2934, 2945, 3817, 3533, 2965, 2974, 3839, 2984, 2995, 
       3854, 3008, 3021, 3036, 3051, 3062, 3862, 3566, 3082, 3091, 3884, 3101,
        3112, 3899, 3125, 3138, 3151, 3168, 3179, 3907, 3599, 3202, 3215, 
       3929, 3226, 3239, 3944, 3253, 3266, 3281, 3296, 3307, 3952, 3621, 3330,
        3343, 3974, 3354, 3367, 3989, 3381, 3394, 3405},
       VertexColors->None], 
      Line3DBox[{2925, 2937, 2947, 3826, 3535, 2966, 3841, 3548, 2985, 3855, 
       3556, 3009, 3026, 3037, 3055, 3063, 3871, 3568, 3083, 3886, 3581, 3102,
        3900, 3589, 3126, 3144, 3154, 3170, 3181, 3915, 3193, 3204, 3930, 
       3217, 3228, 3945, 3242, 3256, 3269, 3284, 3298, 3309, 3960, 3321, 3332,
        3975, 3345, 3356, 3990, 3370, 3384, 3396, 3407},
       VertexColors->None], 
      Line3DBox[{2927, 2941, 2949, 3828, 3538, 2967, 3843, 3551, 2986, 3856, 
       3557, 3011, 3032, 3040, 3059, 3065, 3873, 3571, 3084, 3888, 3584, 3103,
        3901, 3590, 3129, 3148, 3157, 3174, 3184, 3917, 3197, 3207, 3932, 
       3221, 3231, 3946, 3247, 3258, 3274, 3287, 3302, 3312, 3962, 3325, 3335,
        3977, 3349, 3359, 3991, 3375, 3386, 3400, 3409},
       VertexColors->None], 
      Line3DBox[{2928, 2943, 2951, 3830, 3540, 2969, 2983, 3845, 2988, 3007, 
       3857, 3014, 3035, 3043, 3061, 3068, 3875, 3573, 3086, 3100, 3890, 3105,
        3122, 3902, 3131, 3152, 3158, 3177, 3186, 3918, 3200, 3209, 3609, 
       3934, 3232, 3612, 3947, 3259, 3278, 3289, 3305, 3314, 3963, 3328, 3337,
        3631, 3979, 3360, 3634, 3992, 3387, 3403, 3411},
       VertexColors->None], 
      Line3DBox[{2930, 2946, 2953, 3832, 3542, 2970, 3847, 3553, 2990, 3858, 
       3558, 3016, 3039, 3045, 3064, 3070, 3877, 3575, 3087, 3892, 3586, 3107,
        3903, 3591, 3133, 3155, 3161, 3180, 3187, 3921, 3203, 3210, 3936, 
       3227, 3233, 3948, 3254, 3260, 3282, 3290, 3308, 3315, 3966, 3331, 3338,
        3981, 3355, 3361, 3993, 3382, 3388, 3406, 3412},
       VertexColors->None], 
      Line3DBox[{2931, 2948, 2954, 3834, 3543, 2971, 3849, 3554, 2991, 3013, 
       3859, 3017, 3042, 3046, 3067, 3071, 3879, 3576, 3088, 3894, 3587, 3108,
        3128, 3904, 3134, 3159, 3163, 3182, 3188, 3923, 3205, 3211, 3938, 
       3229, 3235, 3613, 3949, 3262, 3285, 3292, 3310, 3316, 3968, 3333, 3339,
        3983, 3357, 3363, 3635, 3994, 3390, 3408, 3413},
       VertexColors->None], 
      Line3DBox[{2932, 2952, 2955, 3836, 3544, 2972, 2989, 3851, 2993, 3015, 
       3860, 3019, 3044, 3048, 3069, 3072, 3881, 3577, 3089, 3106, 3896, 3110,
        3132, 3905, 3136, 3162, 3164, 3185, 3190, 3924, 3208, 3213, 3611, 
       3940, 3237, 3614, 3950, 3264, 3288, 3294, 3313, 3318, 3969, 3336, 3341,
        3633, 3985, 3365, 3636, 3995, 3392, 3410, 3415},
       VertexColors->None], 
      Line3DBox[{2933, 2956, 2957, 3838, 3546, 2973, 3853, 3555, 2994, 3861, 
       3559, 3020, 3049, 3050, 3073, 3074, 3883, 3579, 3090, 3898, 3588, 3111,
        3906, 3592, 3137, 3167, 3166, 3189, 3191, 3927, 3212, 3214, 3942, 
       3236, 3238, 3951, 3263, 3265, 3293, 3295, 3317, 3319, 3972, 3340, 3342,
        3987, 3364, 3366, 3996, 3391, 3393, 3414, 3416},
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1164, 1137, 1138, 1139, 1140, 1136, 1141, 3638, 1142, 1143, 
       1144, 1145, 3639, 1146, 1147, 3640, 1148, 1149, 3641, 1150, 1151, 1152,
        1153, 3642, 1154, 1155, 1156, 3643, 1157, 1158, 1159, 3644, 1160, 
       1161, 3637, 1166, 1167, 1170, 1171, 1174, 1175, 3646, 1178, 1179, 1182,
        1183, 3648, 1186, 1187, 3650, 1190, 1191, 1194, 1195, 3652, 1198, 
       1199, 3654, 1202, 1203, 3656, 1206, 1207, 1210, 1211, 3658, 1214, 1215},
       VertexColors->None], 
      Line3DBox[{1217, 1163, 1165, 1168, 1169, 1162, 1172, 3645, 1173, 1176, 
       1177, 1180, 3647, 1181, 1184, 3649, 1185, 1188, 3651, 1189, 1192, 1193,
        1196, 3653, 1197, 1200, 1201, 3655, 1204, 1205, 1208, 3657, 1209, 
       1212, 1219, 3659, 1220, 1223, 1224, 1227, 1228, 3661, 1231, 1232, 1235,
        1236, 3663, 1239, 1240, 1243, 3665, 1244, 1247, 1248, 3667, 1251, 
       1252, 3669, 1255, 1256, 1259, 3671, 1260, 1263, 1264, 3673, 1266, 1267},
       VertexColors->None], 
      Line3DBox[{1268, 1216, 1218, 1221, 1222, 1213, 1225, 3660, 1226, 1229, 
       1230, 1233, 3662, 1234, 1237, 3664, 1238, 1241, 1242, 3666, 1245, 1246,
        1249, 3668, 1250, 1253, 1254, 3670, 1257, 1258, 1261, 1262, 3672, 
       1265, 1269, 3674, 1270, 1271, 1272, 1273, 1274, 3675, 1275, 1276, 1277,
        1278, 3676, 1279, 1280, 1281, 3677, 1282, 1283, 1284, 3678, 1285, 
       1286, 1287, 3679, 1288, 1289, 3680, 1290, 1291, 1292, 3681, 1293, 1294},
       VertexColors->None], 
      Line3DBox[{136, 137, 138, 139, 2517, 140, 141, 2519, 142, 2520, 143, 
       2522, 144, 145, 2524, 146, 2525, 147, 148, 2528, 149, 2531, 150, 151, 
       152, 2532, 153, 154, 2535, 155, 2538, 156, 157, 2540, 158, 2541, 159, 
       2543, 160, 161, 2545, 162},
       VertexColors->None], 
      Line3DBox[{1323, 1296, 1297, 1298, 1299, 1295, 1300, 3683, 1301, 1302, 
       1303, 1304, 3684, 1305, 1306, 3685, 1307, 1308, 3686, 1309, 1310, 1311,
        1312, 3687, 1313, 1314, 1315, 3688, 1316, 1317, 1318, 3689, 1319, 
       1320, 3682, 1325, 1326, 1329, 1330, 1333, 1334, 3691, 1337, 1338, 1341,
        1342, 3693, 1345, 1346, 3695, 1349, 1350, 1353, 1354, 3697, 1357, 
       1358, 3699, 1361, 1362, 3701, 1365, 1366, 1369, 1370, 3703, 1373, 1374},
       VertexColors->None], 
      Line3DBox[{1376, 1322, 1324, 1327, 1328, 1321, 1331, 3690, 1332, 1335, 
       1336, 1339, 3692, 1340, 1343, 3694, 1344, 1347, 3696, 1348, 1351, 1352,
        1355, 3698, 1356, 1359, 1360, 3700, 1363, 1364, 1367, 3702, 1368, 
       1371, 1378, 3704, 1379, 1382, 1383, 1386, 1387, 3706, 1390, 1391, 1394,
        1395, 3708, 1398, 1399, 1402, 3710, 1403, 1406, 1407, 3712, 1410, 
       1411, 3714, 1414, 1415, 1418, 3716, 1419, 1422, 1423, 3718, 1425, 1426},
       VertexColors->None], 
      Line3DBox[{1427, 1375, 1377, 1380, 1381, 1372, 1384, 3705, 1385, 1388, 
       1389, 1392, 3707, 1393, 1396, 3709, 1397, 1400, 1401, 3711, 1404, 1405,
        1408, 3713, 1409, 1412, 1413, 3715, 1416, 1417, 1420, 1421, 3717, 
       1424, 1428, 3719, 1429, 1430, 1431, 1432, 1433, 3720, 1434, 1435, 1436,
        1437, 3721, 1438, 1439, 1440, 3722, 1441, 1442, 1443, 3723, 1444, 
       1445, 1446, 3724, 1447, 1448, 3725, 1449, 1450, 1451, 3726, 1452, 1453},
       VertexColors->None], 
      Line3DBox[{271, 272, 273, 274, 2634, 275, 276, 2635, 277, 2637, 278, 
       2638, 279, 280, 2640, 281, 2642, 282, 283, 2645, 284, 2646, 285, 286, 
       287, 2649, 288, 289, 2652, 290, 2653, 291, 292, 2656, 293, 2658, 294, 
       2659, 295, 296, 2661, 297},
       VertexColors->None], 
      Line3DBox[{1482, 1454, 1455, 1456, 1457, 1458, 1135, 3728, 1459, 1460, 
       1461, 1462, 3729, 1463, 1464, 3730, 1465, 1466, 3731, 1467, 1468, 1469,
        1470, 3732, 1471, 1472, 1473, 3733, 1474, 1475, 1476, 3734, 1477, 
       1478, 3727, 1484, 1485, 1488, 1489, 1479, 1491, 3735, 1493, 1495, 1497,
        1499, 3737, 1501, 1503, 3738, 1505, 1507, 1509, 1511, 3741, 1513, 
       1515, 3743, 1517, 1519, 3744, 1521, 1523, 1525, 1527, 3747, 1529, 1531},
       VertexColors->None], 
      Line3DBox[{1535, 1481, 1483, 1486, 1487, 1490, 1480, 3736, 1492, 1494, 
       1496, 1498, 3739, 1500, 1502, 3740, 1504, 1506, 3742, 1508, 1510, 1512,
        1514, 3745, 1516, 1518, 1520, 3746, 1522, 1524, 1526, 3748, 1528, 
       1530, 1537, 3749, 1538, 1541, 1542, 1532, 1544, 3750, 1546, 1548, 1550,
        1552, 3752, 1554, 1556, 1558, 3754, 1560, 1562, 1564, 3756, 1566, 
       1568, 3758, 1570, 1572, 1574, 3760, 1576, 1578, 1580, 3762, 1582, 1584},
       VertexColors->None], 
      Line3DBox[{1586, 1534, 1536, 1539, 1540, 1543, 1533, 3751, 1545, 1547, 
       1549, 1551, 3753, 1553, 1555, 3755, 1557, 1559, 1561, 3757, 1563, 1565,
        1567, 3759, 1569, 1571, 1573, 3761, 1575, 1577, 1579, 1581, 3763, 
       1583, 1587, 3764, 1588, 1589, 1590, 1585, 1591, 3765, 1592, 1593, 1594,
        1595, 3766, 1596, 1597, 1598, 3767, 1599, 1600, 1601, 3768, 1602, 
       1603, 1604, 3769, 1605, 1606, 3770, 1607, 1608, 1609, 3771, 1610, 1611},
       VertexColors->None], 
      Line3DBox[{406, 407, 408, 409, 2762, 410, 411, 2765, 412, 2766, 413, 
       2767, 414, 415, 2770, 416, 2772, 417, 418, 2775, 419, 2776, 420, 421, 
       422, 2779, 423, 424, 2782, 425, 2784, 426, 427, 2785, 428, 2787, 429, 
       2789, 430, 431, 2790, 432},
       VertexColors->None], 
      Line3DBox[{1641, 1613, 1614, 1615, 1616, 1617, 1612, 3773, 1618, 1619, 
       1620, 1621, 3774, 1622, 1623, 3775, 1624, 1625, 3776, 1626, 1627, 1628,
        1629, 3777, 1630, 1631, 1632, 3778, 1633, 1634, 1635, 3779, 1636, 
       1637, 3772, 1643, 1644, 1647, 1648, 1638, 1650, 3780, 1652, 1654, 1656,
        1658, 3782, 1660, 1662, 3783, 1664, 1666, 1668, 1670, 3786, 1672, 
       1674, 3788, 1676, 1678, 3789, 1680, 1682, 1684, 1686, 3792, 1688, 1690},
       VertexColors->None], 
      Line3DBox[{1694, 1640, 1642, 1645, 1646, 1649, 1639, 3781, 1651, 1653, 
       1655, 1657, 3784, 1659, 1661, 3785, 1663, 1665, 3787, 1667, 1669, 1671,
        1673, 3790, 1675, 1677, 1679, 3791, 1681, 1683, 1685, 3793, 1687, 
       1689, 1696, 3794, 1697, 1700, 1701, 1691, 1703, 3795, 1705, 1707, 1709,
        1711, 3797, 1713, 1715, 1717, 3799, 1719, 1721, 1723, 3801, 1725, 
       1727, 3803, 1729, 1731, 1733, 3805, 1735, 1737, 1739, 3807, 1741, 1743},
       VertexColors->None], 
      Line3DBox[{1745, 1693, 1695, 1698, 1699, 1702, 1692, 3796, 1704, 1706, 
       1708, 1710, 3798, 1712, 1714, 3800, 1716, 1718, 1720, 3802, 1722, 1724,
        1726, 3804, 1728, 1730, 1732, 3806, 1734, 1736, 1738, 1740, 3808, 
       1742, 1746, 3809, 1747, 1748, 1749, 1744, 1750, 3810, 1751, 1752, 1753,
        1754, 3811, 1755, 1756, 1757, 3812, 1758, 1759, 1760, 3813, 1761, 
       1762, 1763, 3814, 1764, 1765, 3815, 1766, 1767, 1768, 3816, 1769, 1770},
       VertexColors->None], 
      Line3DBox[{1800, 1773, 1774, 1775, 1776, 1772, 1777, 3818, 1778, 1779, 
       1780, 1781, 3819, 1782, 1783, 3820, 1784, 1785, 3821, 1786, 1787, 1788,
        1789, 3822, 1790, 1791, 1792, 3823, 1793, 1794, 1795, 3824, 1796, 
       1797, 3817, 1802, 1803, 1806, 1807, 1810, 1811, 3826, 1814, 1815, 1818,
        1819, 3828, 1822, 1823, 3830, 1826, 1827, 1830, 1831, 3832, 1834, 
       1835, 3834, 1838, 1839, 3836, 1842, 1843, 1846, 1847, 3838, 1850, 1851},
       VertexColors->None], 
      Line3DBox[{1853, 1799, 1801, 1804, 1805, 1798, 1808, 3825, 1809, 1812, 
       1813, 1816, 3827, 1817, 1820, 3829, 1821, 1824, 3831, 1825, 1828, 1829,
        1832, 3833, 1833, 1836, 1837, 3835, 1840, 1841, 1844, 3837, 1845, 
       1848, 1855, 3839, 1856, 1859, 1860, 1863, 1864, 3841, 1867, 1868, 1871,
        1872, 3843, 1875, 1876, 1879, 3845, 1880, 1883, 1884, 3847, 1887, 
       1888, 3849, 1891, 1892, 1895, 3851, 1896, 1899, 1900, 3853, 1902, 1903},
       VertexColors->None], 
      Line3DBox[{1904, 1852, 1854, 1857, 1858, 1849, 1861, 3840, 1862, 1865, 
       1866, 1869, 3842, 1870, 1873, 3844, 1874, 1877, 1878, 3846, 1881, 1882,
        1885, 3848, 1886, 1889, 1890, 3850, 1893, 1894, 1897, 1898, 3852, 
       1901, 1905, 3854, 1906, 1907, 1908, 1909, 1910, 3855, 1911, 1912, 1913,
        1914, 3856, 1915, 1916, 1917, 3857, 1918, 1919, 1920, 3858, 1921, 
       1922, 1923, 3859, 1924, 1925, 3860, 1926, 1927, 1928, 3861, 1929, 1930},
       VertexColors->None], 
      Line3DBox[{703, 704, 705, 706, 3022, 707, 708, 3024, 709, 3025, 710, 
       3027, 711, 712, 3029, 713, 3030, 714, 715, 3033, 716, 3036, 717, 718, 
       719, 3037, 720, 721, 3040, 722, 3043, 723, 724, 3045, 725, 3046, 726, 
       3048, 727, 728, 3050, 729},
       VertexColors->None], 
      Line3DBox[{1959, 1932, 1933, 1934, 1935, 1931, 1936, 3863, 1937, 1938, 
       1939, 1940, 3864, 1941, 1942, 3865, 1943, 1944, 3866, 1945, 1946, 1947,
        1948, 3867, 1949, 1950, 1951, 3868, 1952, 1953, 1954, 3869, 1955, 
       1956, 3862, 1961, 1962, 1965, 1966, 1969, 1970, 3871, 1973, 1974, 1977,
        1978, 3873, 1981, 1982, 3875, 1985, 1986, 1989, 1990, 3877, 1993, 
       1994, 3879, 1997, 1998, 3881, 2001, 2002, 2005, 2006, 3883, 2009, 2010},
       VertexColors->None], 
      Line3DBox[{2012, 1958, 1960, 1963, 1964, 1957, 1967, 3870, 1968, 1971, 
       1972, 1975, 3872, 1976, 1979, 3874, 1980, 1983, 3876, 1984, 1987, 1988,
        1991, 3878, 1992, 1995, 1996, 3880, 1999, 2000, 2003, 3882, 2004, 
       2007, 2014, 3884, 2015, 2018, 2019, 2022, 2023, 3886, 2026, 2027, 2030,
        2031, 3888, 2034, 2035, 2038, 3890, 2039, 2042, 2043, 3892, 2046, 
       2047, 3894, 2050, 2051, 2054, 3896, 2055, 2058, 2059, 3898, 2061, 2062},
       VertexColors->None], 
      Line3DBox[{2063, 2011, 2013, 2016, 2017, 2008, 2020, 3885, 2021, 2024, 
       2025, 2028, 3887, 2029, 2032, 3889, 2033, 2036, 2037, 3891, 2040, 2041,
        2044, 3893, 2045, 2048, 2049, 3895, 2052, 2053, 2056, 2057, 3897, 
       2060, 2064, 3899, 2065, 2066, 2067, 2068, 2069, 3900, 2070, 2071, 2072,
        2073, 3901, 2074, 2075, 2076, 3902, 2077, 2078, 2079, 3903, 2080, 
       2081, 2082, 3904, 2083, 2084, 3905, 2085, 2086, 2087, 3906, 2088, 2089},
       VertexColors->None], 
      Line3DBox[{838, 839, 840, 841, 3139, 842, 843, 3140, 844, 3142, 845, 
       3143, 846, 847, 3145, 848, 3147, 849, 850, 3150, 851, 3151, 852, 853, 
       854, 3154, 855, 856, 3157, 857, 3158, 858, 859, 3161, 860, 3163, 861, 
       3164, 862, 863, 3166, 864},
       VertexColors->None], 
      Line3DBox[{2118, 2090, 2091, 2092, 2093, 2094, 1771, 3908, 2095, 2096, 
       2097, 2098, 3909, 2099, 2100, 3910, 2101, 2102, 3911, 2103, 2104, 2105,
        2106, 3912, 2107, 2108, 2109, 3913, 2110, 2111, 2112, 3914, 2113, 
       2114, 3907, 2120, 2121, 2124, 2125, 2115, 2127, 3915, 2129, 2131, 2133,
        2135, 3917, 2137, 2139, 3918, 2141, 2143, 2145, 2147, 3921, 2149, 
       2151, 3923, 2153, 2155, 3924, 2157, 2159, 2161, 2163, 3927, 2165, 2167},
       VertexColors->None], 
      Line3DBox[{2171, 2117, 2119, 2122, 2123, 2126, 2116, 3916, 2128, 2130, 
       2132, 2134, 3919, 2136, 2138, 3920, 2140, 2142, 3922, 2144, 2146, 2148,
        2150, 3925, 2152, 2154, 2156, 3926, 2158, 2160, 2162, 3928, 2164, 
       2166, 2173, 3929, 2174, 2177, 2178, 2168, 2180, 3930, 2182, 2184, 2186,
        2188, 3932, 2190, 2192, 2194, 3934, 2196, 2198, 2200, 3936, 2202, 
       2204, 3938, 2206, 2208, 2210, 3940, 2212, 2214, 2216, 3942, 2218, 2220},
       VertexColors->None], 
      Line3DBox[{2222, 2170, 2172, 2175, 2176, 2179, 2169, 3931, 2181, 2183, 
       2185, 2187, 3933, 2189, 2191, 3935, 2193, 2195, 2197, 3937, 2199, 2201,
        2203, 3939, 2205, 2207, 2209, 3941, 2211, 2213, 2215, 2217, 3943, 
       2219, 2223, 3944, 2224, 2225, 2226, 2221, 2227, 3945, 2228, 2229, 2230,
        2231, 3946, 2232, 2233, 2234, 3947, 2235, 2236, 2237, 3948, 2238, 
       2239, 2240, 3949, 2241, 2242, 3950, 2243, 2244, 2245, 3951, 2246, 2247},
       VertexColors->None], 
      Line3DBox[{973, 974, 975, 976, 3267, 977, 978, 3270, 979, 3271, 980, 
       3272, 981, 982, 3275, 983, 3277, 984, 985, 3280, 986, 3281, 987, 988, 
       989, 3284, 990, 991, 3287, 992, 3289, 993, 994, 3290, 995, 3292, 996, 
       3294, 997, 998, 3295, 999},
       VertexColors->None], 
      Line3DBox[{2277, 2249, 2250, 2251, 2252, 2253, 2248, 3953, 2254, 2255, 
       2256, 2257, 3954, 2258, 2259, 3955, 2260, 2261, 3956, 2262, 2263, 2264,
        2265, 3957, 2266, 2267, 2268, 3958, 2269, 2270, 2271, 3959, 2272, 
       2273, 3952, 2279, 2280, 2283, 2284, 2274, 2286, 3960, 2288, 2290, 2292,
        2294, 3962, 2296, 2298, 3963, 2300, 2302, 2304, 2306, 3966, 2308, 
       2310, 3968, 2312, 2314, 3969, 2316, 2318, 2320, 2322, 3972, 2324, 2326},
       VertexColors->None], 
      Line3DBox[{2330, 2276, 2278, 2281, 2282, 2285, 2275, 3961, 2287, 2289, 
       2291, 2293, 3964, 2295, 2297, 3965, 2299, 2301, 3967, 2303, 2305, 2307,
        2309, 3970, 2311, 2313, 2315, 3971, 2317, 2319, 2321, 3973, 2323, 
       2325, 2332, 3974, 2333, 2336, 2337, 2327, 2339, 3975, 2341, 2343, 2345,
        2347, 3977, 2349, 2351, 2353, 3979, 2355, 2357, 2359, 3981, 2361, 
       2363, 3983, 2365, 2367, 2369, 3985, 2371, 2373, 2375, 3987, 2377, 2379},
       VertexColors->None], 
      Line3DBox[{2381, 2329, 2331, 2334, 2335, 2338, 2328, 3976, 2340, 2342, 
       2344, 2346, 3978, 2348, 2350, 3980, 2352, 2354, 2356, 3982, 2358, 2360,
        2362, 3984, 2364, 2366, 2368, 3986, 2370, 2372, 2374, 2376, 3988, 
       2378, 2382, 3989, 2383, 2384, 2385, 2380, 2386, 3990, 2387, 2388, 2389,
        2390, 3991, 2391, 2392, 2393, 3992, 2394, 2395, 2396, 3993, 2397, 
       2398, 2399, 3994, 2400, 2401, 3995, 2402, 2403, 2404, 3996, 2405, 2406},
       VertexColors->None]}, {}, {}, {}, {}, {}}},
   VertexColors->CompressedData["
1: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
z8YVmn38z2wCPzyv23A4KYfw9rRdtGysSA12ucYkEBzZ28ThpLjlDtDXvMqB
qRN2Z1N5Pnql1XkOJ/W/Vof/Go/6ULN73ocs2N2THV/QkgXziltD6yW6cKAo
MyXoXDoav8wfFnGqAI8y13lnzx4IGp4z/52airalZ2hHbtTh+N64nRUFdCwn
mh+IfU/BtlLVj6dFGyBDN9uaJ0fAtG1H7QuNVEQ7CzaONDZj8Ujz+zlPCdB3
vo9TDEmFTkDhtS/7WhGuE6LG4aTip14mpApT/vOEhLO+XDtq61ckcDip3B22
+3kvp4Hf6ctJmeQObK8JYTVzkfhsaHI05WUaVi+YkDHQ6kSHbkeeGpU3658v
sr1UmYZmneDpZ3NoYMrOUpWifH5R5XubMMoPSKyzEpaT7sKe5m2lipQfaKme
GaGtTcet3dYNjW5d2KYRWvKQ8m/CxgEnaQfSIUi47d4i1o3m3x92V1F98+SO
wsIun3QkbPta6Py9Gx1OBUX3qXqWHAjJyUtJx9nz5w2N4nsQkF0SwuGkEkZn
bE/Q06HuvUpF3YSO3Zdp53QpX7HHStY/dV0G7h0z0ZMfp/yGm+BVQ8oPV36q
4tPMy8Cgi8eAuTgBG023IQ4nNas+d5fJiUwINA2+valHIPBAdeONmyQmpXc+
/yGbBbmLUa1ObgT0LecrcDipf/FxDKtJ7RxWFfQTuMeK2voQUV8a/tGJgOcF
/7oblM/vK71Mit7vwOXC/Q7rKZ/PV/Asi+dHGtw2HW/X+0BDSMcGgcAN1Lne
fPttq30BjqvE/nC1YoBhospYsZ1E+O/RE/4yJZjPNPfdu5UJ12/rVhdTfUD4
5saHI4l1iGb4rmR6sbCB12ugSpSAfPWmiCrjRpTUC6VGnO5H8YKaG7uO0OF4
IXZut0cTwoM97lk09kP64h6joK89GN8oGM0z2YyUnUZJYUcHoCJxJei7fQ+6
f/6p2/C7BW3B2b7hvgPw+rZz3oY1Peg65P6IK74dtoMbNa5ODgDG5rfen+zG
qIIBbo914LD1nJr769kIetx1N4K3GyrS1QvuqNMwJzl+Zr01G/aR2lxRiV34
02j8a18zDTtXuA23u7HhmzyUe8mnC1xqkk9XFXWh+HFBzrrXbFh+Gwv6ptMF
ia3KS4hN3Vh+Oez8ik9srA84lr9HtguJ7GfbrT5346lz5b0HJWz8OuuVYji7
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
9pA+98BfgaNDe4rhMrOhbaKKDSMdAQHS507LjR3opWbCqJVVaazNQLSEehbp
c/+v696/fO4maTveaEwm/GyC9jlb0zE/OGqb7n/UjX8dP/H004Giz5lIM5Me
NIunQ+VS2znZyyyMqpfO/VKaifQcXlsJ6XPbvFIXu/77+vJDySGnfmZC4s3w
gs5YBia4G+rUbv77/HpB1w8v7bMQ7MT+3jeLmJdKpPRIn/uv81Xybw3Jb8qG
KyPFoZHo05OTF29M/EedFzTePEvpYjY8jy82/3aIiZnB+TtIn/uv80v4lk/i
dTYsEvPMj55kIt1qsw3pcwXecs2p7/Lxeuzh9eyVkWArOFg2D3YhKLVIyko8
B9deaC55coWJb0Wz/UifOzNeyV1jVT6G3JTPbXoSh05jbUcjAwry1ulP5N7I
wa2bam/O32fib+iiGNLnhi/W8i+ck4enb7/f5I5+xHUt8WSVZVT47tk+Jrk4
F3PX7Mq0+8zEPMclRaTPbUi5W/w2JwuNmov02stKsZSpk8Yi5sVtRU+3Gr7L
RUz3ITrpc02yS0pJn6sg+Z4XNJKJvCTJRL2bFZiI8tivKU3H0jmPNQrW5OFZ
nceli7+JeW1MexHpc7dadpinPk5HpE9b6ezfDWj0fmX6jUI8z4yehX5v85DK
Egs+soSo857s+3+IeeoIN9jYRjkd2w7XDaWmNuIePf9WjjgTKuudflKW5qOg
kk9SltifM3R4H0mfe+I2XZL0ubdjF9qGZjdj2UkXYdLnqtV6+h27nY+QK741
7vosmKRuSf9/43N/qX8+9WA8Dc9u5k3V1rSg9cmmEdLn0vgNbn12LoDj8mqn
0iAWBGOa5vkS853EmgG78xvTUX5wyzyL+FbMcP07RvrczRr3n4ZlFUBwx73R
o5EsjPysSfzf9LkC/AKXgtcUomtz1hPjAuK66g4XSJ8rq2al16OeAWUbOzOP
1E60Wki+vk/M1/tqZQQ79AqxbJ5sal0zC3LyEndnH2FhMH3S5IFhBhb2vttX
rtAFhUsLnAJ+MaET+rJ2zLsQUuXx51fzWMgfHRQmfe5Av03llYQMmH3W2j/z
JgWuHvLVwsR8hJ76tN73hRjQF89i8bFRv+tqAulzddc42k5oZOLhrsze2UU0
SDhXnSZ97r/2kXjO1b+GxRlINlfuWMehgL3O5wjpc5dmynMvEvU5QU5pkfdM
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
+YZNZNriQTTv/h/Wm92t
    "],
   VertexNormals->CompressedData["
1:eJzEm3c01vHf/yNSRIlSVkn2KElk9CJCQmWkCJG0rJCRsooSRXZW9t57v+29
R7Jlr+v62FTG79P99+/7x33OfZ/bP855nw/X55zr8XkOlyebobnaY9J9+/aF
Hdm3bz/+3TfI3qPuUxOM2u6k96hgaJ7sWa2C+iuochyZsBkbAy4V9oPvBRcQ
kc/3kJCmL1hVKzQxuywC9cjzyqG/Q6jl1OErR11jYIB5cOhjwCIQ9HutVoOG
kJ3kwimaz0lAXrf65nL5IuhKuX38NDSIXMYDnhrRZ0Cp/JH15M1FaH5Jrx/R
NYD8CB/CPhKy4PRPtboj1wngWWGisafVj+xldE2q83PB4cL7Jx8KCOCyx8sw
S9qHNjnkVD/rFMB2Or39JAURtiBO4Of5XlQ/2XDtkEgReHC5/H4qR4R6V1On
0sxu9NJu1lDDsRgyx33FRw2JMCRlWSM93oUyC9zII3lKYN+CcpitKxGmuCM8
Tm50oooX+9sjbpbCA/HjJkwZRIgeYCmhi+hAE84BJ0PvlcHBVNGXiXVEmDYy
unw5oR1psRH2s/CWgyJvg9LKKBHuHb/h6Trcitj4b0pIbpfDhcw74qEYEZqV
Xx3LzWtB3RNz1YyWCNopM5mj14mg4v/p6mWRFjSrdFbjQj2CGH7rSw57RFhy
CbWsMWhG7ZyO35vYKkBAYDzt2EEMWLZN5jtTm5CYKWXWW8UKOPGg/snkIQyM
w6ql/9o2ITK25+RnnlTADmXwQjA1BlXnnu+LP9GEZi2YdaJ8K+Al35InFy0G
pIKWV+QLG1HxsbkNhZIKkCyfpU/Hz/t0Cm6sf2tEe5c4dagHKiBee18NCX7e
bqIZphDUiPIsYrtnlyug7rhF71MaDEiyHvM+rWxEJnHB36/uVkC7VEUWCQUG
ehGT09IqTejpYLjp032V4OVEe8oFvx9KmuyXO+2NaGDn1YMA0kqgHHMV8fTN
hc/BUYWvpzBkZ4rp9mQYgRS3ndvnshZ4MNXXYieIoRdCO8e2Wl3BkbHKcJKs
HQQ6COaUVBi6zNjIhxV6QlrXN9kbDZ3wsGyffnwJEcUJjefJbvgDlXaT/MyX
Hugi5U3lUCIihaw6ZcG/4cAspfbu7v6fUHPcLZw3moBshQRFs0ZigcjP2Hxf
cwjU/GJkbkQvoqMmbdpf36VBhzY1t5/CGOTSX5nKe7mAFLigtU46B7hWr5wc
7fsF+ylEqKaezCNqcvEhStYCINl+p3ZuZhxCj7poOIbPIQn+9ySPfhdBjAOt
0K36CTh4LuwpzMyirxN5CnbmpfD2cpZcVe8kMEzGznuuzSD+NzvPhQ9UwKmm
5GN+w1OgK5l6rgabRlKab8xHWiuhOiFOVjlvGnpqZ0vR/mn0ka1YwdiuGo7n
3soaM5+B1ev6R9TOTaETL0SB/Ggt/DSLGY6anwGrBamXYh8m0ZDep73a03Uw
I7/5/NC9WShv2I5cWplAxyxq4lhO14MW58YvibZZ4JP1TAWFCeQ16sjKq9UA
s8Y/dnN558CjI94uoHgcsYet0LLINIL2uiRZufMcdH2dYTC7MI7MxOuFirma
QETWT3EXmwPByrCCrpe/0Ks3rTLcT5rhmMRsiqL+PMjeVOxJjB1DuqmPj2nn
tYDhelTzbs086I0+kfqbO4qsnPplqFZbYUtX8/jNMwsgf1rngxLfCLr9SKJE
haMdRi35uChMFkBMhSGkvW0ILdcWkGO0HSCiGSrpnrkAEG85mus4iK6LxdyT
/NABmhG0ocOc8+BHrVeUZTqK9reqGhqpdIPpfUY2lwUvGC0ju8axh6FfZxRT
sn88ha4gLqGKkiZQeaRdmXENQ2eesWmOySZA083D3EY7QUBkH2fI3sHQJ9Tj
RilnBi2frNL7E2KhkHlB6MRvDDW8Olt7KNQJbN2uBdv6p8P9B+qB35YwtMVM
1hvD5QVrrk21AmL54PL1hMTYCIZ6b83UiJcGwZ9o/idM7eUQyms8FFKOcx5m
kHpZMQYGrUPKE4jVEEGQyCN4Y+iv2n5OYmYK0Ni/VOzMrwfJV3K7HHoYqlJb
Fs0szQI+jchKTfsmMH1Gf9RcGEMRW78/fM7NBXLu665tnq1AuuhYfmaXiGwW
720LDxbA39S3QXMxHSD7PPTeaBYR2Tk36xQZlwKTW8AdpsQuGHjzbUBPg4g2
3hg66n6qAObbn84khPQAd8z5UrFFAjIMsXq1vlUFQRk5tdH3fkCgTmngpisB
xZN2KtlK18Jxyphev+g+OEQjcb5LkIACzuheoByrg8+yVR9u7esH46RMpuNt
i2jfuP2pX4kNoNYwS55gPgAVl3+zPtVbRPPVIiNf0pvAXJPCwzR+EMa+3qE8
8HcBSZbF5Addb4FQcaOQxd9DMNF/es/NbQHtGFW4FjG1wVysN3ardAQuX6Gk
Sx+cRwrSC5e0VTvgxHywZrfyGCxFBbzePD6PpJRLtDjiOoG45v2yRuoXSB/c
rzR9ZQ5pNnhx2O7vBr98cz2Ks+PAeNn6D0FtFvkcMtuaud8D+g+ctSMI45B1
3mrykNUM6uWSPDzg3gvxXN6tEeUTcD2D89dR22lUk6HWWFf5Ay59DrpQzjEB
vC/bs/nmphHnbfczU2R9UH/fZtOnawxqxop8xiV/IXNC9fkntFNgfthZ9Lhz
B6iyeMtt986iU0fUHkg/H4fhe8+p3zX5wC9B672fuxh6oG//9s+ECXQGyP4O
kwkBqQ5pFy6cT8aqljs/t+wg58HtiUNhMaDItmXqjPPZLKD8WFTLHRbzlbJP
p6VCjr1CffkyhrxJNPL4J3zBQ37v+jYzzst5XeOVcQwZPmhZTe+PgL1lew1T
7WLo9hkTj2vBEKuXtI+CejzU7rhu1GcguNoRpbGSg6HdAy0zio2pYH7/AN2D
3kqwPvmolzYCQ2/klgOrJzPBx3N8zeRgDVBTaj5qc8XQ+voJ0tkvOdC8B1Pk
XXWgGFogU34fQzqWhrmzVgVA18LS3DnRCCObcZU0nBjyJ05qKHuXwNlusp22
lRbovjLILzhPRNulz7uzphFs3U9naqpvB4dnaixcKUQkdlSM6w5FFRwCz5rF
1Q4YZrhbV21LRCsfGFjpPlUDu5Sp+F3mLiiUwpgaxYkof8+XHxOvBd6fDfun
dLthxurQi45lAnqbEBXhz1cPb+8yHF+y6IFzz+IdGjMIyOH+UINBaQMYeL3a
dE/shZf2CrfD9fDrjadsP/o3wRO+p5Xn1PtgOJczfmVyEXFfPh9xh7MV/jzN
S/bl7ge4SbdIdmcR7eR+DD2z3Q59Ts9pJE4Mwmbl8uCL2AUU8vD4YMjbTrix
9jquZncI6kz4wi5PzyPHi39O/N7rgtdvi+OYKkbguZLg7lfOeXRZ/a4riX4P
0D+bjyxTH4OJ6u3UIJk5tLOo63B6pBfyWc3jOoTG4N6pQx0BMIfM6WfcpW7+
gH3/368l4E/asbX6bA2+j7r1CQHTyI63joUjZRpaTswcfqCZDK3ff+p9XMOQ
7t/SNy0KHlCJ7b+R88EPGI5qEx/jfD532a7LM3oF8bpca/Qa4eCjcSZdYRtD
9Ta/Ft8IvIPlC4JTch5x0HxZmaVwE0PahMzdS5I+cJ1zINHvRTpYCjMwVBMx
5BMWMuQYEAKD1+XpCmlzYWZT1md5DEPiT3cKXFVjQPJvoNtt+ULYL/I782Yn
hor4vlk820qETMtLk4WWJSBdV7EnVI0hogXddzvDNDDt1hVlXyoHE+YPo7FZ
GJrtrUzxpsoC+dD3u9nFleA4vlFrFYihR5nHycldc+H1cPYnVakaKBQN+9Ro
haE77qyvlYULQTDxbDV7Qx14Hor/UKWEoT5WzlFR9lJYsUueDOZvhKgShZF0
Vgwt9c9+Y1pBwOxw/ETL3yZwT08u0vpDRE7f5Tjv6lfCCJ+ktNOfFthTaGYJ
bCMiNz1TNv3VKuD3PfK8ULAdRC31Tp/9RkQsHh1PRupqIHrHYdzbowMMM6Nc
nzwlIunlaeoyuTqYfRBEKI/qhONBJ1JZ+YhokYK9S/9wA5AtGVkkc3XDLgvt
rEUrAXVuWdj3fmmC1tv5HlbDPVCNP9nF9wiIneT0btTDVjgyzB+1nvsDKE88
eB/TsoiOkZaPzIp0QH7FgOZR/59wtsxj5LUAnpcWQ9si6zoBNv2jT98dgIQO
Y8PujwvIn+XHx1XxblAyndA5rDIEAq+SC0TK8LzknkQ8N9QDDLtrVyVfD8EV
wm6Vrv884hV23LEx7f2PHJ5pkrnv9jAVKqtezRpSTiOHjAfEFLYZmC4eiAq2
KofkVk1pcjoM/c5wsox1boKJfIaPojc/w0HNZzRHcX/3Sfre8I3bGmx/nfnL
EBQEwkw8hp9wndzb0eGSZnABy4udVLaGUXCYgmHE+g+GUq843j6/6QXKyxlv
FzISYcvwNpLFOa+xfE7BVhkE3PEjzDL6mfDeYJfMax5Dp0QajOqUosCjlcDk
MJEDLcXiTbqjGEqgGOQofhoPPuf23Z3wzgeZu24OfL24vyfScz94ngz7lq2/
azkWQTE2qP+6AUNHw2wUf2akQ+q9jwxLeP8ou97z0zQX5zBLkE3GORuiJiSW
GLsrgBjqcCQhBEP8Pm8H1CfzgCxoVUP6AK5n1MNaxQ4YovzGo/7JvQiOjEeS
K7Diehb65BO5NoZOFx7mGD5aBnufrFNv5NVBq7HKPaqrGBK2zPoijeu4Qsrn
0WW7BnAm9Q84yoyh6+Tf3l9SrwSe4dns+pdNQBYol763TEQvpYntNYer4VJK
IP0URwvopjJQ3momolNanH769jUQ0iksfPdsG3CvHC/hDyGiM0a7V0QF68Ak
T2SV17YDrgiaBeyoENFdTlq5idAGeD7cw7xK3QWbGro2EQQC2lpySGbRawZC
/+SrkuZukP6Se/ajLQHFbg/POBu1weSbqA4U1AuptYkpncRFZPG5JCy5tgPy
TPv3daj0wde7mNkAnh+wZemuK9e6IHhxdoJMph9+pLSUxScuILIq2xW7tW5Y
Obzpfju5H1QC4g/+tVhAWXbPTUoiev4jhw5pz8IULmcB5/sMxmGKRjTIcDsf
U8XgzhVNeqOCPKhcfcY0WjyNaPie/BZ9gOd10/w/7je+wNpG4fomrodJ70mF
A7xtQUeAZt6y0w9Uluk+iuPnk4okUfpcThDx1b9IWiUcNM3dozb+4j6rzTvb
9+ITUJUGy0pOx0LQtRiiBq6TlOvLnRbZAbD09ke8w48U4BOcHd7AMIR4mkr7
Yr+D9i2e2d3NTNDuFip9OIMhWe9XZAc8YqFVwoCpSjkHNsgukb/G+WTNJE+J
l0yEZ6qtsNGfB3Yr7p+jcT5F0vQGLM+nwtX3HJ+CrxbB61NUhIFaDDkwjIg6
kmdByI9HSvRUZbBfXzzeEtdPgOOZbwRzwdZVITXvdQVUyDpF5gRjKL3+Zn+n
fwFw//oQKaVTBfMJj7Jt3uJ6eI/Pon62GB5X7bBDYzUkXPq1U2KM5+2khoZd
gzKgEPrblG1QC6UMbp8IuK5KOnVstJzE+6xM/mNlQbyv3Nrq5+DGUM7iAT/p
skpQFn/oHYT78FD8Lf3DBzEkQCWlxs1YDZXtuwefeTfB1qOwYpJRIpq+2cn4
qKwGOiU+8uhxtYIcwe91RAQR6W4eZig9UQ9pZ66nWB/tgMcJS+3nlYlon9nx
0e76RphI/TTalNcJGh/CmqamCOgYl8yaY1UL8NLxNa2YdMOJaX3SdVMC+lK3
/yTrZDuQs27se0rfC8eaqWezCYvI2K2b48jLThA3XX6Wv/0DLFievl9SXERb
5ctLonzdYHTqh8LjD32wts+/bZ0Kvz4OHW6b6v6PHP6n8+LBvsHTMbawHOyn
lu05jYpEv+5ex3tjiOua7cM/0TByjlrAFs+Bf2K17Q6ZfQFbCeq2Lfav0EWh
dTUe5/DVh5Ug6H4DPxn2vtx6/g2c2EqUJnG/7v/O6lBt8xFOKIRziAlHAyMD
Y5MU/ntStWYkxpn9QXO3sndKIxEcnK7a6a3i73vOW0uOh+FgElnWMlKRBpe4
j5ZYLWLo0EctBTgRA9jBcG7m9Uz4yjzkTjmNIRf7gIRhr3hw39Pi7pXIgU35
4TtUeD/aUDSJvQ3JcESNNSbxRj5kLVG9Pob7u4hXGvtWeQb4tpTfmM8vAod5
fXnRCgwZJYnLZvVnw+rVE6wRcmVAuRqnGpKCoY+C7615jubD4Ydm35buVQB2
VkSz1B9/LuQfJiiIFcHMtZIUwcRKuLfsq//ZBUOVr77Jx/mVgAKdYuYiazWc
+TpGS/ocQ0ESZNU1MuVwyvbafsHGGpj9foRfXhlDV5hD7OpzKqDjwGouzZU6
oB+Zv911Add/mnXRTNIqOEWuulKwUA8y5SO/n1JjaJWz4AN/UDWcU1H/UHav
Caya0uWde4loJ53a1Wu4Fty9MzRO4jlxYeW3u8xnIjIXesho97YB+o8/CHhw
tgNaObrM+i4SkUOBbnrKs2b4fFicYhz3YXXe/Szv6wnonS3DyX3v2sBxaG0J
6XUD8VZfTrU6AYXV7zGJoA6QMm2NZbvSC+PCz9fMyxZRcohaVo5DF6SxrJbr
/uyFsWvZV3scF5G5FkNRg8x/n0PZkRdDC/LRkC128HTbqWmUKvKp4hzLDJDN
LWlHOJaDNGfjVwLuL0cPWRTVVzTC1yEbRUFOL7DMK6I7iPu1yOHpR/ck3sA5
B9dSdpdAUBlpMHDF/bpsxC4/c8odSPil0r/wR8JB895D7rhfa2R4t1L+9IWP
T+Xs47PigP3KZdvUdbwvB8rnWX8JBfVr0jcTviXDRlHNp1lcJ3eX442iFqNA
41ooDb9BOpSq7136iPu4C2mjEkEoDv60iGibyGTBc9tQ484JDE3wr7IoZyZC
5Qni8ZLDubB14WhRx08MSfVYapROpUEZjXm5/4UCSDcxcrNpwtDL5h+7a3VZ
IOLZE3fUphgis8feNBdiiNct++teby5cljJaU4kuA4+Zk3mH4zC039+qVGUA
//nXK+93KSoATXZ4mOF8BrfzG1syF4OeyUzMz0eVcGydyWLbCUNsvF92LqSX
AlGIdObBShUwaGGCG48xxMmzc6ouD0GQZIOUlVINLLWLdIypYMjaQclCiLUS
VuaaTkeO1+L6Qz+TIIih8IIWvbi4Khi4vnlMhL8BwmlWeE/sEFGlW4E182AN
nBTgetnW3QSS73cTw0uJiKbD563Z83oIJHNk0W1tBe1CdyN4QUSlV/U3UhSb
4K3UyYAF+w7oqt1qIx4iIkMDh0kOrVZwW5FJ6iHtgsaiTxrykQR0POHdVUbO
DqijvqRr2t4NdwO3nYuPE5CPgTWF/Hgn6Ds4D5S/7oFupWCRN32L6Jfv0MOp
jK7/Nof3TQe8bMLz4HZg+Ql33kZUpaDeLXcNA3v6xd6YIyXQRqEieLllGt3f
HrM5JTwNnj+TCLmXP8NczCOdOVwPb3Vw1MtyOwPFem+OlJQ/EM02vy3jHHZX
BF7jD3UDi/F5x/cXwmFOcWLUDPfrAyjDRrXlKxRa3O18EB0Dvyol5+7gfr05
QTF+jSYE1N3M2C+fTQS945EiRisYsqtg9JrciIS2zzTvboSlQMG4m2EtAe/v
v766ytHFwtjEryb3Zxmw+1k+dAf38Un/6awi4wTgCfOU47uZDUoYZY0FrpOX
qxWdDPRS4QX2e9rqUh4s8TjvLuE6yWQV+9h8IhNa7HtDTaQLgWTfzuSrKgyl
dPhSxHfmwHyFOUuUWAkUrca4HsZ9vC+ja2urIB8unq9OrX9bBirStUWG0Rii
3R51XZkohFNLZ/aekVdAdW+Fh4wPhka6bnoJ6JUAVXDUDOnbSjCkaYuktcfQ
Xb6nGfo3y8H9oErt48oq0Na9Ve/zCENU8S7RI3oVQCcRq+gnWwM3S9STvipg
6Gyqt337QCVM/vEI3jWvg4clvNZjjHhOcOlgdSWpgclkjnedmw2woppMfDVG
RF8/X3HocKmDcyl7oiEdzeDu9/j9nUAiwgyaQg+o4b2LbWaE9Gcb3OApuMog
RUQqukuxzRot0MAcGCw60wFMhrkH0gcJKHC7iadLph1236v5GMV3wdFVwaQ9
bQK6OHDlzqp2J7jKxwqhe92QIxw9SMuK9/2LxqNKAv99Dv/TuU3BwiFZm1fg
1RVcruY2jXgzfasiS6aBdH7jntP7AOh4Ku7qh/O2kfExzYDBAwaknkWFm/jC
3f2FIPsvT8ZlX017/x5aVB8FZCWEgLdm4Ukm3K8x5t/hqfM+IPduJ8rzTxQc
CEmN9dzCkKrp96ibTcHgHKvUoMQZD5PTCq6A95pRQ5bOWK5IIG66Dc8bJEH4
psbexSUM0Ql3G3xjiwEB8xlHuflU0PGXomVbwFDDLl2k3+14uHht3uTpWCa4
JB8uzBzH0JFoYOuiS4Gz+nzRZCE5ID4jpR/WhyHphHLLM+yZsLHQ+YvbNh9s
RQwK2xtxPrf6vX3Ws2Ewhk9+V7YI75F/zosV47pqVSU0XpkHnNYbORtPSoDx
FNUIbRru11TB1Uu4TiaGNoqe7SoD+1u8j0vDMPQVnG5ckymGC4FpSW9VKuDa
37Tuug8YIisSCPJmKAMO+VDKGJdKGK5d71CyxpAufyTPfTsEAQ8PDFguVwH3
eIDvD7wfiV+t3yQTrISm43Hyk2S1kKXLnEt1EUNpF+1EFRWq4f3vYGGDl/Uw
M8dP7bRNRBJ/Gb7VFtWC42sjY0sBXCfPf44XLyQil8zQu95vGqBOI1+I/VQr
WCbEyyU+JqKrBYbB1lbN0NFx+ZHDZju8vKDXQkpFRGx3r7ddv9cGiprT5Ztp
nWA1XfuhypeA3htO1SePd0Dz+O1rT426YORemIGjFgG9pdUtPVXY+T/GoSnL
iz9jIl5A5Csle6w9jai6zPTnJ6fBZUw+MpuxFkyevjK7LoYhpYGCjtBPVXBR
ufHPbx0f+B6fyuqDc6hq2eqTSv4eWPnp+A74BcMH3t8oAudQ2j381wUeHzCn
fqivGBEJb2Ci/A2eG3clZnMtc4Pg7BGI03ofC86m+96k436dP2R+OnwhAp7f
dHk95pkA3HeHsulxnVwLoQzYrxYNHgxFF/QHk8EpOLvZB9fJU+EOMcUGcVBh
qmCW+zwDHlEklu9NYSiAxLWMcysJJPTbRh8pZMMt0XOlh4bwXLr5u/XIdjrY
NMTn2Ozkwi0zsgu+7RhqSY5rtBHLhqJbolppcQVAqt+3blaJoWu96QKkxFyg
jPiTIJBeBBePML53yMOQPBNZ8upGPozsBNsd/1sC904crQuIx5BP7Vnu0ZtF
8CNgcgzFlIOd3pT8Mz/cL8zuX5ekKYWNfeoCV+wqAG7dSf6XMw9kjWl91S8H
Z0MVSv2flcCumPuIG8+ZDdHSNHHB+HWi7GX6P6ph8U2gj4cchiKywkwmcb/u
5Mn4ucRbBzMxFBR7xzCkfow9y52qFuLmC39fa2sAmZhZyc/dRKROq8KyU1kP
x+j2akujmiE4uuzDW3ciUiY+exed1gSCvebdXc/awPe6y3iwEBHR/u574ODR
CuN9AypooAOoL4QZxFUQEBTYxf2y6YAf6mJHMv06QdR8/jbDBwJ6qX8w/aXq
/xyHVOTeKSz11XDLW8Zjn04TktQLeTuzQASRjvzBScYGYEl+z/bwxQwSlbgd
wbg+CRFi1JXBZd6gvcQt64lz+BuNkotvu0FopJjH295AYM03Yj6A66ckHUly
H4k3NJtfjby6HgHuQ8sUEnhuDJ7xqa2oCoRuOeVFGs4YGFazEOncwJC7TYG2
SH44tCtUarSQxINT40lJP7zXyPNUNeqHR8HmQmRzHlsSGPi/q3fG86RtqGEJ
mW8s3NNmjZm1ToM3ntz+MbMYGsi9zGZCkgTpNAY2B/iywFtNMc4f790R6yPi
dUNpMO5tcqIR4TqZ8EjuYg+GzMiiacv9soD4jM5nRzEfKNLH9aXq8ftnPEpm
KpILoVlZEv3ihZA5uqMvXYqh0Pi057kX8mH2pIqZllkxbC+lWHqkY+gm94XR
9VeFYGAc1Jf3txR+/Qoe7cR10pBzRnGXswT8j/UJJV1AwHb+619lLwwlBn4i
tXteBiKhYWZD8xUgdfWeYJgNnk/sT/5eO14BZK51Sld/VEHOy9kL39Vxbo/y
PFY/WQUKwdIvbU/UwkE9EToDDgyVJn0xzLSsgbHlVtL9sfVw9/XWvj9zRBR+
UPVKPEs9uB86V/PeoAnIJacPhEURUXFKqZLwbiOUEJYkNulbIfjWFmvmHSKy
d1yn+9zRAhmXv5rrceB9hZd4emmagMy+sVw/cqIDtFy1rt0Y7YCeGnXd8xm4
X9/mJAshdvyPcfifzofIEjhatV5BhVrNnzTHaQRXVQQvVU2Dw4jrLDdXEGxr
nz3ZheuekWX7yO8kH/jL5mhxWScA6GJtD93HObQu4qnJ6f8MxwarxJ+Qh4Pa
90Mve3AOzU6xm1EQAyDIc25DajsK3F4SlEvx3CjpWExPEx8GhBCe2dDsWCAe
eSTViPt1qFfevPtuJHBc0toYSkoAMZW7DnTLGNLc8Y7TG4wBbtm9B4aNKcDs
fBya8F4jNXxD+BZ3IjhJ/CqLFMsE//JWDXvcr6vufoxdGk0Fce5nf4Yzs6Ek
O8vrL+7XJh9GDBFpFtx9uJ+e9Ewe0IdFPthtxvuXml3vDb8caJG4arGzkw8n
TvTqtOM6eZrfWFbcNQ/WN958FGEqgo7NwOnjuE6uFa8mqhcVAGVSce+FryUg
0qMi5R+LoeZAG8ZjOsXw+Waw80BWGVAt8PjzBWCI9O3pi099SyGOVWW5+HQF
WGY/x6adMfTk43kSzesIXq0d0qn4Uwk/XhrdOfsQ18nJJ3a0oZXwPaio9wFP
DRxRC6NOuoShrlB5jzsL1XD48sYH15g6ePDsbWo27tdzrZqVnp51cHQ8JFlb
pRFonlD+uYf7tbUzeam3QSMIudukphObwd501SjehIg0zzSGnuVrgcCbluHr
R9qBnVpB5S4FEY352L/Wf9sOV8NVf/ld64BTmc1WFzoJaIuHPJ42+H+fQwcr
E+G+XC+gvWjc80FxGn3MekYrtzENYWcGmf2uVUN+vPBg+3kM3ek7R7ksVQsX
7vO17Zz1gwD78M2Sfxw+PHPqgdRnUNrPvj9TOxReJizdUcP7i22qmyaVUAD0
fVr5kf83EmjOfp54i+fGp0tMmRdzQ+HMAdXFvK8xsNVxl64R9+uknXvyj19G
gt5MucHC43joayiUe4j7NXUfy7tzV2LgDq8Oy/K9ZAgQ7BXzXcSQhYycX8ST
BGjQVeFgbE+HB4ufxccmMTS1O+xvupcCYr164/L1WZB+uuAa2yDuv7uBfoyu
mbBc65/x/XQu8BJWB9dwv3arnrK8vj8HOAJoLtMs5gExWv6LdR2G7jn1N2xN
5wJ54+em5xsF0Djw9+gXPE8ml2p966QtgBcSk29E7hVDqCA5M20KnpO5GdIO
xRcB8XE104MnpeDAkXE7CNdJ6m+CTJldJdAjVyRePloOzM88+zw98Of0Rgw6
ZFcOp3cCbA5KVULovUUsGvdrh7b8h418lTCTP2WaooNz12qd9EUGQzF5M9eN
LauBZjom06imFtLz3h/yOYw/X13aKV8O1sHLKPvy8gcN4KNCX5Hy7+/nsxGE
2p4GuF1f6sJDbALla363vr0joqzfVM8kApuhq6SJUnOnFbYazitunSWiiZwA
/YzRNhgPMteJs2yH1EWxIG0iAblWXQz8duN/n0NjxWx1H51KWL45s8a70oha
PwhyxB3EYGrsZQizSS0QKkn6GDlnkJJDHZmy+RR4hZo7Hcz7CuQaM4YjOIck
dnNOHjZfwHoqNsBo5hs8YFYWK8E5XN24UJHzwR/6rx+fucscCefZAwpP47lR
vCDTzHkwBGZWXAceBUbDVpXbye+4X+9pOC0JTH+Hw3wuBUU348Cjq9XQFvdr
/tUV346EaBhPYIprZ0gCQ7qPfrREPDculZYxlMTD2EElmyrDNOi/9aBvahpD
g0eYzbwvpwDLO+u3vX8z4eTVNtWGYbxf0Dx5cfJIJqjkTY5TS+fAxyo5HtVu
DBE09kQfumaDRpPUeQU8T6ZQsLcZNOEcyrrpsj/IhUspj3TlNvOhR+rXC0GE
ofKzpYIn3+TD7ZvWe1IKRfAzpb3VJxND043rA8fIioA1qsD4lXwJxKTdn53G
e7fsDYrfIbhfaxUXKVWlloHqT9X8Cbx3qwtfDBCvKAP95cXXAkEVENAmsONv
haH7fbHD+xsqIObb68uWCVXQtniywl8ZQzPnwvOTyauBkcSfY3tfLdRHSfxh
w/t1mZD+fLVvLaRs+M7c+1QPnbyvfp8fIqLyx6TKD+82ANVWt89J6iYYPGRI
fyuIiJqizYU6jjTDenDnpxrKVgh8O6sxLU5EPXUHJNdvtQGvp3MPnVMbvNjq
P1SD62SSEENUMsn/Pof/6byZoYHmqa4VfFBmKxu3nUamEk4aSw3TIGTevZwh
5ge/K/svGOEcfvylOEd2/SvcH/fJo40Khsxt+x90uI+btp3PGCD6gT2JwoBG
ZgS4PLZKSsQ5DJE5vstyMgS2yA5ocBVFge+5G7P/PpcRovJInSP5Dt+EyDbf
qMeCtrZGkBHu11Ja33Ljz0WDc6S4Y8VOAtBoJX3UwnOj1MZsTezpeDBz9TjU
eTYV6EprbCPw3Gj74mBThUsy5BZbH5xQzIRejZtnD49hqOSyWjdBNQMEZZjj
FRyyIcK5N4zvB4a8l7pcBGmyQcwkeciWLxeUTZxWS1sx1FlIPnd9NAc8v3vb
VZ3Ihz/n306dq8bQ0R1eyevreUBJzfblgFYhOMTadyngfp3g1lcvb1kIayqo
bluhGBJFZ1LUEvFe01r85ZVnMfQHsRwOiCiFWfLHPBeDMOQyy+hVyFgGh0yU
dTfJKuBLeK7nDQcMBT0+J7JhWgEGa7S0hQerwHh7MI3uLoZWImanQmOq4IHu
KEubRg1IQoNoH54bI0eDOk24a6H4EUuneUcd6JAMvnWcJyKrMMrLAxP14F3B
p/nseiPk9N6ns08kIh2D0QDlgCZ4jr3kKBduAQkbxcdlt4goaOPj2HRLKwyr
nsq6ktAKblMcbPMsRKQUalLC5dz+f8ah3qbReMTya+hQHB3KfDKN6HdPfS7/
iefG0/E8JZpBYGOwPkOC8wY3FXOo+gOAZzVSgc45CGq3b7vp4+eHB/tHThj5
wcUokaoPGuGQcsDsNwueG09Y0fsXGX+D5tUqZ/71SJix7apdwjlUe7yb9vNi
BLhm+YX/tY2BoPiGrvO4X5+YWxubTouCXjId1L4/AU4qpc6YL+Hv79ILkzTf
OLgxvLCPkyIFHMtC+Rnx3Pjm5LBL53ASTMwbG9ppZMCNdS3TfXhuHPp+JpXV
Lx0Su7s2VVuzgNm80yzmJ4YUcwd+SsRlwdNxz7fwMgf/PQmtsR1437lR/2vJ
NAeO6ToQ227lQVhF0C1f3K/J1vguCDvkQc2dQ5ZUrgXwrGjWSrcIQ2de9B3m
IxbAMj+dtJ5xESREb9wgT8NQ7+EDN3/vFsGTKU4SvowSoH1s75CE+3X8rcy4
1fel4LQxk7x0AEHd88qdTbxfuz4y+vOOuQLqn5C9ZHxTCTs87pxqehhS+oyt
TyhVQesX5UXS0mp4RFsccPAChop4afx362tAL75MWoivDrotQtS3N4hIJeXQ
qUyHeujbz6/V5dcAmiRDFx0KiKgymowzg6MJUgNuaR21boZ+vhZzckMikrca
2aPXbAX1sIQvRVMtECC1XPUG79cvvvtNKFH833H42fDdG1sXd2B2dUjWuDaN
drgdRPO2p+HDmFBRslA8LGQrfvuK9whuM8rnfWWx8LHgl5qOYyDQKw20ROIc
ymXS/X405QsS7ya4nrCGQYjtMb13OIfGLHfle2uCIeywwvcP8pFwM4T+sy2e
G5Xqufku2YTDwWusbds50fBC/8+xMZxDlw41ywCZKFhT6Dlfci4e6nupdR/h
rxv0gqRG+FgcVERlOJ2jTAYPOld+owUMje69XbdXTAJuMc8/C1fSgTFlhDln
AkOFA0n12rO4f/tbD3cJZQF7s+fp5gE8V2T3blhdzwK5h74snM3ZUE+5X1EA
9+sRAV3F1gM5kLOzNpsWkQvEtlDtL40YOtIg5vTgcB68en1zbL06H7gsDKQx
vF/TjAVz978qgOEDFTYG4YWgxlBZwZqFoW4WWmM1pyJQGa/jnukvhiIBQw3z
KJzPs1zGM9slkJjPd3z4dDkEhB5X7/yAX2+TptsWi8AigbM9arcCUnYPrH16
jOfGx2ZKInifGbmiSOMmXA2zjxiU/4phaNZwPpHTogZEfqSWyATVwnvbsrfb
JLgv5KwmuzHXQzyhkL9vrR7kyXfZc2uIiBD9WL4ANcIGiXCxY0MTCKVcmmG3
JCKSOccAh5kWoHI+Fqom1gJJGkeTG64R0UwON417cNv/GYdE5x8M4jVRQKJ+
JsnQdgqpfLpknJo7A5RegzEskRVgHZf6SO8XEYXmj76a4GoFnpNHBbk/+oNv
IKcXAefwKolvkuApP0hiEfs9SxEKnrYSXYM4hwa91G1qF4Lh2MiGmLb6d7gx
G6lMwDk8KszvINgYBgpbX8/vJ4uGsVxB/td4btSLteaSH4kEBS8Gn+oHcXCK
YVZIDO8v08o0kjlhsRD1oZFOkisJngte5nXD+0u2v7bQOEqEkJ85+jKSabAt
1h96YQpD7yBJjkU5DbgE9W1vxWcCqwK3d8YQhnZ9ow6OEzKB3KxXK+NyNuyb
zC806sVQ2HS62GZiNth+v9EYu5cD+rxHWgRbMET1K/o6Fp8Lqsnu7R9P5UNC
9/whugo8bzSkZk9TFEC68cEpqbkC+Px5a6IoF0P0D3nuN1AWwfXIEYhlLIbI
BNa3MXEYIlb8LI1yLgFTF3my8ttlEEPK+mbLC0MpSYMOb1kQJOVccyb/UgGL
y9u6Cy8w9MriY4RFZiX8DSuIoS+qgpUnopzj0vhzt7jtO3W6Bor5BRbcj9WC
r1RXbT4VhkIHm8lf1tbBD6Ofay+M6+HOk+/OBh1E1P5RhSXEsBG2PS5s8gg2
gent6WBLZyJyv1Ht9NO1BRbuBi2xhzWDisbLWl41IiJS/jiSfvH/jsPGqMvq
r283AekJVT232kEk3X+2/QftIvg6qH+Nf9ACOzR6v87qLaK/q9wdq3v9YJ+R
W5hwNwhS/tq8lcI51Bz9cMnK3B+eRRo9ucgSChKJS7alOIcUElcE8kuDgWGT
gTSY4TvQOZUfXME5lBEM5GtbC4N5BaZrTQeiwdBTZ1Ud51BKwP2uIHsUaCho
KN9/HQcvJHlEh3E9TEFno3sOxYG+FKdPEE8S8J84/uA6zqF6GS2D0hGcy83O
LWftNPiinyQaj/foV4aqRn7VaXD4tbUzV2gm5O9vXPiIc9ho8EhhkTILmvbr
Xgw6ng1fvKqzE3AOnRu6BAJTs0E2Q2KIfjsHqsushZqaMTT2re/jUkcuPLel
ux5GkQ/CG41em3h/qf3TUvLmbAFEPK+9WFpZANoN107w4rmRJpry6cjhIggI
sYQDLMVgJGkwPRiLIa5mx6KvBSVgLPS6sv1FGVAnk+uJeWLI5vjYQ6pXCAZO
Mt9JD8f1MCOGPe/Zv//z2Q7RGauEjgx1n/6uKphhGIh5IYWhm26PrN7r1sDK
7JbkMmctxDa41l48iOvqiqD0zG4dTAjtJrFZ1UMA2UArTysR6Y1t5XIFNAKL
9wk+D50mQMnT0d/t8D5SEZWrPtICowpP3zDJNsPPgHunL+oQ0cul2xx8K60w
kn9wRHoHA/pyeqmTGR8Qv71K0smiIAgosWP//nERPIy3dXcXhpB9Gtn9vj8h
cOTIRhrmvAjT7jsPv2wPoXvH9C33XGLg3ZMitcWARbA22bxiFDiEvKnL+20+
JwGXQp0nffkihKU3RZ8YHkRe7tsdBvQZoCLe4Ys2F4Gdl35RtmsALTNa9SQR
ssClmYQofJ0A40W/MU2tfhRzzfbbcn4uXH8auc5eQIAt67wEAlkfunKpI1VV
pwDyxvp88d4F+8+MvPl8oRdNDZAc2i9SBLvBl4VN5Yhwxqn7Z2RmNxp9pnn1
qWMxfGkdNqYxJMLapN7Wl5kupF5gwfGHuwS8tLnO5bkSIeO4AKn5WieS0cjL
mbtZCr1c++gT04lwtLvvpEVUB+Ld2lS/ea8MPLIuX39UR4TTD8cGrVPa0YFU
WyOMpxyYFJu+OIwRYae4VfJNTys6IfbqfMd2OdQrVyZ/XyKC9sPH2Z0xLUg0
VdlXwQqByjOJmu/rRPg0ZFp3R6QF0XDWdD2sR3iv9KkX2iNCRegWK9WTZlRI
k+4Zz1YBCnLTN5YpMOBZQdLKGU1IeG6/7VPFCvjGZDZvT4lBUvohiX6TJtRp
VmVi9KQC9GYzw62oMbjJf3jO9lQTsokMPebtWwH+nos6t2gxmNAyLhLKa0Te
Wfv+GpVUgMjs2beV+Dm5cxVYBzci4dWMylMDFUAVbECddRQDv/c0V9zDG1H8
eaHtwuUKOLO6tupIg0Esx9LJXNSI0K/FJGXc7w/NlttT4fdpyXHV3Vq5CRWI
cfxx31cJqTntoV/w+6H4sbI439aIONC16ymkleAleuXPzpVh2LKYZrxru4h+
ye3vn2L8ANJXIiwOl7WAP6xedRbEkPjBQ2K5ra5AS3p4Vpy8HfjPY/vJcX1O
envNUrbIE2YliB81GjpB8FFoYWwJEbUuNAoYbPhDlsRXzpIvPQBmERcFlIiI
3yxl8cDfcNAxyAns2/8TutxWWY5GE9BV5W+D50djgY2r0lBPcwjyP3gcVYxe
RENMpcLf36VBUNXPRUaFMaBat9y393IBqRqU3WKXzoFaXfYd3Z+/YF2Srs7r
yTz61Cbwo4q1AEZdbocemR6H+kyLvTsRc4id2tzfY7MIOu98li2smwAfm/N9
JTOzSP43c7+tWSkEbTj53uqdBEeWMO/1tRk04J75KJ68AoL8TxozDk+BBEf5
1JWlaSTqTycf31oJt3ineenypuFC5CjsI5tGJ5ooo/bZVUNTsOXQssUMhDir
WzKwTyGs4ZB/5dFaoKexbnu9MAN3TvcwX3CfRE4n3ii8PFMHuz/nv929NwvF
w/efuK1MIDuQdu88XQ+0IxUxX1tnwbwyJ/m84gQqPXjh1pm7DTDKanf7Ee8c
RA8epD1bMo6gj4YkAxqhvdNz7qXLHNBN6RDVz4+j1a7izAM8TQDlbcrN2Bxk
8x5gOGf5Cy07iThjxs0gqHt3mOPhPFDeoi8XiBlDCq+GLA3zW8C2v+Ckf808
NItf4fycP4qa6SL+aON6ZX5p4ZLl6QXAlv+EFQiOIFLauO897O1Q59Rez/hi
AaJTR9q3uoZQikygYN3RDpBkvpInkbUAlZtYkrrDIEr+rc/O9LED6nJ35MS5
5uHO5NlHz01GUQ3zldPvVLpBn0kyimXBC5T3zyn820m1DXjK3f/xFLJIwv5W
lzSBrVB+87+dVO0xwwIv2QQwa2alM9kJglj3Ryf+7aS2CQKy1HJmUD7PXECd
GAtLRu+P/NtJLZlXBkqGOkHkJsPUpn86TP+xO/lvJ3X+qYvjAJcXeF0KnMsQ
y4ev6rSVIyMYevyXp86zNAgkzpWw07WXA8df951/OymTHKuVS4oxkJdpoMlN
rIYduXjlVW8MMTOJEm5kpkDUPqrORwX1oBmcC6x475tZYD5CXZYFAsd5QdOu
CUwiVx87CmNorkxYazonFyKFHXXlvFpB2+HCg1O7RHT6oNxhtcECiNKd9Z2P
6YDeGTXNkSwiEpT6eWnDuBQo+owZnZK6gOKVoAmrBu4vPjzKrz3x513qtp1z
SA8siF90kVkkIAGb4OMVW1UQw7r5Ul7rB3in0T29+Y6AzGkINXNXa6HWf/9B
x6g+2PfuxrFT5wko1dxedHSkDl7O6vTfJO0H6sBZVq/WRTTy8/fz7uQGaFnm
/i3yfADy/D2T9vQX0YXsHQWKpCa411x0iS5uEGxLblyw+buAdHxrLFdkW+BC
wDZr9t8huGNEnrj0fgGJ/Qy3Nmdpgz1x2xH9shEQKb+ddmdwHrXAQa1i1Q6g
O/BLR015DOQKlnJ0T8yj/LF6vbjYTqj5PrP2WPIXlAVZFR2TmEOXnC0ihUm7
wf+SiAP9mXHgSDF+2aYxi7Lk/XnGtHqA5CfrjZ7FcYiS0L48ZjWDmpyiq/+4
9UJGioGlD5oA5jNjM8uvptHFW4PMhKofoByyY+d0bgJO2jPuc5ufRncKlj4m
7+8Do7e9AsFdY8DWkF0+LfkLWTnukujRTgE9WXAHo3MHECqpJnZ7Z1Hr8gE/
iefjQDVfTRfT5AN04pf//ttJ0XNkEsgnTWB7cZ9Qv0wISDIYWf/bSV1U+lhB
8tsOaG50hbOExUA+08OH/3ZSMbPREfe13MHpwtyfudRUWL15+fe/nZSSy+nT
bBO+QCbjGpHBnAtWz9z4VscxRH2SzuR7fwSMnxydqrtfDO1zBz4n4Hl+2cKB
jko9HoIPyFxrykRwb1Rei5CD9whJvlt3m1JBtXq0ebS3EpjeTIsdjsBzvvd9
O9GpTIgOXxEQpaiB4TVrGHbF0OCYbc3Y5xzYkzmsWdBVB1l3pb/k3sfQj5rE
HSvrAvjBf58zfbIRTnHriO7jxNBKY+oun08JWMjt8QmvtsAz+zskXPNEVDbQ
MUw6g8BXwX6nt6odSj6zTXxNIaIgo22XLLIqGHO1unpmrQOEiUenimyJyDtg
e+3up2p4+kJrrYylCwLc1cucxYnIr3GG11+yFoR7v80d0e2G8ifqPLvLBDQW
XnM2hbcefORVHVZe9oD3Zg6TbwYBqRvnDl4sa4DsCGbtncRe8Lyyv8RZj4Bi
VR/M7f3bSTH8+pZzuw9kL/a8CZlaRC8sjUlL2Vsh+rwsauDsB5mjLdKedxaR
OAu9tNqfdpBOMuFPOT4IJ2vSQr/FLqDD17le3XvbCVwUpLF920PAckwofWN6
Hk1TXfdK2u2C11SqpoBGgGSY5PdvznkUqIo2RPV6oDPBOfSq5hioJMpJi0nP
oaeRcc1bo73gTHxGlSA8Bm/HfsktS82h8xTVfFoq/3knpe2ffD3xszUYqlHf
/beTuh5QzflvJ9Vx4WZEgHoycLEzz3isYUhblmnykbwHEBNPK8R98IO+b/eW
/u2kXFkVnaqNXkFr7EyRokY4POzEIv/tpLKVVs9HCryD66aZF9k94sDCxlH0
307KqvK+7SlJHwgaRXzfXqTDXtv+Y/92Uqwp8+T/dlLFaY9B+Fgu3PBtv7I0
hr9ulMRegWoMhKQJIhmFQkjdOqaj2ImhjPlWo72tRBjeOm4jblkCs8edTl+q
xlBa6m8gN0yD6PLwU6TL5RBYzdwSmYWhB6cC2caosuD6vGG3WEklPMw2TzML
xNCsvcIHftdc0Jms7dmRqgGRqHCZSiucf+U6gRzhQnhl/Jj0b10dfPKkvtqr
hKEhjzfLNWylwMR7oHOdrxG0hjlVS1gxdMzx0aUTywhUj/XRmu80wYbo7YUr
f4joGzNJAsvDSnhxcUGb8m8LOHhVVXxqIyIRpd9bWatVIPD9cdk1wXawXIrQ
5/9GRCMFC6/C62qgQrhfxxz3twOyOnHhT4lITCRV2Fa2DrKdXalcIjuB7L5y
tx4fEQ3f4r2yTdkA17MvvGrh7IZX7VeoYlsJ6OkySRz63AQTPR0iHkM90MN5
dn3jHgE9qe7VsdFvhbzOumMrBT+Ags2G2NC8iOiOWS83ieL6OWDSJ+D7EyLO
0jVwCy6iLa/ju4s1OJ/XSWacNQdg8+DUHxaPBWQnZJvAJt4N6Q9Nml1UhkCy
tsDsUNk8srS7mPQUfz1LtoFz718NwY/RndcSgfMo+3HDRfvn/3knddNBrJZJ
LxVq5eh3X1JOI7+Gu+8j2WaAPypyttqqHL75jWZR0mFI2Fd4Usi5CTjM3r5L
uPkZqG2zKf7tpBK6WmcLua1B4e77M1pBQeBQ0qL5byd1OjgtW5PBBebcSIXs
DaNgMrv3v3ZSWebOX6g3veDjJzFQy0yEgJn0J/92Uv35I3oqlUFAeUORzko/
E2L6K9w85zG0vkFLvqYUBUonTL+LT+QA6ZEWP71RDHVxMxo6P42HDYERGVqf
fBiwHGrlxfsp198XHj7Pk4G3+br4tmMR1Cbxuto2YOj35BHutMx0cK8cefEI
7x/DbvJUFrkY+hZ7W/m8czZQrC3aT3RVwPLv8MHEEAyRTr9TuDeZB+ck1R+F
klfDValrpNUOeE6o69pqdCuC97H7NLhO14LqpqnEFq6rXnWyMzO0ZZB1WV1q
O6cOPv54q372KoZWh3N376QhWH7w7Z6iXQPkXc71ZGbG0Lks6lstapWw9cKM
6r15E/T+MNzjXyGiO6/nzG9RVUN7mnfKEkcLBEW9PqDajOdtu2Sqp/Y1oJCd
QPacrQ1+lk9ryIYQ0ZXhHU43gToIp7oxGG/TAf4Tnl7MqkR03L0oajykASR5
5RI1j3SBD+/46TsEAuqZLaFG+s0Qjxqcj7V1A/Z9SxezISBh6uMmSU/aYKpA
7tdMQC8YiVuw6GCLiPVLSIhmTQfcd3iSFaLcB0Q/2VPyeH54kXf2HpdMF8ys
sR32vtoPBgW/jvolLSCPbEFb25VumOi++YyQ2A+aXx4vheI5X/vU1XLm8P+8
k2K8SrfPQzQLLk8LkBAoGtFfRMu9qIpB4TeJX9OFecBlwFM+WTyNPPYT9fkf
TEP5SHin140v4Bcr9V87qa2zrpRR3rbgsn4+416nH3CmlHv+20mhkLpgey4n
UM2j9OpRDodKqaGSfzuphx+oc4pefAJ+tmQqnulYwLDarX+fxwnfYGJ3yg6A
wyPRZPE/UuBj9rHEfzup4ZJj20xx32HicNOXyM1MqB26nWEwg/OcwMte8zEW
SoUM2teUcyD/dougPc5nGEk6y2mpRCDltw79058HVeZ21/7tpOILXjMXn08F
tqkFo/tXiyDcv+HlYC2GDuXyLIaTZ8E8sZvGiKoMun/53LfA9VNMibi7JJgL
TB1tGUavK0CxpsExPxhD41dfyJT7F8Dgh/StDZ0qSDJ7kvTiLc6bBB/jwfli
iHxMynu+oRq2ZsfUW4wxtG++gPD2YRlsR/rYyhrUwik3Tf11XFdndlKkTE9W
wPclh3JVwXo4qxVs8W8n9VD0Et2NskroeZXIqFfeAEd5NT3nKPDn5eahLiOm
arAQehTH9aUJTrHEPGMeJSLiwRts70prgFfztIYndytURAVTuUUQkYl0r7kO
Qz14he6dj8P7hPjhyhc8ykQU8obA8m8ndcIwg1CR2wkdt58fZ5kmoOkL2uI2
lS3g6/4k7L5pNyRRxiZ2mRKQfeBmEetUOxi4Z1/xo+8F9eI61STCIjI4fzeI
8WUnrCbJWVT//QEHrRVUVW8somCtRxlCvN1wql7s9ef3fZCVFTOyfngRnQk9
4+o+8d/fpzTLCs52RNuCcbmu3r+d1LeHHGv/dlLOYKKQ/icaRhV0ftvgOZCJ
QZLR2OwL0LspNP7bSTF9WpX6t5OKNxt9qNP9BgKJimaWz7+B7tx+2X87qYsS
7NvdNh/hU6B7iqtwNPz1a4r4t5NiUrw8McPsDw2TfqWpGonAlHku899OqgNd
McH0w4ErnbVtf2UaXP6x/vXfTuqXZtldpRMxwHjsbseT9UwYbhDNPTSNoTe8
PFTnPsfDuV8WcaESOfBDdo3kMN6PjikxvWCHZKjJzJ88qpQP9Um3q4/i/p5W
3UTtiTKgMCvr5/8j7r3jqYz/P25ERjKjJZQiKrPM9I5EJbOMCKUilYiMUMiI
lMzI3pvszefYe0tm9uZcJZTZfZ37/+8fv/vx/d2/P30ex3Vc1+P9eY3LeV4n
pLAEKOi3PCQJGDpo/oQnfCAXdmQNr5pfrYCvWl/HgtMxtMDM55/JVAge/WbX
iXcIwHDIQPZrEIYEvFTYO6RK4A9VZZtUchXcHzpFFuaK6/k4G/XrgDJIvq0u
ZcdZA3qXjxTSkDgpT1r983KV8NBB5PF6Sy0k2/yWYb+JIb/+pablAgKwZ59/
eV6qHsgtHV50CGNI64rPpS6KanB0u12UstgAf9/ECD3Zj8/tYpYld0gNKOy/
++eWXjM82ueUY/CNiGroL65n/agDhrgGbYcTbaA6f8kl6iMR1fLkb3o4NEJN
4ELS0ROdwGdrrDotis9t9SEKdbMWeCY467bT0AUPH9N5iTUsI4em0FAtj3YA
TcckbqMe0CRwrEbcWkZK066pvagT0hOMm5klvoFDXUoJfeUS+vcjz13eoRse
vOZIbv/+DequrFVROi8h7Sn9CeX/D5yUotO+8sdKcSByQ4Ky5fAM8vGo0+I7
Ngv9lAEuDm8qgX3s0MUl3F/+ulzkWSI0gdrhZm5T3g+Qxv6cicRJSUTS5T2U
cQL1UClVTdfPIHnCU5fESWmaX0honPYErYuEC0/OxsDON0VuEic1+EUiHfse
ANeywmMbcxLhvlGMAYmTWg2P6HP2DQeyMgU/wS9pYPsdmOdxndTOZPv5cCkW
VAv1BobuZcHxM0O2JE6qIpqTbUckEdLWRSUD5HKg67grsXMSQw0/5Y1f4zkg
/Rmt8hh9PnxHl3VInNQnHZsCwnQmJOyJM7kvUgRG2SZPrZsxVNP+bPNmQw5I
srPbxdqWQnDrsEFTMT7Pog9vsfflw0/J6BPOcRUwewgj7EvEkLl2WOT9wSKY
bhVNCaYmwPfpN89f4vP5p+ZOefrRUlAMEaRWeFQFu9bcFfPOGGL3K+gf/1oO
gbPJof9WqkF2mz118RGGVMqaGIYLEfh1aZe3Xq+F9trKU4sqGJL2Ofak8VgV
/MsYy7earIPyTJ49oYIYovZ+oKuTVA3MOWWnus82wkJp8mmaHSISDtxvnjdU
C98vr62+7WwGa4pkT2I5EXHxjuwLMG2A6NmjA1StbZBHR3bV5CkR5Y28kLiv
1Aw/C61+/HLohI1uz+RsWrx/PfWo6NZtA4/ZGhu1Pd0g0enxnjdmGcmv3fzg
wNsJlfFJHEO4vzda0K5Psy2jFJ1S9bbxLvhKYBBeduzFfZn7wOHvS6j9nu/q
Tvb/nE8p66kyY4ssALGvLTUuAk0oMyrgpKI8BoOTwn1CjGWwNV5IFGudQRUD
vlvHxGbALcfKcEb8I/xmoNYlcVKvsqWnb592gaoP+w46ygbB9bsmn0ic1BiX
cODlcA/Y24r9NBOOhOhgigUSJ1WpVScn0uoPz2nWim/GxcOAE80miZOizZLc
4GYIg8MyzoPrx1Mg/Mj0KxInFX++m6JyPQbIK//k5Uemg9Fcc3PNMt6X9TrN
BlgTQG3J8Seb2VdgfPTHcBf38YGHJ+8qmiRDVE1trqdyLrgxXm2zwHWyyXPf
6Hs8H6seltrDdqEATN4TE4m4Tl7KctlCk9kQc+gxJF4uho7UO5dInNQw5R+H
+K48uMDPqXJQsgxc9EW4mHEfX5KJNKAoKoQgLtWXP15XwCWnroAHcXgffzz6
MWCyGPqUL+yZoyTAu7nS89f8MHTT+GjJC4MyeF2cnlHzugr6fmhVUr7CkK/K
8Jmtm5UgIqL6TLiqGlRtDAYCHmBI8JWTzLAhAWLvv7o7d6UWoHLoh5cShtQv
VKo/GqoCWUNXshTLeihfVL7YdQQ/fo5B5iWKWvB+HHp1ea0R6lKOXYwZIyIt
i/Cday718CGXykS+uwUcHWDt3Gci8so6MzSp2QT9Dy69eTnQDloHFZn/XiQi
BrlfUSparSCuazdrPNMJYeulzsShZTw3UhTXQgcsKD5SOZLUDUVbXBc59ZfR
jz0il1/qdcELzY/Bdfo9sKIsPilybBnFrpbJZwr99zgppvzEoTe2NlBZHBNK
4qTKBFVnSZxUvMPORRmPYHiV8k+fxEk9Zgr7O3fQG3R1EZ/lswBw0g9WJHFS
P9v7NBLd3aFjPl6sNDkMbox9OkDipG5b7zpWLviB8uWw6YTNWGiXvRpL4qS8
L7HPsDaHwplY814ibxL8eNW1cgnvNbRXOhNH+WLgm5rIke/3UiFBhkr7/E8M
7aOX4mjhjodhag6T8LkM4HS0vsaziPvmdAn9J7UkmHT8sg9InNS3A+skTor7
au2ln6zpkMddb8AWlgca6/qZ4d/xvHd/58cDnmx4sKWuUGhXCJG1NExtTRgK
j2oT2bueC9oP5dUZrpSAwuVTH2VLMTSjeOcCZVUBfHrrJXPStAwYxKiFD2Zi
aL+J42NOXCdX619zu3dVgC+lS0FVBIYwFsU7dy+XAiEvkFlShQAlKjd4295h
iCFCbPclewXw0v95p/2mCsYzjDrevMT36eNk3hwrBCdH9Sc3cP08vyx+pUwP
Q9b3u05bC1XBMaenT05T1kFEoi07uyiGgnp6ztAo1UDMSTujHasGiOk6rnB3
m4iGROrenyirA+kLVW2F55qBSPnqsFgxER1wNWwYccJ7t4XrUY0jbZD8xLrQ
4xERKbwyLQ992QKffTYuHF7tgILUX4IW+/DjXPX+w63VDp9S2flys7pgcTDW
NCgAn8Nje4sFJjsh+fGvTYuH3cDzPfWhk84ySrVomOT8L3JS287KnK8lPoC6
6E9RY70ZpDH0jGx5agaOXW9KNTtSBzQh5LwKkni/qMl4yuxTDb5kskUz+n6Q
/OjQcRInNQerMZlU7jDZG88jExgKmia5OSROaq8G2V0Nfj8wuZlMGIuMAfP0
22Sv8dy448pz5nx+CJy8vP8WpXsC7EowppM4KexGZn7RYhTkUDLL0rxPBqvO
04nsuE5ydLC676jHQX+cU/KxoTR4caCZ0x/XyWJubMzvfiIw55N9p336FYiP
2CVInNSiRQPx0d9UULvxt0/oWi6kVm7W7x3GUPonv03JnSyoMzDt+LSTD9lV
xxT9OzBE1/voN5LMhQljji80iUVQ8PGJyosq3Me/Voz2L+eDPO91VpGsEpBx
C2MhcVL3LQcoD/4pBPO3U9M7m2WgWdcl+TkJ94v9Y1rflEtA+1wJ1+uISjh8
7nJtWCA+h6GoX4amHB5GlFvx2BEg5fnDgSg8Z3ZVWDfZGlSCRu7W2YX+KnjY
ZoC48ZzpZRs3vh5KgK+Om/rXvteAhISTsr0C3hObQi+W435tkl04SXa2Hv4e
LjKZZ8Gvz4swclP6OuCyXTB509YIwRO/CBE9RJTk+1PKq6oBds78pN0X2wJm
zc5hPp5EZK5ydkU3sxk4TEI1KB+3Q3qwRFWDCBH9qmyf1/Vqgxun3Rj2DHXC
I6J1qDdhGSn4inA9ssN/HkpyOBjQBWvvzh+1f7eMVB0+/XFU+e/N4WTHA6Gv
9TXgcG/18JJeM1Khn99dWiTCiWf+D0yPNEJeklrq7aezKFXy1kvhtSmo7MPG
cys+QcaV/MskTkrWgclRZdsD2J60s0h/+wxkgsynSZxU5YXQ7BHyT3CZyfHl
m9Uo+DTbdJnESeX/yMn2rP4MWdpjk5K88RA9X8RG4qQcXJjSNAojQe779xxV
iiTYmxxTH4D3GpXk7m3/yFg4y/azRZ0nFYrrQ6md8TwpEso6XxeQALWTBcwc
NpnQwmtvQeKkLn7c1TckT4WrjFolOwI5wGifF0TipPLYeqmWhjNB7FfXW1qU
B1asd8LP92Lox4doXs/AHHh1Xkbs6fVCaKs49UC6Ac+fmiLl3OL5wGWn9DtU
uhgGM54GkjgpoaIeiTnhQmBns/+iYV4KlkGjd3yzMDRU9vC2g00xOAu0Xn+4
Uw5DulrPGnCd/NiuYSZ7ugyuHZI/bCCGgIoqn0vmA4bMom13HzyrgGbzQvLp
BQI0GZ78EGmLoVpmJpEqNgKIx0ZEhHyvBo53DcFet/C+My+8x/BwNdA4z9lJ
sdeBdoWusOkpDKV06ijrW9XCymlpME9ogP2WBnSr80R004T1bMmxBpjb59w7
ZNgMnBtsWuOxRCR3du/dlq0miAorNkxlbYMDNjRcnRpEtLC5LVfT0Qr/mhUX
b57sBK7oy0r8s8so2Ni4yZ6tE/482IkKGu2EEzJqpge/LiOeWLpf6/8/cFI/
wpmVvuvYgIPsZjGJk1LjFrQgcVJX8iL4VvlCYDFzaaYL173OLzs376T5wTXB
rQOC+sFw3PfePhInddk5H0sb+AiFNftFW6gigfH1BS0SJ+U45257ihgMbfsT
w223Y8FHr/c8iZNaXrr7aDExAugio4Oe5iXAi33h9o24X5+Kj9zZ2o0BXYdb
VGmpyVC0OxBL4qROFLCYGAzFw48XfhfnGtOB545qJImT0ir7Imh0OgV4RK3M
dSWzQXlHeZfESe14aW18H82APjqqeNWcXGBq6djewP36QoF0+S5FDhyjFeHf
x10AbGxpH0ic1J7m255nA/Mg4mZzFomT0vY9cYbESSH2k5vKbwuAyehhqxBH
CZi8465iwnVS8BRhi6K0CO74Kwi6+ZUBoxqt6ZcEDBU9OvRPWq8UNgXbJbSy
K8CR7WmqeDC+f1Oj45f8ymHR5kM/NTcBaGRETk+64OsVljupVxGMvCw8171V
BXK/xg2Y72HoNZU390h4FZw+wdkfwF8L9EeodJLOY8hQsnvMcLEGCgZk+7/E
1cPdZfaKRtyvxW4eOeH3vh6iTjYEHFJugsqQx1yfcb9u3KFJFzJqAh77vfaJ
yy0gkXkrpuUZEX1JvHg0ib8VOPc+KWJi6QDLnCFBTmoiEqI36Yl/0wHkhkqK
k1c6IVPgvc545zLyW/3rRv7lf38OZ5cv6k0VfoDFY4Mmbtdm0E3DJ+evrc8A
V84gLb98DUQXcVO3C2HInZPjtNOlOuim4mmcPhEIpjC4SeKkHLPINYxlP0LU
aUreXr1wiPlyXp7EST3TPZchIxIMv14+KP66FQOjxX3TJE5qnnjos1Q+/joF
K89v/vEw8zl5L4mTGpf30dB9EQNfIqnWeh8mgSPB3v3+Cum+ykMnLcl4ELbm
NlO6kwbXXBJ6/ZfwXp/6h63eNBlaV8hDzTqyQCRepXJ0Cs8Vwedy4/+lw9jo
Yn8e3pvvHFhO4xrCfZB6bcXsbTZcYT50ZYQzH97U1T/7i/u1MiOlYTBFHti1
KthSLxUAlePtcBIn5Zk9PrM5kw9MzuJ+UetFcLFwstcHz5MZvsUe91iKwE/5
cPe4dimA/43uQ+l4jxZnP0yVWAJnyzXtFkzwuTshxPMF18nDl80iorvL4Bn/
/m9ro5XQ0kmd5+WN5/Ck3KBY+0rADp9YtZCtAnIl+tJw3K/tDEs+nD9bBcJ7
bZuq9Gqg5dVtkQg5DK0PTA6vvKgBHbI3Z9Zr6oDe/HDlZ3oMtXaUpT6kqYey
ONsA5buNIHR3caashYjEmXJM13sa4aNqAB33cjOsPeTQKXcjIj3jE77dQS2Q
az40uLHdBmoPBi338OC6uuqZdme0HcooBi8KWHSAzBDheT1xGfH2yXwXvPa/
P4fv0yrLtvSqoP3Z3CzrShMqd7ngk06DwV8KvmTLp3Wgf5LTgoF3FjV1kJ9+
aDENVlv1ObcK/MHfQU+HxEnx/Uwri7D1hbLkqBav2S8QFy90jsRJTfzAbra8
CwJ3oa7VYo4YWFF0NidxUuUm93M2h8JAx1iI8CU4Dh6aBI6QOCn12D0nsKlo
OMjLMmynnAhnb79qJnFSI9cOijxJxnNjkb+DzMFUmF9cs2EhYkjKw1vqdWkS
3D3ATyPzIBNQcvBhEifV0VCWtyieDklXIr+e3s6G5GUeqYYRPGd+uXf2BmM2
xOv+zpSCPHgXHEij2YMhgqBCTYBrLqgN/elL2M6HoadKfx424z39nuyQr34+
rITWq7PjOTHnXze7EML1fE1tjM6pEJpmEzbMFUsg6YvGQFA2rmOpW4cj95SA
T/kZxoeKZaDKS7VL4qQkbWYOJPGWwc+rU31ZmRVAdjQpbAjv3QoZ587aVFXg
c9i6sBlMAEvr61vx1hhKtq5TedFAABeDSqwsuRrE//S/+XgTQ89XNEyP760B
r91nM/IUdcBeReFPg/dr0catsY7AOmg7N94m7N0AXzsT/qoME9GuGy8Dp1Yj
dEmdHPuwrxnUfJe3XoUQEWF3k+IqQwvQefb8G6Jtg/ZS5SAqGSIKCKV5OK7a
DuSserlyr9thup38/T4aItLxkdq1IPu/46Q2xUFx2MAa2g5ImpM4qU7mqlgS
J2Ua4avgIRkIMfw0kiROKk/CRuyfgj/smXCV4iZxUod+tpM4KclI7xMbxED4
d4/xqEZ2FORavo4jcVIeQXruCofCgKzzdnh7cSyc0qAU1ML9+miJ3HoQeTQw
ltXdNLqVAB/ZjqSSOCkPZ/n4lJNxcOLhWc6inWS4qirnQeKk+s+qDuZxJcEV
qjVZtpMZMER4VRCB50aj08kZnm/TwPCxcUj2tWxoau2oJXFSEc+51HJUv8JM
1fA+asdcsG5j9T3bh6F3u1+u72XIhRIDGZObZ/IBWuwrK9pwH3880sE9mgeb
Wrm3Hh8sBOnuOOoTNRja+JtblbxWAEKTqW/UdIrh3zS5H4mTemPnXcBqVQyR
m+emfBVLoSGpiupuCt7r7z4hY39fCqdcpC9PRJYDw1L3BfEQXIeNQjnUjlTA
YWYW8hkqArC8jdmWccT3y9035zKfE4D8UX41K101LPh827+thaEepdiZ+oRq
SN44dtxCqxbX/xjzJjw3SsomTrDz18H826j4mx31wMus1h6xQEQQdMfLaaIB
TCb64hOuNsHGLZ5gxxQi6qwY/zkd1AzKAs6eZ0Vb4WrI+6O/1YiIwuNu4d/m
Ngjh2Tx2PLkNOgLKnVaOERF2QWQPcv6/41N6gjsuHfnlAIlMV6JInNQ/5pVW
Eid1pN+bbFMrBLo86L+TOKnnmafCzgwEw+1enmh1lxAY/jz/ksRJfb+yXi35
MBAKwwpeVNyOhP03QhZJnNS+RRrFKpMvIDxQxCK/FgPTRuEEEid189ke9UrR
KIh/+pclyC4eqlntrwrjfj3SQx/snRkLF64ctw+iTIZB5tQDJE5qKzn+F2tg
Inyrql//QJ0Ov/mY0w/juVE+/R+i+pEKOou8LU63v4JoaUoqiZOKu98mNxSQ
BT8kKYsZ23Jg8X3rnsR+vC9wWS3VJuRAWes131LLPKgO39JI7sSQayY393Pz
PNj5KPFETqMAzGfd+Hxwv5Z8Lcho5lQA77xTnKudi0DgSfbokxIMfXFoq11f
LIJ1+cDPfCYloLeROUediSEfWLtnvFsCfsOCugY5ZSBjTT0fifu1nlDL572e
5SD6Q6I3eS+C9V8Rd7bwfn39hdCKLAcBGMUviHM5VcFvsnobVUMMXXObTVJQ
rga5L06LLeU18I/WVWcVz0tPBz+Un2qqhTVJ03TNM/VgLfOye30d17FL+7Mo
nRogioNB84Z/I4S9lNspLiKi1lrjcE+eZlhMGL/lbdUCVn6n6wWMichJgJHj
0O02iJyQkNFcaIXndq2S08JEVPYuO0iK/v9uDtN4miRt33rC+0rxKU35GbQ4
XjdauD0DWY5+y7WiSWB9R/WaH94jgieijLIrE8Cy92Olx5vPEJ0lRCBxUqGT
MbLvpgPgsp4BhQ1nBLhQ0miTOCnN6BgWrDYUKCUCHh1XjAF908hZEid1QlOX
6aNNJNQYhubX58VB1DW9OyROim4ltlxFLhb8KLpZz5xKAgnT8BVj/H0LxJ/4
GLEkgtGz3fivdGlwzD4x8MEihrxrl2PTr6VCncbqFkhnwZGvqCd3EkNXkpj7
b81lAke0hZeFMN5Xir6adQ1iiHrp1xnsCt6jo145HW3Jhcfm84MkTuqkn4Re
2N48EJ/+/jUnOh8KHX3eeTdhSIwmQkF4fwH4acnYnagthNmht0Qi3q/7WtYC
m2yK4D3Dvguq0cVQJZ56nDUH792lJ+lZXUtg6ccFxu8DpXBZqNGdxEmFZCSf
md8ugw62+7GDxypBQt1fY5z0vKbaa3vL4xDYWIY+z98lgOOzo7HejzD0Sok+
69pmFVgPSpWuitXA+ZgMB0wSPz59TMgPy1ro+Sz3cuBzHVi4pAnvocDzaiC/
kg5HA6hVHMqR+dUAxnuFBRnqiKj2zm9H3fImsDd6GVPb3AzOr8qcx18QUSBj
nSaab4XsOV7Gb9KtcKashf+VPBHxPUc6XOH/d3zKB9o/MhZ1saBjvmusYjeN
5uhYqyvzZ8HC7GbK12gCfLkjaa09TkSxWeL5Kafb4DWH9D0LryB4HMrtSOKk
RF4kn7l9OBCs/g4T06jDgdtvZpDESTF/Jtx4IhwKVA/vX7+qGQ3CthEZJE7q
1+L1RzmNEVCUSMP0a08cbOo1iJA4qXXOiVnVHzEg+CfvXOPdROhMmCAjcVI2
fynMNyMSINtF3smCLxUWpwUr3PH+8uqkT6A0IQWau/OJQTKZICkfYyUyjaGv
A8Zuo8r4HCrfn9JKzIZOCbOQvGEM/XjRUP5rKRvkch6frRLPBUvnQ49JnNQp
URMxmtRcWJfiLzX/lweL83tHSJxUm/9VBs7kfOj3saH6fqgQJto/X2Un4Lnx
CQf1S+oi4BLiKH89VwRF/7iNK/Ix9MFfpfkhXQk81xDLdThSChe0CzfiEjFE
5fx+k+hSBlTT6iW06hXQzS28f/cDhizfx7FWciBwEHzFddyXAKOn1gNInJTa
McZJ9ewquHHY5IVHaTVc+qWV2XgZzwlu4irUx2uBQvzzqzSmOihIy5Yd24ch
g3ffzsbW1MMdiKjmNG2AWvOrzFqdRGR9ial5xrgJ2n+vbnUK4rro3HT+oQsR
FVaR21xwa4VHF+Ppn4W1gJaK42MdTSI6q6/HYi3yfzeH11i8znaoNoNiNGWN
et0QcpW70b/NvAS/LXxO8Ou3gqzc6TQSJ2U2xVxzl2wQHC2G2aV0QmDL/fN9
Eidl7apf4GgRBPtel5H7cIQDq879cBIntWRUbUzipIarko9zHIyGdOWFYyRO
ykm4MGNtNQLyJhfkiXvjQGq4uJbESb3WNH1hxBMLa28dJj86JMKSlG38MK6H
Nge4xZzpEmF1gs9dmT8VnOYdAkicVIlbJq8GYypQmQq0aOllwnTAaQUSJxVH
fzM4uyYTRI+px6Ev2dBDt9Hui89h/pd54/e0ORCxRL+/4EAuhBzzEU/D5/A6
uX6zYUYuRKh5yM9u5cFlFb3RphY8Z2o2p8p05UPXy/EF+r2F4BYte4UCn8Mb
le+WlLmL4M63ffvMqooAVdn1n8FzY93OVmsUfQnsNVJK3eQoBcrWHnkSJ3X2
/WnNlqIyOMl4Pr3pWQUc2TvjfN4HQ6Yxn/oO2yCou1Fv+DCKAHwP3JUyzTCk
OPNZ/9NYFVjW1aiVdFfDC5/ZgeeyGDre99jqlkEtcDLy5N/irYMeX4G+izS4
TxmI90Tt1oOz82ndny8b4Htc+g/yNrwXP3jX5PK5Ce/VZWfadJtB+7AFxZw9
ETkzeGrQD7dCe9Vtyl75FkgtejR7QZ+IvBuvjQmutIHHDcKgBZ53EhSSmiXI
JpEFn/EVj9x5+OqpIOsfivv72+0vUpcwdCQ6WTWvzg9GyAfZKw/XA6siYbnY
HUMCl8x2ml84g8OQFr3ApVbYdjdZzD2P98r+iyzjXwOg7ICay7nVNthv/Mcw
GO9fx5Y0Ml7QfIastdCP61yNEJFr+iLtGb7vUg+lVzV5Qved3kAJzlYIJise
iRXHkFno/RK5Fn+QvhCa+1K4E7zmqmc5fxPRi5YpjcGkUJjSzfnD4dQJx7Rv
znbOEVFVR2+wkmAYhCvN3Rrh64E6BpZzxm5ERCbxS136cyxIc14KyPzUAya3
M7qFrYiogcCW6V0fB7U8zy7v+9kHbl8sCb97l5HjeV3u/RapoHxW+aiC+Xc4
/ojMebN0GT2PoeV7B+nw6JNsTkL9IITem4y5t72Emsf3UAty50DHw2yrd4pD
0PbhzGmq4SWkOiC7p+lkLghsNF/rbhqBRZFu0S7RJVTTxEdpd64AZgfDChtF
fsAl0ejkiweWkPhQB/UKRyEczby3x3ZhFJqmLmyU+i+icSaylHXDYnC4aG32
9MgY0KzOFHu8WkReu1+MHxwogc5b3VLC3WMQ+Mk4eptiEZ2UVT7rR1sGgkGH
Pk1vjkEn5e12y5kFJCE2dnqwoQyMaHxZ1wbHYdhR6RKV0gLS470UKZJSCbuV
nI9P7ZsAh7ijlLPcCyhFUGChvRTBp8CoTzA3AfRlHt1t1vOIT3G15ZVyFfgz
37tMe3QSkpxW28uU5pHT/WOhr/qqwILmUNpQ1yRUX+bRvZU6h4aPD/Ztn6uB
2pyqPX3kU9AYFiJz23EO0bpLD+VX1EDMZZ3N5P2RcK5CJigA15nKFZ0Dv/fa
waa67oerVQPwUSA6sNp/AZ0tiPVVz+wHitxw2l3tbKCzDzJTwHsl53d+9e9l
j4DlWmaXKV8HNMXpOhXLLSOVG7+aU0p6obu7auN17BRc81X2GJ6cRVMW7S6D
e+vA3Jez933LFBhGtzxvKZpF1b5zCdEf8F6WwjnUwVADfbNHRW3YiKiY4ugH
y+geGAs79WPrQRAQ07vfau7i/ltw+Q1DkDnQSxysuH5hGpp4ab9Y3pxFAr6K
9hxm9bD9S+o76+1pOFmSb+8lMItunJU4KdlQD0N0lQ+tpmKAPqZfRncLQ6L1
DW08N5zA8bzXzuuhREg+W9LEjevngYj4oB5Nd+iVqGCaz52G/uzzWeG1M6g9
p7+p6nMD6MpuT/P2TAN3588PWNQMklJ4nfVjpwF8xlyoYw+lwuWUlJh3eP4c
Oin8uh28Ibby/fEHlNngK+/cWEXEkKGue6amjT/krktaqEnPgM5sk86p0zNo
WeVk8M5mI8zpxrLF6s9Ar2GZ2undaaRKeFnXb9EETQm3538q5YLexUlv1XkM
Jf/mOWCoHgwPcg7e5vpcCBwJFec7cR0eEJzm3q6IgMjt4x9zM2aA2XZ+RCVi
Gg0FsAo1434Zsfa15WvjDLCqLV4cwnNRXOWjDX7vZvC2yiHzsiuB4PcOGbHd
GOJ/pib0Xj8WXKtZ3d33VEI51wOGc7g+8/hHU9vhPc7Y5vGTtwdmIUgzZUTh
4DR6cb3Q9/nVFuhqvRdTLToLdympE8yWp9Bt6qgH05m4H2etvXP+RIA+G4fP
Sni+fc7hH2lHmQou1/MH3G2rQZo1M/loJIbm1YaVjZczICKwdsUheBYayFc9
nptOIa/3grTNua1wKfNYzG75LPCy3DtcdHYKpZ5hpdG/jOe3vm8iy001wOye
f473I543rt+EKpZsOHLYzeLHuToQkqEecnHEkPs4JdWaXw5cOTs3YcQ9ByX3
Puv7hk+i+3I6RnUa7VDEr9aXf30OpJ87nLG6M4nCi39vjM22w74zxUVDAvXg
I1RcVWqO53aPDsX4jlwo+3mMtaWoAfZWmz+J0cFQBmQrC5nkwyl5P3vqxDlo
m9eWsm+aQFRuqnsFljpAjNEtW6N9DjKmtuSU3k4gVVGhRCn5TjhgCQ+w9kao
CEnveq+I91b7Q1cUSwrA+6HgjeHcZthhlrUf4cVz6SrNgj1lMbCM5C2mcM/D
n/taHwXXxlG83qsqF9QJd/01rJ4qzYO8nUJxbcY4so9em8yk7QLRe1fG4llb
4UCmqMbF/bi/3BMQ9/xdAlfGEya/cbVDsvI8E98MEY2TSyzwaZZDvXwbGvSZ
h4zTrCPCQuNIzPRv9b8XXaBbxHhCNWseTo0+jWpeGEOcH69nReZ2wR7LunOS
8R3wSs3FTqCeiObY5I7061UCc9TLhvSOToizW7CTCSOia+iUs70ZAQZvEX1V
l+Zh3fFUzaEXY6h08Ul0M0s3yA9RMgQyLkCJ7en83VNj6K2Hg9pV7W54U8SU
ROfXBa7CFedibYioe62sgAfv20Wx2o4RNMlwwzj8q/Qf/LxWfx+9zeYJ46vu
vBRVc5Ajf/znrM84mrjRl2Oo1Qt9wUeGjsTPwWGBg2EjWeMoktnUxsq8F2KZ
EnuSd3OAgSaMvoetBf37oaFTI4LBIX604BLXA7/ra1i4txbRazaUE8LQD2yp
tb7PwnNA4oAsa5j2LIoUcnin3TgNOs/03I697AbmG0aXG68RkZLCyK9jidVA
RW23lXOqBzbIr1JUnSCioff8Up7pNSBUn/HkJJMr5KYSxyefLaC6dDqqQNwP
wvxTRikHE8FQj1nyGK5L5PGmDajWHYadchza23ugxJUMc91dRk5qFBTJzrWA
TV2m/36rF5YxjscLo8vI6+ghPZpLdSBh1fFcTDwY7gvVr3Hi+rnve5t57XVb
OH9lepj6ZSj8fDOU4LiD58AnghqmEo5gd1j6Rzr1N+iWM33FUriMxNgL31Tx
1cNN8UztC6HfwDe0nO+v/zI6IxCWZL5dD9fort7ja4uGDffV7BRcV830EpX/
/HGD647tDWfPxMEhKjqe63heZTpNpBTsfQcCyydO9Gj1QWhpzNOn95fRF5XJ
9DqqRriu1PKJdaUP5uQWTrqIL6ObG9XsRhuNcG+i1VlXMxnm5aIe3sdz7OCv
jhHqGT8wWTVReiKeBk+pYj8V/MZQaaYRnfpUICxddDMaDvgOuoHWgrt0ywgE
1OKGmpvgwPPrp+UP9UNE0M4pp6kltJ5tIDHg2wxFPD+tKiyyIYXwIfMInnsT
Q26/bU0KB4yvOmzuXw7Y/hZ0xWYxFPShcerp0WgQz5HODmnsB4FKZN6XvYTo
3nila7i2QP2+Rn5BowEQG962Qq5L6EDoHSeCaStQjLesSCcUQHLnhuVdXJ8L
9S7AHqYE2OO2703gZiHwPOlN//gdQzLWwpr2WYnga6EyZXFjEI5oOtMsiS8h
nQQsk5DXBnrvPpS6HRyC6FgZ2dCfi4hmRP7Eh9/tYKNIuQLHS4FRUvdlUjOG
HrGFl4ssp0IT0+DrJe4ymG57aipHel6Q5d5MMcF0EMqwMlRlGYbOVOU906GL
KD5sUU3mbCcUc0NH/cowPC3K8T2usIhGI68+nxrqhHph/Rx31wogP6KtUVeK
odqXr+gYX2eBY9Ja2p2ISjj0smxAAc/n7x/TKzv1fIXZ7DnGd79G4IOzEFXR
+AI6mCYwezGwC/YaWmpfG/4BvbHuoV3OC6jMoNaL9ia+3+9xGBdFEGBgiCrs
XxKG7ptf7N/JyAErRlfPi+pVYFNpIV8ehfdrg8+MNsm5sHL+Z/vxjlEI2PYl
8z24gD5yxycwkOG5c4Zq8ZD+GHxsiWacyJhHNTSX7O1LeuCUz+wtbfIaUC7Q
FIv0wvtynvzyQygAcasPI/oNNZDTJfTq5Bv8vL72HKK6Vgg6930Jcw1jEKpI
O9KvOI/nEK1sd91eqJOhSywTGYcPaytPPw3PIemLPxcukn2DU47S/mwpdeDH
80aEyhhDq9kncmL2lYBVhblxp3k97OvvaqjWwvsX/0GRVp5S0GDwdxGIG4eO
ssmf44/nkP7icTu3ZPw4JkoSqgcm4NvECAP94iwaKG19UmjQB1VqjsmGtxvh
Ed3hL1F4zvd6HpiyylYBN16q8JrWjgMPW2xCI9cc+qKXNCfm2AcRPgNm+Xnj
INpF+HwOX+fmKq+Wzu2DtBNyYccoq4GbkaC0aVONTlwKFSLqYHBJIm+kZ18T
yO0tn/vIh6G58pP3I09Uwp5m+wrTb80wUWqbwUWJoV3BlR+DrwngMrQhd9mo
BeiSrDJubhBR3a8fMpmjBGh0DWMRK2mFOcHAkSvDRPRJNfXv28UqyGGZj8hX
a4MDr3Im7ncQEfua9+CZO9UwT7gvPtHaDtduv/KyyyCiY4IujkzvaoBnvD4q
wLIDuL9A8m4EEaHwSTl2qlqopy7kzHrfCefUT6o9xnsEt1sQrbRxHWDsZY+b
OjuhoF1wSvEhEUl9p6w421gHH+q/yuh4dOF5NmXssywRbU8P256bJvU4Cu6t
3i741tC7ce4sES1mxrm7GjSAWT5LfVpiN3A7CAcEbC0jponn/ndzGkE/OE7z
LGsPeKUnUXuNL6MOStvB8DtNYPG+kUfoQi9cHZG/LRqyjHLj7H5elWyB4uby
FamsXhD+oyx2124ZEQ7UuhettMCRWcsLhr+/QYXShYq1I8uIVVYqoXVfO4Qo
6G2pWPcB3ROjgXdrS0hyP82d5q52MLm6ZUPs/A6n2M251j2X0AuWJkYj/Pyj
aqy9JdT74WVUGI2qwRLSymwr9iV2QpvpH+fJ3AGQKTcY4h9bRG3WIQkTB7vh
aJJglv3pQVj3+TacX7CIzj9VKLxj3Q1e7yI/idoMgXr8qmTr+UXERH3jreS7
Hvj7VJHv49oQEOsVjErJ8V5TKLyTsNgDmoKK1yIfj4Cw3YkVgvECUi6/rSLG
/Q3c/FhVrXVGIMvXPOMAvi4q8EP6rsw3WNNKKQqyH4F3mcyeZfILKPdc2ut+
fM5ZrbfaiKI+MMn079zmIwwRffyPKSc24nni9HvDpVRo/Ztz781ANfpVFXmR
KQL7j+t0S1lMB5VzQD1QPK348AQKifysPnBzAeQazJSS07Lh0LOyOb/cGWRH
X30as5mB+BOvj+wfCIJJWcUCWtwHaYuPTAS9cIG21mvXX+uFgvYl3hoN3Afn
buplv7jhBjGB7dJsvIHgVcT5Qxt//WlL0T+6AW9g19+Ced+VMCijkqWpI33+
sJWN58HTd/Cm7OCRd7cjIFWOi/ECvu4pKnMpmOgN0tNMlZyDcXh/CSduke5X
X+VI+XY7EDyInLtvpBIge46L/RueW54+SjnOrBIM32wceNfNU6FDaY9y8gqG
qBc8I4VqIuBdTHo753oa/FpL/TP4E0O6OrXsBazR8KyloTDY+ysc+B0kghbw
XsAUtkXOGg9p+9liTlhlQ0iTnWT+HIYaq2STDM4mgKlcycNBkVy4vakF1JMY
2hAU9776OwmmHO/5TxbmguiBlRbhcQy9udusW92ZDA5cOXM7MfkwvXjoE8cg
nntTVa9yNqTBNE1T6GvRAqC0abnQi/tXvH1O4Zu8dDhef11cv7IIekMzylxb
MVSmY9utTZ8NV8mvrlu7FsON+av8DY0YekxTm7K/PBu+/TP8cE+/DNJSrjpy
4P7yrkT9usjRPBDwmtc9K14OYXGPE2/g/vJWWPqU8UAedHyjPJPGi6D+8MQx
u3gMyXIqc6eZFMK0c5JNPiUBmi4ve0XiPWIotZG3RawIrLomRfaLJMAlNwuv
TtVlFHol9emi/8B/7f4e/enzGp7mVbAqc+AA5o2hOGffgw/ySkBWy5uhZbAK
eCtut7q6YUjYN3/ru1MpOC4Qaob8zEBmoMY71rgfJeiyHaL4vAxj0WzAfzEY
guw02hJuzaC2zq9/uRbwnia1Oxy7XA3Z5falZNYYuq2QISuvWw7kx6znT8jV
wKjlDascvI9o8dzSTSCWww+zbtEjh/Mhm3YtnaMQQy+OqgldaysD6XLnwBvO
OTBKyIRUROILZkzedpUC6xOq+AXrWmizMux2voOhgymDLZT7EMSfmrot2lUL
9nYRLtuaGMoOe3EPK0DgI5J4iUXiEyS+OOI+QPpcrnHiQdV3TnD7VtTtlspA
sMHo6Y7h6+sZzApq+D46dmRj59KZejCZaecvlcIQC8zy1LFXQZQ+o5BccD2Y
kYlqu4pgaG1rgpbZsQokU23vlK2FgFbxZvgFfD8WPDNvkMl6B1Lcok3ULyNh
M8KWPx7PmcMcU43bnz5BuG1ovAcB7+W9jzX/3+eyvrtx/axrNZjsKVzaPor3
qQu0HGEs+JxTSIq97a2Gw/Mf+qaFYuHgy+hnMxt4nzU6pPDKIRCEx44zrF9O
gCPaPrHq+H4ckTBVM+IIBVv9jT0jDk2wq7hdUrJKRAP1Kpe9GGvhQCuLYfdM
ExC+GpeQLxJRjqAc4+GXtUDF4l6rvCcZYq9yX/m4iuvGwcdUt+0iIEz2fMPH
klT4mctrav4LQwlj17uWnsdAb5xjm8hgCziys9+/WE5Eoztv7spI1kN5+53Z
4y9boeu92eUW3B+xMMvQ+sZ6OPralEblXAZoRY5ZSxHxfVe/PmXrGgfSA1G7
4vJZME4mHquwiO+LiAs82MUE+CjnlqqQ0w6CSfvOTlsS0dJzCT/Rjkb4GdKg
X2HcAUxNvSx/7xJRDWWBfbpNE0jftdcaw3vzH7MbFTqkzwkomd6yGE2ED/s1
+0zEc6CMjZUicQpD3f693yaKk0Fku18wH/efvlKjw4EsRGTVnmk4mNcCI+uj
WwoaXZB2MMCtcGMZUdnTNfQ9a4WUdRee9Eu54Ke85EKG60yv6sDosF0qNOz5
XjBXlwe3sqpLaIcwpEFR/fm0ZAaMLhnWXo/ohgP6tAY6cctowmE9rbmxHWI9
ZlK/7+mBpr75yS33ZVQv5THv/qEDjsp2vJM7UwAT/Cb8tN9w3fjgTP+iOwv2
jNCU6E8UQtnhlxbybfj1bxpczJjJhrdZj81krvRCXrT91i2+ZcQywR1KMdsJ
/ONsoo7JvWA4Xn9wlnoZbRkN3CK/2gXWxXrf+qyL4U9ei4hNHYaqOVtDHqrn
Qhelx4iGTCmQvyH3ni3D8zC92c2jS3kQr7y7R/ZQH2we1fH0+YT3BeYv9wgB
uC9XJjww+dAHSofWr7SaLCE1Mgv/3n/dIDTkmmo/Ugadv+oJurkYmu6SOy5o
XQDTZXKtU+xlsL4s8Yvh8TDy86g/9+bVEni2LQayrOH5Qf5I0JDUEmK9/MtM
+0MPCHiEdgtxfAeCq5q3Lv8SCvZ9lKpQ8T/n7P7TeoOL6/3eoArQ+OlIyErG
0IU/0vbtpOfsXeU0VBBAcGkzfpUZ12Gz1aw1c+9iCAsqemCs5gYvns81h95p
QC5WsoQzthgEXHrxwoExDwqJvbeWOb4h+4WoYPVjRHCdGlyjkyWAlsrxXeog
DI3K8VX7F5XAraE3HKL9BDht9MNRxAdDl3qssiX6S2HwLSt5f205PG2f5OGN
m0evkjW0QjonwGpOgLHtQSG0pJbSG3kvoH/6xZpfU8ehkbB4/HdgFVTOpcod
dsF70wb/6JRQOSRfCa9yl6uGAM25f1I2GNK7GTknYl8BE47zrwNXPoD48oHr
v3B9Wy2fI7+o7Ay/W9tXeoL8wODEsGUkvp5wkqEk6bsrONOuTJ89WAPHzrlc
kjTFdVWKo+I3rqt/xZKbsJEaML9Du3EP11stdb0VOyUC9GnJTkq0B4FpvnJf
H657jQd52duXPaB4TdhKUyEEDCq/6V7C1/P1fe94xnjDwys6kvqfayEmdLbE
6CZ+HcK28jQwAlj286v9lquDwago33jAUP243dMwvyrQ9SpMydiMBJZQpkpx
XD8VjRKLLzEGwJW8Uz1FhjEw9odx+wLe0z+09F/buhgEK8v/WNaP1sM/c37X
cUEMfZNRMDTTr4YYVe66x7P18PvP2qoeJ/73n9dLCuesAVsuP1cR3gTwTnt0
egnv6UFnwzU1n4fBxj7RH7fuJcJM7htaEn/xdUPTUsw1AvqI+xXEuBrhwGD9
e2q8Xwz0p18Yla8FUwa+vHr5JjB8R/czdZ6ICBZ/iMF360B2XcmVnZACGcUy
vs24fqq9HA3RPh8LC+NutOy5qfCHbGUnBM9Fi1P9o5VUcXB5H0f79fRmuGCQ
pBTfgPcO9b4PR7PqYb/U0RjtnRYovXXx8t1EIvol+UD62moDcC2uHfRSyYCe
u1st20sYOkNxeWtFLwH0HDN/c2hngo7EuJQTrqshSHQyRToRLrpQcQp8aoOv
0Y/+FDkQkTmd7EefZ02wP3XawJu2A8b2bWZ5qhGR3sksyi8DzfCN+/3cr4PZ
kPjr096tGQwV0Tz7crIkGTKyL29jzdlAnTO2xwfX1X7yjhm0NxWqfry/E6Xb
CZdeMGXWcBBR7NRNcmqzViiscy8t4O6CYr/t61fml9FXy1szEcttUHkTKwou
ywWiD2M76wiG7Hj3nJMnZICmZH1fk3seYDVxzuMDGKJ7+4w6UyAL7A57v31E
7AJZCcerV3KXka3GwvFHzztgQtCITSCnGxg2S1giHJYR5cSNP1tWnfCCK6bf
I68AboozJnJ3Yqj5S6y9LkcO9Lv4xkh4FEKk/YiiAJ737rOYTN8dywFezZNR
4zE9sNF6PuWM2DJ6NJiuY3urC+yGbueWufeCxTnJv5ILS2g2ken7AyH8/dyT
P0+2FcNMT8vZYwR8noU1ihtY8uEf94OgI996IcBn13ulZQm1GiXPHQnshkmf
Y6r/+L+B+tVq9ar0JUQvL3j34sZ/5uakR1Y+3PqC5zLBkfwEXJ+JG06/+Xvz
IWwqQoarpwxe+5uyn8jC0J7Vqy2RZEVwYpfX+Pvzcrj86jiPWho+57tzaib+
RWAQqmn5DO/Hzx79kNuNwlB7mhIzr2gJBD8oKkadlTAqepPiRhiGGH5NOi32
lYBvJ73oAQMC3FWMvEH6vpjkjZE9SrllEMaUO7RNIMBbJbl6dU/87xlM2Ep8
WQ5vQm+FPsVzo6IVTdeTlxiq0/V0P5RUCXGL9wRyhauBwBvO9+05vo9miB5C
1xCE6BydquSpgYvzfJbXDHGdvG3OV+9LAF0Vci6+9zXgS7sRw6CDoWVr1PX7
JwEuXK2Ys0yvhYFOKwFnObynEPioIvZXQ9mLYHKvS3XgrLU5wymOIdaoioTg
8GrgE3I5JDhaD3b7IxbCWTH0eiUsea9kLTxrZ3NkJz33flTMohPfv39Ks/FQ
Vgub1UHB28+bYL2VgrrgOxHJ+c+e4Sqvh+Bqx+l6wWao4ZG5QV5HRN5nXIjY
ywZQdXF9v0e9FQJm/OmbfYhoV2V73+SnJjA9gT48P9oGpfTKP7VsiOhTY4DM
Ca1msHWuqQKjDuC4/Vc2QJiImkMN4uODW2FmIpA4yNIJeryi5NSHiKi1sfd3
2W3S/0H1qJQFu6DmUVkud9syuniQoarMvQOoo4bcFuK64MpioPZ6xjKiK3Qy
rxHthC/DvIojP7tBUKkqleIG7vuJJ25tOnVBtVSM6FmOHuB7lRx3TmYZvXxl
UNmT3QVcnp1uNrE98N5narWcfhmdilKTOan63+M3/9P6j4Rx7xZjT7C81jE8
Wz6OpFKvbOTGLsCtsNe5z5sbgBaj0mXKX0JcLv/Wv6QPwKfuTZOo9/WwwFJV
EoJft8Snkh86Nrtg/Y+Y53T3V5CkZTrD+ARDv9Po1nboGmD6zducrIt+UPrL
9fgn0n1jExZWdTd38MoROkdl8hkaGO0PncP9qMTvUc58+Uew3kflksATChun
5GVL8P4rHXRiEnY/wb4XWg6LcVHwRm6SzAX3l2ZdYaXk5GBQkOzKNtSKgacp
OjaZeA7/0viOkdo+BD6WK/tvy8XDxscIgV+4j1zLc/N+Ox4BYoo2nvV4f93e
+6D/L+4jrzCJZoWoKNiO5YxxskoCb5nBu/q/8TlfKBPXfhkL7OmNZAb8yfBU
2NXJFu/ROzK6Q0Mn46Dg5Glp5sRUUHmUXX4Ow5CS33PGQssEiOZhO/LnWRqc
NO3wYMRz9VDn+Y32c4ngMr1Ml9ifCTbVeyIC8TysX+DFUB+VAv4bQ2sKy1ng
I2p9IwPX89lTp7YcSlMhte6FgfJDXBfzC2hejOL5/ErfWNzrTOiR7+NTI8uF
bU9u7l/DeL7NcJyVy8+Cd3Pto3S0+VBeLPNstAdDcqVyVUdNcoCJw4mbMSsf
3lTvPUzA9ZZB78tvZcZceFt0uODKvjK4pXxS/FoGhsTTTOhvehRDq/+vFs2V
PMiP8bwbFFSKjkjPtmSVYv+1efPhYRMzzyiEMKn9nyzqMcRu3h0SfzAfVoLv
pXiqFkH71lzZfDWGplgtA8ZR/v/4+C8Ng38wfCsGFSWWhlOlGDIo5gouVSyE
1XPLLEYaJaD2/cjs+SIMSSDxYrO6wv94vkZVEzzEkDIQ4fvIGpGCoTsZ4Vef
sZfAgftHqHqcS2FJulZltHIAGbWWp/cdXYZQ1cOV5Z8rYNcLk/DFdfu17nsX
h9Nl0PFFrvPLZDHsPGeKbWGaRYEqfPEH16eBg9kxr0GqEuZPrki2B2PIYcv1
um1vGUQoiGhyED1hnLlPP9lmGWG5Iqp/N/shjL9YP/A3ghEy47ZMLww5jb0q
L/SvAGYR8Xhqt0BwVKHdrsH30Wg+jwp/ig84zNBfUbxMgB9ZQYHX3TGUd7Lj
kzbuN8Ezbxxv7X6GIYY12yV8f00auNFYs/nBrcElsc/XquAP82LqEWv89edD
csi4CTB4TuyZ3qHPMBtw/LwwfnzK/c/U6819ga3z7b69kVXQ/r7un6Y5hoSL
C0XI7AnwkP/R7zunw4A/97r1TzwfZmT2rE1+DwD2aGsr7GgNkJdcSa3XwFAU
3aUoTYpquEaj8PfWTiQERa/0e+H72ocpauyh7meoL9Q3vv+5Bl4/Zl81vIah
y0Zx0d5vq6F061jQy94YoC44//bPXwydqo6jvNj9BSgs+xqfaNdBhUjAuSMn
MXRvle6Zrlot5CuyP+Lzj4ODk0YPr+F9vIHSWJxHMBIsXjhmjk7XQedYplza
QQwJzZXlGEzXAn8eAxP7v3iY4LZqq8b1Iaskot/1ZzTsT4iNvTjeAMlks/fP
43my/0nu4f1YPdxPpfe8oJcIgpk/tIXxnl6Ekl+vqsQCMezY/Vq3RlD/HqZx
aYCI3jl0nfgbiv++9xuBywtJsGH82O0qiT9iv47pNsbBWUUxE/d4PGeyLZ+q
iiGiln7n5I7mJqg4hT1peZQCj0XyW2/iufTrzvy9PPEE2P82xbpOowWoZIrc
DT/iue5JbeGwazMkZk1NBn1KA6k0wYqDyxiaSTqZ8+l5ElSVX97lNGuDP7Zw
kBLPk5/CssjJUlrhkuTr5NPRGeCbM2NeOo+hpuMFRmNBKeCjyJNUfKAdrJDX
xzIpIlKnlOjW12+DkQfv9ciZvsK0g9kJx2kMjbm+6WimSIdfEcSOIiXc95jO
B3XMLKP99S//vJ7rgLCM8n/fcrLhLEJ++0g9XYAn2cgwE+at79q+yuwEBu6B
Sd3mZcRLVsyODDvhSY72W9PtHLhV6/XkK97fF/kLpWgosqFEk9nZQ7ILflYK
htZE4/3asSuoiqwLoo+eotaRzINa3aBcjj4MiWWpj8op5wDD2ZfvU026gNWm
dFHWfxmNH9gp9xXvAoFPdBRPC4tBzXv2unMxho5sTXHf3i78X/dZyrzrBP7X
+dDM4hay0YGh7DutWTcjcuHoclmUe34BqB/Om05owvXZpLvbaCrvf3x8qZ8J
+yMzC8Gpjbnmfi2GPv6LrBOYyAdLFSmNFxFFsKVRM8eIMJTzcP+Y00DBfzwO
V0M1ZXttCTyI/fqrPwdDXo7LHekHi2Fiy/EUe5g2eEkzlup3N6B8y4rPo5YY
5Dl0C3XjPuKZ1n/mXiquk6wbG86WJRDB8oslT9QL7rg9+8CnPYOeLkkPaM/P
QG7bszEnxXI4Q1tWUhFD+t5tNknmqlJQlgjwd3/vD0YP2kVPCC0gMjLCBs+D
CWA3zy2Ru18BNjIlhS2hGFp3dbFlmywD6usCwzzWldBRqWIzhffubgoWMVM3
PJeqy91VeVEJWgciJRr9MNRad5LZcbccejxu9u1qV4LifA+qdsVQGJJ91mND
gEYXp26FWgQl58cPGOL5ua/uYkeUUSV4XznkQ58TCAq9rOcScN2jNlQbt3r4
Ea6OrtZrehBgy6eYucMRQ0w3ktgzixFkGqiop4cHQ0jcfUtO/PUNrTt/A6z8
YL79jIStYxUYPD0deuwphgoDbBVWRwjwaV+CvmFdOMSevvVKDNfJ6yP69Tfu
BYNe5/lEr8fVYJShEPsT7/XHXersywaqYFX3poPU20iIpyAT8sB1kkeaMcSA
IQTqSgSea3jXwIW1Q+JTVzD0lHsC+VPXgOMHFs4BmVjQxsrNVHGdJI7e00n7
GQ7NYn0v16Nr4YHX76yD5/Cc49+7Z79QLRRiZMwO87FgrenuEofrpMy7csIr
xUjw49p/J+//oe6+w6mO///xlxYJRcouUSmyI6GHrUGZpYSUjKQySqJkZFd2
Zvbee3vae++VvTnnZZVE+r3O9//357o+n+vz+/6u37/nOpfreHmd+/N+P3Vj
rhaa+6dfVR7F0NOWnqp3n2ph4FLE+ZXBGHiWQq/sgefkLe0qpXT/SKitPHO2
m6MemrOeST5fJ6JGfuqzST11ULI2+6r1WyzQpg4dzMJzUiXZkge7FQVKFP8m
B/GcnG838ertIKKQd3KGggoNkNpQMTCfHw9+T139qPGcFLMw+pmjHwMCXOlX
PvU3wnmO+EPH04iodaBm6ldGIwh26P2aLU+AnojO6Wg8J+8ViUyRv44Fa/HV
gHTBZkixevujyIWIiAsKWb5MzfAs+Bc9TV4ymBMPiJzBd3oBnYVgy7cEUHK5
LU90aIFR53cPr+sR0bLXhbPr71ug6VG3osBYChQZmFpfW8TQau+q7FBtIsy6
lCgcOtUGou+ka1l5iAiIG2Lrl9rA8QzmGC+aAea/2U/ewPd46rZztLdoKvQv
SUXZpbVDvN3hTLlNArKuVveZ7GmH9ZiUun9imdA63Lkyieckk/fHWxcc0uC2
iYIOo3AHNF71KmUbIaAUmtuirPc6gDvf3iF9bzYc8ORg0h7Cz9+N13by0Zmg
92KTea9PB1ykpxRWrSCgNfvob8bVHaDSTCX2ryAf2PPpk9XxfuX/6ndNbuh/
zgEsOIgiJDwb9EI+Fwb2Y6jy+dRpN4UscHzyuLdYLxf8+9lFt9sw9G/9zOr1
8zkwZuxfqd6fCzEH87m/4fvd+4BZFGtMDpwi2F7+zJ8PRl9luu/UYqjB8Atv
C1UenLn39n0UFAL/PXeFy0V4H7BK/JknXgAdQVUjGj8KQVetp/ReHn5/Ygm0
WtMFEGyqYGITXwyTuwaYNZ4zFZS381W6i4Ds95BKF28JnKsvru2Ow9Cz6/ba
6vrFIOzSMLi3uBTSJzCOaryP7bnqxBZLVgqw6HIwXacM5ir3Ge7gvYsj/wV1
TEYpeDOYVOeIIvCfz7jzzBW/3/g/HDFIKQeBTmifpK2A8Bxj/lp7DH2FNCfO
RASuptYvbZ9XwkeB482Uxhh6/q5HO1KxEtjb2Pu+/K4EStGL/Is6GOI9dvMf
80glMMlIWLJ9rYbtjh8LetfwXnEqoSrBuxrsuU8ck+OtgVvigk/VBfAe7pw6
pCZWA9FDBLrLO7VgY/JQKY4cQ1Fx0St3L9RBpaC7wruEOiD7npGd9JuIthz6
2JLwXf3xDOHjalADMBz0aJ6pIyL/qYt39/9uAKvXQQMCMo0w4rGn/0QeEU0k
u0popTSCtkN5033eZrgcXW9IeE9Ef3gJDs4lzVDR1LJ+4nczRHYbDnEYEpFe
lOuGi08L8H7ZSjoq0wbMNN7cHCxEJDlXqMd3qB1WC7RcpyLawGje/yYrDREd
q07TeGbVDhVbVb4PCtohZ5brA8ccAV3wOSspo/P/na/833pcbFeMRa/yBRzz
C1cK6J9Al1ZpyR95L8IPHo3L1jKv4e4ty+Z+y1mk23r85UzLLPxSoJlboPSB
ys6CJ5qaGKINeTlmPNcIbK/uwCb4Q/iTzCJa/Lx4pkfIPvzMF5qq7vZK3A6C
zB+ntY/i/dzqarWfkYk/EOiM1Lu0gkDD7D3Vefzx3Q/5Cxda/MCX06hXYzoM
ovp+2xvj58J5LSqqi6ZBQFVya1f//ndwxy6Y1eG7WMvy7LXapWA8Hz6pvv4Z
CXV1b04ex8+F3C9TYRdCw4GzXoTI5RYF0hlFL+3w/F9OKtw82/YdpAZrr6/Z
xsBlhXCWe3jO39zYdB3Xj4KXM9F04SyxoHB5kiUIz3MtnopzmwejYbqSe8pg
JB7YruxtW8JzmKK1+MKNfXHQOCRIJo8SYDv7qO93fC+/kDsXYLQTB2WNjNn8
w8nwhTK4txDP1Un6B5RMCklgaBryYG44Bfxkr0Tu4ns59qX8Tq1WMgiuJZrd
5MuAqNXt/WWTGLojfk+ncy0NnK4PsVxlzwTh6vQaj3EMnTxe+HX7VAYwsXj/
szPLA0XCCdU0fG/SsN++6an+n3Pvf+vxW37ye0/VZ8HyG56mO4MYahNdVTut
kwV+gVs+TXeygSFUwLoZ76tPqD0X1taz/ttf//ie89f2+ufAgSdNZoH4rn/+
x7S0TyUHrlRlcS7t5MCtOz8YbfB8fpNNvm+t6j/3yVMuiyqHZvLA8dWXKjK8
N77xWbSo6vvP16fwAz+ZfkABcLZOl3bguV2r/soyObfgP3vSB/HbjeyFsK6Y
d1olH88xsa1jMqqF0Gzkbb7LZAZTF/xTBoQGELXS7Py3CAJwnHb9HRNYBNqS
F7QqU/EeVb53QmG6CHjCIyR4/joA80JyApXmLJpYuElTuzgLoYdKe77RFENS
z2igI34uXFMJFblvXAyDudPU9dm+gF03OnxYnYDmu5j1gr4NgvRabWNpRwnk
j66mTYVhyGkrneufeik8sP60P5sYCVrng7mD8ft/LbG0/GJKBLRfkxsqe1wK
xwjt6X54/zwr45R782cp/KlQINPcioSDPiFTY/jzQ97YnkKvvoPXO6Go9PVy
SJv59+w4vrvzChlpousQeD7jdRX9FwhFdxNsPuLv31FqvrAyTj9wlgwOFmpE
4OQY8XHLDt93mkfnQ+9XADvDnm9OC8Fw9uDvpNd4P6QV/yfEdi4QeLh+6ZUb
VUJZ4TAk6mNIT+noOT58R3Pm2oxbF4WBPocWhyqeA/xkB5vr6YPBQkAhxG+m
EvT4L1tyaWHo9XDxr1efq8Bg0c7g5f4IMKkOHrqB58PvEVPPadtQ6C5W3mSL
qIb88K7fZcIY6uBnj/1sXgMirnSPhsIj4QzZu2phPDcCTW7tuPSEQ4BokWIE
fn6R8TCkmXDh15Oi2kDzaC1sqUoLKI1Fwfdz9MGzv/D3u/z3Yx7CkTD9Jjdj
h7IOPKh0FVp3iOjineuefqz10F34K3mHPgaaov7mu+E5I5jb7V9uHQVS1/+Z
n8XPO632o2fjCER00uWxaG9jPSTFCXzfHY6F0p/0CsrrGLLpUTt55VkM2LX3
jQTbN8Dtq4xb5GVEpLX5Tiy9vRFcoqd4FfzjoWYsMW4Rz6UDVLflzdXiIOxg
kulhxkY40Lj2UzqViESfjb98btMEKmMjFccDE2GYaq2IgO/ovdjcubNvE+CR
ebQ0QakZov/dW/39jIhkt0L1NaZb4AhI3493S4arWo4fKvAcKw2xaTrnlwT2
qzfKh/e1wNndeKH7Gnj/ZMjZ3U5vBQaJ8pWPGalQ+YH3zeIshliz+23/ElLg
kP/ZwSmmVthXw1hnwkdEiTIXfo/+bIN9sahJqD4d1K3FXg3juZfv/ud2uWQ6
DDzws5560wrPZImdA2eIyGCY4vcf/Xb4bWO9EEyVC0Ydhb7HWvFdTKm9ckr6
v/952n/3cbGM3o9SrzOh9+ptk6ejeD7rjz3oUsqEnEG2w772WVCTaKVWhOeh
09OUg/df//dzj97KNzZCNRsWZVj2jvViSHfyMaHhfjZQvZMQEWbLAf0zZ58s
deL324lu+0dX/3Pu7a458ktt5sJzzGYfXQO+K4+vRTfK/ufcM1rpUPI8mg9r
k9f3FlViyJzy7S3L9//5cwO9RDYiGUcB3OOefXOhBEOeV3LM9mcXAFHo0VHu
FiPQk77ibOxej4r3/LJTtMKAp9WIWp2+EOIPlUjy4733t8cdVb/iQpiILr6d
bx0OhaGXR3eTZ9DTIj63KNc52NGsD5vcWwTifZRO9BkYkqOoSedCRZA7ccLC
7FAslPDOWNl8XUBhwxy010SmIL057orzuWLwsVk6y5eAIbI3lZRPyErA6Vv5
3+DuEmBLZRKTUcCQ5ZEsFWGZethp1bPzkisBmy7rB0cjMBRv23dkVaoUjtdc
L+e1K4aRoyuO02r43iePfTrqVwfPHn/Wx1ZKQTX9OZ2sL4Y2XM3NPzKXA7vg
hnnegQD4W7b35DCee8WXwp5LHPGDFQ/CU1O/cujRJVdbwHPyOrPrJIbPJ0Lw
YlG1WSCcpnnX+wR//lygIwuHsz/klZdomShUgOx9/bgeS3xvuhRep6GphApL
kWo35VC4USSwW4vnnrVSaoylZhBMqby5oC9ZCbF9j49v6JN+vsTOr2eqICt3
SlrCJAxGJN0zlfHnz+S9GO12CAbKma/LMzpVUNpHJ1R7C0NdpQZxefrVEGpp
3l8fFQHv87uuduC5Z2CiJ/FqIwzKR+pPNlhXw9Xf5c5ueE5eLg78dSKsBmJu
s1crPo+E5f3NJ0Tx52+rGv4qEv0OQdve3OyZNSCXzvf2LCOGjk8Khpb9qoUL
R+4P7+WPhqNCUawaeE6OjZWIMW1GwonCy9vXJmph5505rzOek1efHCg+rVQP
1Z63iqSOxAB/Jo3HbTwnJS585VFZioI2nudUpifq4VRTUdr8DyKitb9ldzi6
AcZrPScrv8TBoq5HyD58R9tJvK6hK46FwrEbE9pyDaD4QT3rdDkRBZ750V28
hufgoclNQbd4ELomSRGL5+S+2kcqJfVxMPiyIronrxH6W+Tc9gQQ0V8rVdFx
z2a4323T9UsvCf5tlBdK4js6vJhQRT6ZCLq7Mr9V2JrBhCJE6hSekyIH7j5X
Y2sFEbP3CeTPk4HilSz5Wzwn+eI53p4+nAx69XVPE/qbYWCb+6+RGhG93lU/
vbXZCqyHXDdTbdNgYoso1YXv6M/XpAMvWaaBAbP5/aNfW2BPdaz/patE9N5g
2Gu9vQ1krAQ/VndkA5ZA1uPThaEPZFXuM9L/OQeoGBIspV3SwdKGahPhuZr6
tOnQZmg6SGyd2OJvzATkY58tOoIhGYZU3vp9WeBp71Dtx5cFN9g+sD7Dd7dy
0tc8bqssyPtRM9SqnQ3+HI2KAz34vlsL9DWryAaxq0eZjc/nwiAjm7pbM4ZO
YDVxtypygcYqMq4/MxcOFHbMfMbzJ+6+kErjgzzgYpE3PiuXDwTCyb+3EIbE
nSmzDfAcyYhxmAguzgdZay9321L8/FW8/P1HXAGo7/QbXj9RCJufron35mBI
XpTVa/l8ETzNkaPziSsEhex/jcyZGLq0/8nQu/oioM0Z33pzsxhEcmaHgmLx
+/DwnFReRAn0+kfcvcFSApfXeBX9v2NI/13AA3KPUjC84vrKzbkMLpeHumV5
4vdDJr+zBiAQn40/89SuHE48StNIcMJQ4U69wtSFCqhOktPlTa4Ar2izmLvP
8N5isZY1VVUJAl++f6gXrQRew5+sk3oYcn1+daDuURX4wfsLOf1VoPr9ocUy
voupFZRf/RaqAek9HzY5zKtBPSj4+w6+i/MyJ/RCx2og//zOSKFQLcgkqa0p
UWCo6ZNDmthwHWz9+Pkxq7kWiAn2NC1/iMhH+MueOOd6yHlisHHYox62lFTi
bVuJyMvow+qMTSP07LGi+wENcLh5Lu1vERENtQ0Fdck1wW5UcHWNRhNgR+qe
zdgRUfwMnc6hMHz/kg9+pc1qgr91ZV2W5kQkPfUyLJm8FXiO7yu5XN0MVRg5
Ues2EVW/0Cu/qNQG1d9rmZVHkyDiosiq0J4pdBn2gFv2ArQrHC+LDmoGevHk
iCv493smRqK+sdYbWgrGXz5grAN1TkflMjwPzSjHVLTM7WFf6VvqJskWGNB+
96QQzxm9Z49LwjN8QauryvzlRiuYLCYZ+zBhaFjN282IPBB6InkyrpxuAK+/
XDIJz/Ge+f3s7t4mF7jy/fv6LbYWuLvPLDdSBN+VFFvC2s34Li1qkNbg74Ck
RUVujnUisv02EV8eHwR6FA/Hdm07QFsnEuuZJ6KV9IlXfLwh0LKH7aU8Vzf0
DQeEqjoRUeNTzuaIwChYujh4ldG7GyJoeORPWRARc9CQ2c+6aDjUOHj9xEof
PFS08l7tIaBMLsMz7C+T4CNvo4SiWT/Ui+b1bxUTkLTcqIkPpICS+2zCVO0Q
7Ng6mHzZWUbJ+51vppzKwntgP7FIfhjiO/l5RUeWkYZOoJcQZzaIGyjq+Tb9
ABvjfythgstI8rPT4u9LeTA7LM0QJziK91NJlX90+OPiYSuhrPkwWZRCqJgf
g+Fzdm+v+S6hs1kxlp46hWDEohdpxzgO2TuXkk++W0IxrMw7ZbRF0NuV9iG+
cxzkIsPl7u5bQgd9pge/kZeAuzPLn5d/xuGkBq1q+ewiEpplXqSqL4EvD8uv
hg5NQC3rvicKiotIUfLID5WEcuB6V2xQd3gS5LRyUnjYF1ES21jWVhECijWN
4sG5SWCtqVRntlpApnTCy8q3KsHuDEV6PdMU5A1d6lpWXEBJ0T2jn/oq4Tb9
I+rWzinYd4Wc6VHSPDLKM1uYu1QNL4xdF6L2TkPGBNs3J9t51LYtuv9uWTXs
M808vEwVDqWhr51JPhcTUnpIc8gauJJ+rypXDoLgSI96jc8icqiskJJKG4A6
vRFahW99sC/ld9TNFfznlSckWSDjBF6uHwNenm+H1QMnuoukCSg9Iljle1EP
bMvGaz2NngbJPSF/KafmkGNYvNvbQ7WwkrjHSa1lGlhp+AdPFsyhnDKrGKJX
LSzaTQz2UlfD0tD+EZLPDS6yP2Aa0Q2jOql9NAb+EOgUbk/yufRQ4k/vbwaw
KFw5fXkG1O9/DBi7NYfet9oJ6ZjUgdjFgxU5GjNQVk1cwS7MIa8QFrEv9XUw
bbJtHTodCbY3nM6SfG7xhhmmetMO3DLuXmsdjgOPLxS+JJ+r5Ch5Z0vNGdbp
DCZpc2bggCOl94uaWeT+OYuC7ls9aN6I4wjunoELTHRvX32fRT6mv0dHduuh
/W883RJDEgyFqRiQfC7dt/Rff8AdvnntlUranwkSjCcuk3yumOTykNNrHyio
k9CZF5uFFSrdkwEkn2sbvOvypwFafZN/eD2YBUUfCzD6N4PYR65oNJg1wtms
0jjO69nAQ/GJiuRz95DLzXxUCYA5098NVIH5YGXKY0zyuT5jaTEbZWGQfsTz
y3LKLDgyIbub4TMomVi9/panCT5T3zW/3jALBj7xnw3fzqBjDzkVkl2bIHlQ
MlTHuggIWIVINH4+MqWW2X3SjgKF5EDuUbJySDhHXc5XgaHMC26Rp/3ioFH9
zjgZ/RxYhnBTJZ2YQfWRV5YuKjTDysiahrvQHMx521S+WJ5GRk/vXL+X0Qz/
bHRPnvhaAbyTLY9uZWHo1MGHJw7tTwKGhGyluDdV8KWJ/BpTOIYMXw1yRhNS
QTA8X/t1wByMxRsGmhtNoziprLSV7BaoaXLQWSydg/PDHy938EwjnVrDPcpS
rUDBfpDTuqkahl7c/nHqM4bK04aYhOgyoYgxhSv8Ui00alRVONliiONAtt2U
dxawTx1slmSfh6JwyobHIVNoJU73Zr9aGyQItVzQvzkP+7r9fF21ptCj/Ize
b/NtoGnRSxZ2sQ6ktLM6ysxIv+dWysWtPRtkcrrmFAvr4db8Zk3wPQzxeNLK
vjXMheWTNhw+sfPgKSkjcqFpEt0per3ycKkdgtmM7ue1zkPvxq6HqNMk4qVg
eZkm3QGXtAVO+LQ1wDN9w3JvvG9/8Zpi7C7Mg1N3F4TlsptAiOlNx+w5DEne
THlGv78Q1NN85hNPLQB12mJs468JVJrx0C+8vAMYj513VldYAB2BsJcB6RPo
0PfHN6PJO2HAN79ph64FVKvidy9TYegYfZ3PwnoRjNUv5n5jbwNuqwWHg7NE
xP4+VuKreikoTwe7ZngsQO9C10VFgQkUQXhu8/1VJ4zNnj2olbYANlhbttfy
OHq/+aTubVYnsN33xaji2uHhwzssB+uIaCteUM34YTnYZ5YwtbV3APWSSdfl
ECKiudp8x9+kApqpEs50LS9AoSFLHPurcXR/rrzzAV0X3NHPLNE9ughGFeZl
LznH0VlhP0uJe13AUHMsjsa7E4huZwsiXxPR/DtzLxa7SnCgf0J151AC7DFV
ShHfxJCIQ1rBzeMuEJIDG+8r8eus+KWUzXMCpZ6/JF6s2QNul7tFLsXMw0f9
5Eet+PXh/9Z/TM2sB7xp+N3Sd7MAkzvZ3kffjDrrwulIPldmD8pzie6Gthin
z+zbS8hCWJzei3oAlFSmB6xCs0B8q2aO5HObDm+6aTbMwMVQTVknyy4QzVPr
nL1ORPJXQcAwtgruPh8JbODohnutVK85OYiIq03D3DypGqiliTo3jzrAfn21
QZLPnbY0piH53Jbn1mM5A3FQ/0zrAhueSzQ1dRNZ1c6Qk/kniaK1G479OiM3
sUtAbZ+cpmve10B1GdXRx+o9EEpU/75vnICYS0eavSVrQcq1a1tUJAA+uTVv
kHyuKSscH7zxBtSu74qRfC7Lg/D/43ODW1GRo6gtCEu9PdBM3gtfzU4zd+UR
UJgsF/80Vx3IxXsfWwzuBXOOp0QfHwLKSJPkk9itgzSe2mNarRGwyWkXQ/K5
YSpSSky/neBO6c0KQe5o6PiawUbyuTyCugkyPa7AsyhXk6neB4+VDeSI+gQk
FCIRmLuvAYo+UvmPEvtAgG5Z/7YoAa2fs+Oi+9UAi3MazQJqCZCX8NuJ5HMV
t66qrcx4wy+fgciLIsnQzZBST/K5Oqa7NqLTfpCrc5av0qcfuD7+OHCTkoDs
/d4bejc2QuF1sQtUDAOg6rIw+nl6GY2kmhx5+qUJnt4V10x9mQmXiQ2dJJ97
I0pjsz4e342u3OsV/7JA2l9ikuRztcnFepWYIyAhvWlzT9MA8Ez3p1hl4j3E
iWk0xLEZTl37qqf2aBDym8yjnzssI69f/Qyjxi3g7OMSYhabB0fsa/u18Xy2
rP26xXw0FkQe737n386HICOacM9+PE+8rRun0uOA7q6/qOitIZj7SKDMEVlG
mTb6ZPq5rdBO9Po0eWIYRGm177etLCG0ILeTvdYGj16rv7t8phh4BR8XRzdh
yL9GJXCGkAShCU8eTrGXQHeamYdkHYayvHzPj/KmQKfuafXQoyMwbEaWbBW8
hLgeGtXe5+6AGSbi2yerIyBuuK0bKreElp9uvhQc7gCrKkcKY4cymHp0sp/k
c/9hHTVrdukQfU1WUi+0HNaCjexu5GEoKLPTOKorA2i591RdwX6AjlVIlvvk
IiL3t33F7tsJj64Vp/sNjYLwRcdGy4+LqGioRuHarS4oScpjKgurgC1xXmuS
z+V2eottpmZB7GBWdKlKJfhS0vzLx3cHy9C0QU9CNpx8E/mqvmUM2gxobn1g
WES66+GzfbtdkJ628yTs/jgwSPWpcqUvIIbV60bVBd1wa9+J83N7q+FURcHR
b24Y4ky0tI6DPMg7oRu/WV8NJXrxxqwfMNTDv/DrwfV8GE4fv0dePw60o/9o
4/F+5SfoxWB2rwfO3WhzYBGYgKrCU2zcP+aRl1tbkcE/PE/sD8t0JNbCx0BR
2219DBG6qmvPHikCpU3+1ucv6uBeBDgXa+K9ZXZV9RJnMURTRtW8i56ATUVb
FGw8jxj2KDhXJ/TCXoe8M5/oJyHgYDOhfmEOBQcS5IT0+mDtNBMxWL0BshQP
E1Lwnm93syh5/XgZRJ8gi7GumYB4peNz6afmkbZmpfwL2z7wfmQ9TciZAKbG
yRwi2zz67Lpd45vdB4POp16d218FYkJcM/9eVyEbn+dJhHsYsHUyx+VSNEL3
ETrP7PP4fbL/5X6h0+Uw/eiCXVp3E0TlTryT2o+ha0OVnO12FZCUn5c4rtuM
vy6fLI0tIjpAzKp8OFYBys11N12KW+Dj3eNMF0eIqDRBj/bCciVYky+ZxKq2
QlgK5fjVdiK6IGlYxf2gCn7/pn2zp60NGnpWhnRTichh9eOFItdqGOc7H/f5
VTt476xNkXwuo92MHMOBGgiw+HtCyaMD7And2u/wHdFzsfh8m34tdNk124x1
dICBr2WgrAERKTntagk21IIo9jW00rkT/ubxO+RJEhFbvhjvq+k6GCasfpbp
6QT+23W26jxEJNHYQEx7WA9KsaZjw7FdoDic1Vy+TUBLwvtvWGQ2gEXM4Pj3
Y90QnYF5jE4QENnQttD8vUYwrG4+sCjUAyMuLz7YfyOg+Tt6h1tFmmFO2TOI
La0HHv/aqxxlTUCugwcNX602g4q9kfnVtV54sUPRK8NMQLcU2KTeHG6DOxOU
8+8s+mDj6dpA5c9l9ISrW6uxow3mM8bz9nb3g6arcLemyzIyWJauzPHsgMB8
xudLqgNgUX4wvuHhMurUMbUKwTrgboQF1W7mIHiEWhuOjC8hqu3UCMUTXcB7
TMRl6NwQUF09f0wzfwkFUR9XnjTvgtA/B9udrIaBs5A3k/XyEoo2NBc0dumG
YYVfX2Z+DgOt36/KxL1LKFxR1cxtqRumY+5OlJr8wN9fTCvKjxfR8ahlq4nT
vWBJmSmFtH7A/g/bAz76i+gbu2k6s0QvYKcLFsjf/IBz6nnsTbKLKNB8bwhv
fC+0f3vwe17QE9KO6nKTfK6jVNB9ks/1eKR0RpaYBEoBushjsAoR81nFqMOw
//g4+/yasZJSFlgvnfcoZ5xEgXQtJ7uUFqEp9Vt+Q0omDJ+szAjInkXnOqO3
Zl/PQu81RlGRQX9w9sxMI/lcnqc5HzLNP0K4yRF37wdBINN7rZzkc5u1hIN9
bzqBeNvTz3vP+UG7dco4yedW+1x4Yun7ATb09i4XyYQA04daRpLPbbMtWbtj
6gqDudvp1zTCYLaY4TTJ5+7/u5HnSHQHK8qf6ceHosG/O2SN5HPHbghZTWr4
gSRnsbCTWCzoObw8RvK5l7qfKLIqB0B18I0vXC+SoO0R1UmSz923Wi5iUB0G
F+52qvD/Sgap1IIxks9V4GSsH6KLALWN9bEttwz4GMdBIPlcXcJGcyNtDEir
LtiMm2fCnXbNUZLP9bzM9peXJxb6e1iOHhDMho3txZCDUxgyjq1IjF6PB1pW
ggNLQTZUl4b+5JvAkMAxBUXezgSQOH2X9nhULnDy/2Ek+dw0uqobT+uToTaG
/6OFYB6sTSTzknxuTqrHaGJOCmTM+duylhcA96bZHccWDB103NwwPpIJsdyd
kboOhRDzWYeW5HNrKNPrREszAdOLtMjXLgF+kyANJvx88VzwmQ5hzoFOZByh
LlIKO59WlEjnyzZymcoZzAGlPX1kLOcQ9HmccrWJwVBRvtZIgGE+iLgvu/vs
r4CNdocX3/EdUXrb6dEPoQL4uiX+0FYgFkL59QXbbxMQXdwc38r/os9NO6By
n/tFJUhWB0zPuGPoqvR8u1VuEayu8r8OGK7Ed3wf3xuSz319Tunih2L4q6+v
7+JtApk9fUEkn/t0U5ae5HOJyr1qYRIB4NxqrhGjPovsKcWV2Rdn4cOsY+5x
QhWI/ssrJbfEkFWCrbfjvVK4ovs6nVGqGrBT7zsr8D1ywMMoSIxQCuF/I/qZ
GXPhnuNbWpLP9eZ7VW3RWgI2AZ8LrthnweMlnblEhKGFxVT+xM5ikE5roH5g
WQOM9/KPu9/HkHl2wn3uwwhsNH+8qeyogcxcVfL96vj5e+FwungegtvYeByv
6Fd45HfSkeRz7/5x43jsageGOuF/Fsv94IFT2X6SzyUcdg96gL+P6v+R+XBw
18GzYq26EjEMBZD9Cyk6UQniDNqvNgLqoK+CTMhKAEMl5M0ukbaV8Jx/+dj0
z2/AJGvqR/K5T6srd++ku0K6hXioiVU4NDQMHSP53M8NQybU3l8hSstPzquq
HpIfc0b9YcTQycrzq9GOVbBZ0p+uzdoAEpSUDfa0eG95evT8294qYPkjM/qb
LwqIFocMSD73xtUs1xfv/ODfU1/ZeqlYcKMcqCP53NZs0SIRliBgZmpI2bBp
hDvkKdwtG0SkpZixNkddA+I1Z3l+zDTCFvoYS79ERGnFNQ1m+HXkpve+KbUv
AXhEuVVIPvdqJYXPNeswcKVqfZhVlAQWpqIKJJ8rlx7J/vNFJDBMDeUcHW6G
gtQDby6WEpHp82/2mVfqYL+wB5i8boGcuEztDPx8ZNh4GuLSWAcRSl/4OC6l
QkcDSwLJ5wYV/BHWdYgG8jG5hwoy6XDD581Xks/9ezjh/IZELJCJUv1dzWqD
7PWCiL5XRKRo7VBi094Ax6o7r5x+3A5SyzzHjugQ0YnsqgTMqhHEM31PrdFm
4jt62pbkc+Ozr74MGYuDXCPH/SIiWXBU1/QNyefayRcz9RQmgP9hqi4bQgfs
pjJ49tISEZnLqyKt7Gbo9/Vdea7SCVs9KmOTWwT0x2+i/LdpCyTG/lGKupYN
FgsDASSf67Y3d2zUOglaGQY7+OpyYKlGJpt8GN8jNotlHldSQWOZLtQ1rAuC
6009ZKLx3bHnae/rRnynnzsCpvu7Yef6a41WZwKq/nGacehzO1QqTyq6cefB
V5clDvJeDLXXDBeWdqXDevZhCvnJfNhOo6oj+dzMD0fmomcz4UyOgVCUbA/4
mlAYi5wnID32hTCNuQ7wCWX2yUnogbsm4ZO9hwiI5VJrmIA8vnOt6kborAoh
MoPtolUt3uerPN58UsmGxS2TjlMSxfDd3q95qgRDP9QL9dyXc+CX58DhsJN9
QLc671nzdRmlv3zEzO7bBZyqGuM8nn1gcyYh76rRMgrc/Xw+F++xlJVXMrhG
S6CLlt5ZMxtD5zief7O1zINUSvVIlxMlYOR8NfWw8Qg6WVoY+9FmGQ5+3HYx
XcN7H801l8qry2j9K/9zWY9u+JvBbDTP2A9Hz42Enrm4jAg2x+VelPzv+Vxh
K8dfTIFl0EnWEZGQgJ93QodWwskLIP/Np8kH3AgmOAW4KfEc/jq90CruUQhH
3HJ2Z+44wTAHH1vA/XqEhrtnST63t2leAGhyIM7h2+MFll4k/sxxRJWVCO50
zR5hEhUwV3zqNpU/hnoxvTOHCopgk5yHx6m/AsyrOcOvemJoR7WWVaq/GA7E
djZY1ZRCyvbBKo7oBVQQd2g9rGMSQln2Xrd8kg9OIJSo476IuN74CuQkTcCb
N/t+OflVgpXMJbdTHzEUvXhBXYyvFKge1Dz7J10FzY6KFkKvMeTx9lNc5dsy
+PIlsKFuzQtyVsvkST53sbyrSuuWPVgUF7Kv+XvDR+pbz0k+t9Jf3LOo3wG0
uoStFRmr4YJ6x8JJI/w8Ehr0WadGkP6bvj5urBoeubM9l8Pztswi8mfH9QrQ
vk7la97mDxVHyVpIPvdhxJ7bU4RPYGDy8toLks99l61O8rlFOv5kbpHuUHA1
7BoKrIFc9p08LSUMNc7f9kzAKuATlyNTjnQtrPvMeSYAhvS1P3u/8a6Egw51
Di5/wiFAlrqZ5HN/MQD5GRpfCLe8YZKvGwkvXdv/kXzuWuOfi/MS/lASkWId
ylwH2DOr5DleDKnNjRzi064CTu9Zkaa5Ogifmbilzobvgi4uQyJbNSzZtW1d
OhcLi0PKfCSfqyk9nyr+IgQqt3iDLzyKg6CPvIIkn7vBwl61/TEMyjaNtYxP
N0Cp4UmMuA9DjKUWM42yNZA3YFoxLtsIC2m5Oz4LRHR7mXvGQqcW+FUphxtQ
InAXMU6SfK4xEvO7KBwFdTYln7qykqDvxD2ZILwX8TxDS3EHooGiguJpbVIT
nrv8D+pIPpdl+/tiah0wT5mUTGzhfdx6ljonjojuq262P1qth53NR8bOt1Ph
WI9v9PYyhl56igQaasfCKOsBCal7adCdkDv8Ds9V1uaNAU7xOKDZyjRT+NwK
7sPskYvviOiWseDRtWeN0Pi+WzicvB2if0q8jbpDRIeafbjqBprg2nPro50n
8T6m99ee5HNpDQLNhvD8fKBTuNvWlAmUulpeJJ9L8XDR7dnBJOBa+DwzoNUB
Q+/tgnJYiEjk2J4Nb5MWoGLmL61j74SukJcnd+YJiFNA9cZ3rBVU6WwCp0qy
QXdqY4v2B37ecbXffFyRCsankiOlP+XAVesftOOD+Ndvnz71+2I6cG8l6DBg
nTD9viuYJpuAVjyLyYZetoMibeHwt6wuGPI60fX2HQE94JZZtLXsgM6spEGB
3DwYLtNgY+vAUJS01EIySxYYjOkl9HzKB+Za5Z/n8b6noHNuX8R4FnShHF3a
yG74lGOn+USIgFpKyqsX1DqBUUXjq4lTD2RZToeELuK51BW2YsbbBTqz0zcE
2wrh0wuFSywVGPqWGejYTJsLO+U8I+49PcB1s9npdMsyml70ORmJ52dH+YdA
5Yu98PjTBm98yjKi064+5P5f+NwqPwZNj+AiuDNCtROD57OXBs++Sz25EP3S
8GpNVwkcrkp9dDYdQzQjScML//LhpqaFj/iLUhA/IEelkYyh4dnwZFvvAqBv
4Tp040w5eARnKO2JwBDn4mH9VIEikDA3JnftLAezoOmPCiF4D1cX4TnaXwRl
KSZFVDoVsCO0vUryuRYOjXHnskugeuHCnZqKCtC6wZOg7oKh9DcW1HpWpXBy
4F4PJ94bF633v9e1wpDZ5pkg34Ry8Legq2MQqAIfY9m3rS8w5GpUepjvBoI2
7j8CZhzVoHeH1lZJF0MRX9spk79UwCSR9oiwRzWQU/mmHrmHIVQiWcO2WgH/
oNN0JqUG8s/KZFhJY2izTnrtCnUVnN4nz4Ndw3PjouXicREMYQ15Q9xhVcDu
YGTcM1YH/YE7f7zo8L4Xq9VWdKUG1G/4WVW410PhsQf3+/bj+6gw/Kb/SA1U
Lz6+XP68EbzsJoPm+4noGpXmeZniOsjRpac7eKkJfO4+pOOuJaL9i8pN1pb1
wLVOz7Gk0gIqZ/vvFHoS0aUyQsxl70bQy1Z7x8/aCgOmfvI8r4lIPC6SKHS3
CV6PfzUYeNQOSdzMvqb8RPQ4ZtPvVWALYLQSos50HfCvgtdt7iQRxfJJ2ytr
tsKD90J5TZc6wT7dePdGKwH5UPKix07tYHJErOdcdCd0zDvpCKYRkMyH9s/j
Ah3wKmSW8HGlC+JG72hy3iSgZrq/1XZ2nYDqBwylWbrhxdX+JpLPve6w1FKS
2QnhaaYXD8R2Q9z6Bu02JQHx6yTZCan8v+9zq0V+CdIauMCvy2WqM6UTqES/
PDg3ahHiTlhrUzXVA6NRCtvh3GXEkJv5oCVlEPYaF+vKe9RBN8H8tR9+3faI
tzKTb3fCSbp29YddGWDMTvSlfoahIx82qk5Q1sOu+IZjjIQ3UBzJOUPyucYM
70o1nZzhnq0SD79hIChe6aEi+Vy/6+SKp8o+w28lBp0SjiDwPtV2meRzP37K
YbHY/Qo1T7m4Ifo75F3+LUDyuX9pXNhsEgIgUFh247dGJETK+ueSfC5FEhbd
aP0NRLPTqeOlY+CJvIMOyed+/fDxp+tEGDA/onHxxfdrxNHyNZLP3fh6sFXv
+3cwpM6a4DSPB+Po+oKH6xiaYT12IcAyCmqkDz5l5koAo8dn26zxHX0g2KWf
gzMamn9pxu6JS4KMKvI+ks9ll34gH/MqFpRV76XzmCWDQ7bobZLPTRhuJI5d
ioPYSy7NtwbTQPaHeL4v3oeJXnQ5ZyMSIZ5latyHkA4Nq2YjKXie8wnbYvHF
SfCASNazaJAFNoXvJ16MYUgvLurZhw9pMCx17tfMnmwg1zVYIo5giKy+Q+Zi
Xjq4rdJ7MFPkQmDSAhrtxs/3SGvde4ZZcD6+ln4tLReStmIOkXzuz5jZESua
bJh5Pr7OTlkCyYqcQSSfmzioFqX6qRAWfh22n1zNge2+hcAP/sUo3k+CL/N/
0ec617ytqEzJh/XfxxbN6/DXU/Ai9s3JXGD0vWFz7nYB+GsOZi1WYej1za73
2P/A5z5xPNbE01sIe2TGIjmL8TwMFt/eq5gPi8wzvqqqRVDqMBhJ8rkFF1gE
fGrz/+P3605z+nDotxI442iUHp6IoVWHMSqFE0UgrcMWKWtfDKYDp560lg8i
33HK1BFmAsjREtjJfcpA7eXQ2xw8tzXvLd8e4igBae/zMUxThZB5it+k5ugc
+uL38i37rxl4PTpYVSFcDl0Fe6+uBGAoXGRIWb6jBIw/dAtcIrrAEb0mMZLP
jXm9vEjyubz82mU6awiSy8jfFLhhSIfaiczCuwzE6j+0Wjr5gSDXyAzJ53r5
3bfxTfSEq2tyyi1QAT0/T+apOmPIf3HPQ0n2ckjTYH30bTcQrkf6GJB8rkGc
uXQsvTeMFO2d0biB97sOLt6jlhhKsvc3tT1dAXU8p5yEGQIhFlVdJfnc03aa
CzVmX0B7J8L/VXglrC/QpCub4b23pT2B/20FFD5tTvl5PgSk5wy8SD53nSs8
p6bfF7Ze1j2KZKkG9dZ/XsWq+PnS/r53jqwKtvKHRs7+DYd8scuzJJ9b1WE/
eFcrEM5yMJ0z/FYNMbT0SkrXMZQnnM78wqkKYpZrPkf3RMKlF6wGJJ87cfcR
//2uYFj/yHLy871aKPswyr2fE0OmvWNSsio1UAdSOVo+0TDg8eY6yecWU+kd
PM0bDqfP79MJm62Fng8va0NP4jnwhK5lZaYGVrg7/Sz/xUB3TKEHyeeKYFyF
0SsRkGt+ziF4vB68FpxUpfE+WaIkvhVBrAMOvlMeow/i4PBqZCEfvtP9h6hP
X78dBWrL9I9uOTUA17sQpeuDRDS3X/14XFA9fOPNc3u9FA8b6lI35fA88TwQ
Rr/REA2Cb93OM8Y0wTlmtcTGSCLqcT5YFtbUCNxX3a3tDRNh84TJQZLP3XOZ
6SGdaCyceJ8pHajSDCKjnQ3vPhOR5VLfJKVDE4j0nz4X8DUZ4sUlqkg+l8I2
VsDtRTxcYkCfmIxaIYiX6p4Y3if5fK37vOJb4NtzE5UDEanQ+qTMi+Rzr+be
t5vwT4RTxxyED9O1wd256+GzYkRk5pL08s6DVkDC7b4lNBlwQsz/DsnnSplI
Fc6QpUARn2JVpWIHvBVVVquZJaAAToIl7UI75N4SfZeWlQmhiX5jJJ8bECUs
ZqibBpwptMLGaR0g/axmUq2JgFxeyz3a0e2A4zxbzlPbWeBTeW0wE9/vvVxi
R2f3ZoISuZA2tWgnfFDv3WaMJKC/8bK6U/86YC+/tAfflRx4zrpEwdqHoZMF
P77K38qCgKRGR/ennXC4cqfJ3oeAOILSpAmXO4EskYd+Pq8Q/DRCbB0KMcSr
J8Rw6v+Cz3203kQMep8L2GTgw812DIk+DIO6sGxIx1T3VOB9mOL1ZdeYRgwt
yyofSfkf+FxzUStLh7R8GP+kukHyuVSHn+4XmcyFrf6Vm6phBbBro/1/fO4d
2o7IiP/C597v1jjbUFMExQyq+SSf26/24XvtyULgEpLsOx1yF8bGxZ+RfK6/
qFMIyec+0qzJOEdVAi4F4p+0kjCUHKusaW1eBCscMlevCbvBjcr1S5x3Z1GJ
2u9DDxZmIemj6rO/CqVA2ftdsiQSQ2+NaHXkK4shIMfrrqenD8yKue6w8S2i
nl8HbnM9mYQ/TFtv5R+XwfeD5QfqgjA0eK3aLnKqBNQrdvb5WJQDzB87S/q7
qI9D57a6nCrAsf7ExrR5OdzukjlV642fg2+bvHJ2S8HPkXZV92456N6rLal0
wN93jsPCEm8qwF25is6zGgHrmmSMAd6fHY5jn9N0yyGJr/Dl70w/WO04xE/y
uTtK5+6+NvgMP5Iq37//VAFhvYUdrbYYypJ8UBFTiMAqhPxWdmgAXPqJmZF8
7ufls51hFt6QUeSde8OuEnzu3zt8zBTPh/g43q+jFZC9WG7pWxsKEys5hiSf
e0zMw/3NowA4GHcAyk2q4NGXspkRfNePdFLFxA9VQvglqrlXjuFQ+kuSleRz
HzDc47Gh/gZZmbuNxe7VkG/TNPJDFkOBd1NtWg5VgxeH48qEeBSwU6OnJJ87
d/L2QPxKKLwc6jNdi6gB88pWZcZLGGIyyDyxwFsDWx6MSYkLUXDoT8c9ks+9
KXLofZFCOIgwfvmyb74W+ml5hMuO4ueUQesfj0+1kHrzXr34UAxYL/2iI/nc
O615Q5X+kXBH/hizP0c9UDxW8bBax3exyve/wj11sEjGZTTwLRbeWV85QPK5
2P69nDO3ooC/ZK2exrEBbPb8Lt3bSUQPFAW07OUa4OK+ZCXK/HionTD7SoPn
5HTBuj6DfgyI3qWOp+lthIkrTwQ104iIm+Fir29aIyzaHYzdLEuAV/ZBmzGk
v+Mm8zXG3CoWLE4oeM3xNwPrzGD4ggsR2WkFZe8yNMPBPWfkBfKSYaPUdw/J
5/pcJXYSviXAj6mXFVUfW0C3sezfMz0i6iNM/Wu3a4E3ewPblcdSwIRaRYnk
c/dV38xZrU0Eei9lj1esbfDFltRoiai4t2M6nKcNtIekiGWiGZCiXz1xHd/j
frxWlDmiqSCxwJFnndYOZ5uJSiSfqzR3WonQ0w5K/ZYVYlczQefylCjJ5wo/
Vwk0d0gDd46zr2uFOyBFrHHn5zAB/fq5ZBB2D8/ZH54GLGTZ8PGGqPP9ITzH
gpSGvKMzQVBFVKrNpwNmLDUlWCsI6BVTMKKu6QCduwUdVwrxfS1t6a6G96uZ
xi/yk/+Fz33zWOofITwbHk/tOAb0Y+jpYXulUoUsSB/wVebWy4X+L59+/W3D
kJVNlk/ZuRxYnOajqerLBe2Q6ulgfL/XNaxTfY/OgWKvL5fd+POhdlGhk+Rz
sUlyoS6qPPiaIjl3UKoQaM9sagoWYei8EsUeZYkCYD7DdUblRyH8PXucm+Rz
R6jpHnyeLoAq+RrZO3HF4Lx7gtwez5njua3O97qKYOC6toDFpRLoO/tWcSQO
QwrDL3b4HxWDdpPPtVtFpXB+TuJKPd7HXi98artCVgrd6X0P7XXKYK/zxBrJ
5y5y3zySmlEKN+fR8r4rCL47Gu03csVQ3Pl7l5ZSymGv+6iSBF0FEBOPrZbb
432je8d/JxHBqUNPPKnMKqG0bewymTG+UwijGRzX8b0dxzmx8LsSPB/7r0/p
YCg09Un0y5FKKL7Y0Wj3pRpCH7F/MLmGIQ8GwVAN72rINPJwfXCpBgRnWWYf
C+Cvk8NIrgzfxQ1/BX8mbNdCxBf+6gxyDAnVRb79zVUHWi/29wXE14Gadkhi
6W8iurzS57MyWgfHfMMNDwc1gAH//bU99UQ0cPiKTcevBvh7m6IxSLoRSjqe
9XDnERHne/ljOsmNIHPH67HKpWboiaL9c/QDERnLJ5ScKG4Gp9PUNQObzRA9
avdS0JCI3DuGvjR7twCjJTJRl2kD/YIjY6wsRPT3fPRnqUPtwC9szHk9sg1+
sItw0dEQkexPd7UYq3bo66dbMcxrB4kRgc/6cwQEmm7JLx7+/9/nBn/aG3my
6gXI2zPtJ/lcKvtVUZLPzfy6fDlN5jXcUCi1J/lcmrShQpLPZcoXUUSUPvBH
JfU5yef671WLJvncIxxR67PgDz3WpSUknztb3mhA/cwXWqQ3zO7dDoK7/Vyq
JJ/bGbLyxMXEH0IvXvJa1goCnpiEfSSfe85DWOxGix9cEVHV1p8OA7Iksjck
n3vK4dGzO6ZB8PRvWsjz+9/hgaehAcnn6lfL00wvBYN/7z1bsZ+RYJb8Vp7k
c033rv9dCgmHm+Oj9UuuUTD553w0yedunf7dN9b6HbgFGMwmbGNgpXrmPMnn
UvK1p4/qR0HPbNbqc5ZYEKNwViT53K6SU4oTB6PhfOnFHdmReFiWsyCQfG4w
rcxFyX1xEN4rd/4lSoAHbbfuk3zu8zT7T147cZBN4UatOZIMelzFmgWkf3dW
TGZpUEiCCzcvSG+MpAA7GzP/X3wvj6u8sja6nwx9RVesGfgyYOkAaJB8btde
wr/MtTSY1KruOc6eCVyDC0qe4xiSZJJRLTuVAa3ZOtcGzPJAc5BtOQXfm/+C
Nvxy/y/43PwzWSexuiwoHtFwVxnE8/BSeOHWwyxg/I5ue9zJBrUVFt8WvK82
RabtL/gf+Fxf+48DHX45cKYs8dU3fNe729sLhKvkwP2YcNWknRxgO5Kl+Q7P
Z3F3JYe8/8LnkqVRqYzP5MFbGvKW3Wr83B9NbLrf/5+vT93UptBGQAFE2nr5
tuG57dO717bzv/C50xVsji/YC0GdmU1HPR9D9P1/Kr6oFIJi+wzDSyYzsCMM
3yf53M5TnH9IPnfJYPTpP/8iuPRns7OZ9LlEydsr2ZNFsI9PxdLjrwPI2rbG
H9GcRVuzf/bXLc4C+8/BQmtq/FxIHL3igZ8LNNPJjdxGxZAQanaEN8cXblKJ
KFOoE5DImb9vQr8NQkjhxj8ufGebZXdozYVh6FsPh4aHeilcqXJfuo1Fgkxl
5fcg/P5f8HzVSZcaAa2vymVrHpfCw4VfZSSfu5NucEPqZylwFY16rG5FwsyX
Ki2Sz5X1ahJIMv8OVYnxwlE/y6FIYkD7EL676xkr5LfqEdgcajU2/RcIrC7n
TUk+dzDHnX+c0w9Et7dfuDYhCEi4Ib1ih/fJSqkUugcVIMz/JTZnIRi+CTiH
kXxucAR3htC5QJB0p7cqNq6EH+43jgfpY6hFbl5lF9/RTnGuccFFYVDw04aB
5HO3+YQ9BuiDoVP6dETwbCWwujXM0WthKGT6voXJlyp4XfVpynN/BFy6VtFN
8rnBhY9lSD6XJr+DPjiiGj5ZLayT/l4bH+sDj7MWNVDaHHckOzwSwtj2YCSf
G6SSLXWuJxxkt+Plb/LVwLbzMXjAhaHCKaECtmO1wC9fcHtmNAqST778R/K5
k2ciYwWEI+GQJ/M3dco6iF50jfyxQ0SiRO+jfSz1oH8ydSCNPgYuyZ6nc8dz
Znmwk+65dRTcdDl4Rx0/7xoUurWLCUT0YcLq71RDPWRaO2/Kj8QC2nuKmuRz
VZ9NuCo+i4Fb/Maf2+wb4B1Z6A2KMiIyj3K+8qa9EeRYf7wf948HGoOyQySf
q0LN/bxYLQ7IZeVZAhgaofL02c/qqUR07LSCZ8DbJvBxecL7MTARPNmJsiSf
61G+ckHzbQIIVLCosd1qhg+V2icETPH+eb1i6d5kCwgwnjE85Z4MydyHV0n/
f6Zs7TO675cECc+Ui5XIWkD7VUythwYRyeTaMN5MawWP1/rpDRmpcOHVW0mS
zy2+kuO3QUgBx6QZ2ldMraAQ/7Ddho+IOr8+iVX92QaxWqO7evXpICvfaUzy
uWlHaNiDJdNB5SBP5C/rVjg3yRZWeIaIviVcsZt73A7yZV47ytS5oG8CjtSt
GCKbDf0S9X/B534JD+i//DoTIsdDdkg+t+99K1uAUiYwBtrUVHzIAqqJpptl
eB6+3FfDp23138+9sYn7/ikq2UCx5Ok+1YvvHaPdK7Va2aArgpkus+YAX6PM
0nInhpg5GuMO/Bc+V/iBkYbtb/x6BCVSUDVgSEyu3LpN7j/nXota8J15mnxo
yE8pLq3EkLzkt8gqu//8uQHSrczYYC+AIlZuAl8JhjIr7ryYzCyAg1+DLlxp
NQL/BsvHhu71SDIqM4Dkc3e+Bv9Spi8Ezxv0qgJ47z2635VMqrgQOobfn4u3
CQeaK6wRxOQZFOY+MZnhOgeZIBlQRlYEJWjf8tEM/FzukH9XhoqAX3A+NYM8
FtIbzPpNvi6g6PuubqoiUzA+KVnhx1UMkx9NnTgSMMSNbLta9pXAaTQqxdBd
AvIFcm8lFPCe+ffXZJ9MPVAfMUwNly8BFu27ZYcjMNQcvGNjK10K6pzmmV62
xXDGonZ4TA3f7/t4hV7718FOvUxH1UopUInulsv54ntWxUhAnLkc/J9aWPw8
EADXgv8eJPlcqxlZPf0jfrBo09It71sOW4In6NZJOXnApyoSr4n1IVUBO2aB
UNX3q5bkc60HyzPlnf3hctoP+yX5Clh/Uvhl2JL0ex1zLUqoK8GamjtbRzkU
nhDayOrw3FPm1sn11AyChnHKH88l8d1N3e+/iudk9KXAH41nqkDoQVvIkHEY
HAmnbCb53Kfip3NKHIKh48b1Uxq6+O52TqQquYUhDeZ4TfXH1TCg/+dgbWQE
jEu7BZN8roS3Rtz8ehgwb+laGbytBvWtX65v8Zzc1c50PxheA09FTZ50mUZC
pVGROcnnTmZfVroi+h0YDst4mWTWwEyspQcLI4auZv7Mkt2sBeZnp8tm+aLh
e95JIZLPTaB4PUK9GQmSYh+DmCdqQcxsvp/kc/fosI4JKdVD59vjrHeOxIDw
lyRrks+lEzqcpb8UBRRkR+NWj9eDrSCLGsUoEVmI3cz6EdkAdHoUahNf4qCy
2F+b5HP9Y5WZNYpjQUFL8dpN6QYI5jtW9byciEp7x65vYo1wadpJ7L5bPEwl
6lSSdrRJZuCZv/Vx0LmduimX0whxioKKMv8PXdcdjuX7vimyUyIhpVT2SpLQ
RVZRpJQ+UkaEkspIqBDJyN5775G9ub323ntl7/d9NERSfo/f/9+/HMd9PMf7
Xvd1nfd1nafjvJ93737uKzO2Qo82yLovzC+nnw61wsfk9+7nvtv9bqs9kwZ6
iQ82vpxoA0G6FxKHnpKQl62c7saJDpC+vXBB0TwD3PrVEmzxPunxLZ7CgDYD
At7dYjg21ganrBPNdzRJiJ5jrivwTwdwUn5JknPIhpzK5z1793PrJ356/rXM
BuH1EKmYgHYQF3xkWC5FQhx16lMlfZ3Qd/7W1OGefPhv18XBrxdDBDJjZZ6r
/7sPBMUeUz/4MQfY0hUpavG+GiaqKXAgMgcWGy78PN6cC98Gsq7JjGNIRTGN
kLcvD2pPrWwOCOeBsuzww+d7ultfuv2pVR5Mfn7oP/wgH5QFmUT27ufGTLv8
//1c1PegwZGnELIs5MQ+tWFo829iXmJNIcxMPXYuyy2Ep2lWU3v3c0Ua1VyW
dIrgOX+IVKZCMcTemv1PHeH1pbfvouUugZWzxUTf8mL4rWOtvXc/t+GF69/N
5BKQMttyFT9aCqfSP+3fu59LmX3vGBNvGdw+I7ezk1QKWs0M7idycV6dPPpF
tKkMWmi+Nt9RLYdSDUrXvfu5JkfPx2GxFfDB54F4OkcFTPHLOoTGYKj/ivyd
Ko9K4Ii54e/kUgVb1wwyyrxw3qLidlfuCgLfT8fNFh2qIeNMqF6mC/75je9f
xfHVwEcpjmqVjBqoV7e33bufu9XSX91dS4CxsyI3tyQJoEHfHPtVD0Ojes0S
E/q1MF5FTJ4droVsfgetQVwXZ2gI5uxeqIfiiO0tTss64CWy31zBdfGVgiNO
plP1wNq87SV1vgEergSPPKfB+1h8/PXekUbIi1L2N2ppAAEdyTKyPySkWFWa
8PJDEwj8XVtO92iC05T/7Nw7SOhWVLO1il0LmCWHpm7INYMKe86vuTISSrF/
zxGj1AqOgdMpfXdbofK/PLHWtyTEcKRQaDKqHbKFA8TE8lvhmcfcv7uvSGjs
QbttKE0HMNO7dXyubQOujdJvT9RJKHnugMy8WidIW5O78o33QY6PFZexGQmp
CQyMfeQJBfuKtSWz0DX4dCuvw913HLG83ab8054Ost0Xfh75vQaVPP6Cu22j
iNsuuuzEdh6oCQ3lyl4ngsjFpyyvFEYQt+k3f9POQhgML7lkVT0MjAXd3HIO
RJS8b9+vD/eSwcdCLzVzgAjM98TV1f8bRGVLIoXd1KUQ6stn1Jg1AQH8vkPT
19dQkgQxktogB/x4BPsZr5Ggs9ez1zWsDz1jf53xMaAcnBz7OQccSKBY9fHV
b95elPFrZNeEoRKOdTY1PHNfAFEGOWo1rwVkqX21jz6rGLKTZflZSklAtnSR
Wed2N+rmPhEunloFYuFXbXuHSVC03uTfZNCJKqx+rdWhajBllGNjyZyDtNJU
q2TxJdTx95SJZUo55O/w9538RQKfX/wO4/ztyJjqWopqB4KtdvnviWx4HkYJ
5q/DR5CCivfK1ctV0PYU9cpQY0Btej2RKa0VSaqcC7iiVgOvsy92BdJjIB1x
cH+2WCv6c/8j8nGrgYTGiobMUyuw7W8YpvBjGrGvi4S/NyHAYMrlx6KHMdif
yeeiXtyCgvm4DFWqauBI3IaSNb7uxHd58mB4C+qPuVDONIOvD12xlmfE4GZW
KnlxQQsy3XU9KbNdA2Hhmje1qDA4nWn7+6hKK3oUUCHrSkYA56s1Uft1iHBf
3VFOcP8wwsa5TvlyESCgJ042cKkHvvOZsswVk1B7ff2LqkfBcPS0ZesJ1mFw
ohglp4shIuGttINrlMnQSZUmIda2BM2bDtefmcyi2Pc2PRVzjbAhrX4o1WEc
2uI3vlmFrSGzCIEspf5sODgel6ExNgX2B9V4G46sIhYRfvXwzEKQo7S40ks+
Cyk3HBo/uS+jdHci5bxCORwKODhxcXYZnpKX/ptrmEYVqQXHPZOawRl7h/lF
zYHUYobeJN8SCszsrN5URoAZBj6QPkACbpr7lBrjfWjNv/wCrX8dZGWwFr8R
WYApYricV9gCElVNNXO2qIWT2LmxucuLkGJgRRFhPI9survHzkTWw349lrM7
zSvQqGskRUY3hYLSGWWUGNqBCVFexB4uwb6f26PRK7NIs/CyrLNwEzw8oVA+
HbwGxWR83wk5IyguJyR+Z7kF1p2SxH3OL8Pdi4Ee8jkziNA7YPbzbguwqe/0
+FyfgY+xKaX2v5fRJSnl98lT1eAS76aa2rMMBfbSTRyp08jI6LEWA2MbUCZW
TgcdJ0H9/KDeZmEvuuXzrej4YANEOWp/Z3yyAodi5C2SQ/E4a5yT+FvbIWFU
PEptbgWi2+mH74h9Rfwzxj9ydTqBm2uyb/zOKhh9eBgXKTeBjnGOb8b3dMEH
pjPGzEur0EogS3LrG0Umy0nitXzdMOvVO/E6ZhXmdbhow/PG0HCItcTfjG7I
Y7gqE8SeDDObms2NOK9g0xp9r6rrBKG33vltPCoGS6lgEZPJPf/M8frTu6Ew
wXKmtvMkgsgDL46fr8L7p4C1FmtgInwtKKa4eqsBeG/SBY28x9DCvauhwu64
rphu1KEabIXfTUrU7/be21nPxOp7pAh4wyqcfGW7odzx0Bv2OhKKzizer/C8
Ag7KKJ+KftwH5cxJqV+ESegJ2+cZaWsCNI0fvxk7PAAGnp/P3EggoslFyrjS
sHqwSXj2nyXTCJCVvGtuaF5DhiX00/q1zdDu+4JduGEMzt/l3ixaX0V6kVz7
WF+2g1PdCzee150Qze0nKbNIQt+e2Kdku5XDs/VBaie5SSgv3qBfpVtFosy/
1unXuiD/h/5Mme4U6EnNCh+jXkHvPNy4BSp7QPhYzRcXr2lIiSmqyiYuIS4p
t5Ai2z4wmvfsu5U1A03P3ipuVS4ikbdryvvPDcAf73vCfCWzMBf8jbn27QLi
jGQ6ydswCBYKKy/1jvfDuqJh6+ffRJT/spSdt7YO6B9AvMVQBFDRPg+l/Iuh
e/Rvw2LH7UC8LOv7peksEHLl6vv0DZ+zZ5aDT7AFAqV3n+xHrUI4bbcRooLz
De4qW1kbrViQLf9XGXyjEkJC+Ccl6jF0bi2PIjgnDXKubMjFsdbCs0T8XEVi
KFFaKpdCIg+SR+q6Vi81gvo/LOvwYwyttOtETEYXA7NF1psymjbQq1defHsI
Q8kv49WkRKtgQ2aBw0yjFCxSgnsHcV60X0qrO7Y+BXY39ITXVcchSWY9tihh
FanZlRxlP9AF5SsLLy5udoKmbMD0Lq6jow3hEK8FAZYl4i7yC/YCb9nWn7uS
+Bzs676tc6cBuj88GmT27oeQhuvnC9KI6Ied358/C81w5yyvChM0QDCHxzXj
Fzh/uylM3GUuhvuFj2jtJwZhIITseR4VEc38M2DPwOtOTkbBovZ5GkRcCsQO
py8h2amzwNPUD20TK9jfayOg80jovbTyGrr4c3vmPGs3XMjppqOvHAOnhF0q
qierCHG2X/9I1guMDg3J9K5NsC1Ud75cCUNnmukLadkr4Cdr5U9HkUk4WJLw
WuTJCorb0B8YJfbBxD/55CO3p2CX+2udk/wyMm4djXGaHQApXXeXD+IdoMXH
HKSF8+oTs85tFvM1IDBsc2x9KxCel0Y/2nufwI24Xbty3tdgnh/V6BvjA/cE
JY9u4+v3haoCF7atYdw0RFErLxn+XTjPFLqJoT+7PhcnnvrBvxeHlw/U5sDY
8p2B/0gYKs7quuZAFgmOIykm+hFFcNDsjkT0GIa6FmZWL+slA5ua/QuIjgeu
c6N26rh+uTdaKq1p5A27sWsOXWMVwElzJxNwfXonmZ7hzHo2rLXM37G5QoC5
udPcyVEYMiwI1YiqK4CYr1WThlLp4Fxj8xn9wBANB/OrO0ph8DOr54GpWANw
3z98ks4Y54HTmrSi2WVwnPmtiIZ8AZxSCb9si+M2nvX8dyJrEljNyzk41g+A
vNNH+nkVIlril8Os6trgQxuly6W3zbClu3VhXmDPB+VRe3mkGiTL+x9LH+0A
Cq7Wq4fbSegp+8uZu7R1QH5ubkDpcwnYBDkPfcb1e3VSzb8SzUxguO/sM5DQ
DTfdEjsOPyah+KgC7a7njSB0u+IoZ3oN/OGwjPmcgKFXDd68Hk8K8Pmkblc8
Pgxq8Jp0S2INeZ/+InBTqAea/dLFv1X0gmTmHUx5iYimLOyLxSdaoDA5a+lw
6zh8ZXxCXTq6grTS/hOi8+2D+7aY992dflAto+yjuEVEDfQJc+GBHXBTJ7VO
TnsIJupbpePwObtgzKLkXNUNdXKel6oY6+A768X5F44YClGSHjsoWwoZt50K
yRpG4NXIaGcGWkUW/Hr5jbW9YANbMaoa4+CtYx8gWbGCzMIHWjRm+4GfPOQP
h2kTBB6PnWOQwRCnwaMXwuzVUEpU7l1l84GP59df7dvFkGJBa3pqqzWIS/7k
qKH3Bb+0T4MrON42ZYj/3aZ9A6EjtWGPXeLhQFvxmUc4Tsxm79xuUvWGcvpX
HwI30yD05APqbbzu1r/K7lqcCoNYaVbulI5mWKd1jtI+iiG3M9yGM+8JYHk7
ucotNQ980u3Z0QL+OXKZwk94E4F5c7qzJjUajP26B8b/YMj+lDmstHpCi/aV
A9xLxUDuXZdU14ehdTvXHeJKBjSr+ghRfKyE2Q8Mh8jLMJS7XfAzsDcPZOPU
j4VoJAMyfFD2B9e/T5jn+BjPhsCMpa7uJD5Xm6+n/ncN16ebCVyTH9vrQbHp
g/7lFALUHkzP9/HFUMG0DP1vuRJI+L0eGHEsF+6tym2F4LpSp6Xh8CupBChN
dtb8StULnNNjiZ20+Plloyrzf9ACgQLsif0u9VCix2B8xghDS5x2kYl0lTCp
G9db5d8MbTvaAkfZ8TkY+e3YjCkBjM5zal2jKgST5rgA1gkMnQ1S18T+pYGw
+Oy/p7q9EEDd6F05TkSrJQnmgwVtYMRgerT0Tjus59yWpG0iodV7/EfL4+pB
gsKe8k9lBRjf1byhh+u4FSwvjMInD4S0nykTzAdgYiKtd5GRiMraHr2+w9wN
uo/sMvnxv6ZUO1fHcfw7T/mrT2FNEBV4AL3pGYZcK8GeixRr6G4Cpdt3y16Q
k6HPYRPA90vhkn5zgYgo7y5dLvJrg57F4i1dk35Y4SDIbqkSUXzQquVVmy7o
qf1ssyVRA95Gouy/cN3H1HzFblSkGKge7u7o1wyCGfFU/IrPGmKy19dQauqB
p2I3MJWnIxAl+ZQRRa4ij8rYUXeqfrCi0NKXVh4BDgGi/bfkVRRlIewytdMH
zW2efQ7NddB28W1X7HMMbcz3RP16WwHb13hq/Yp8gCwg33kdx226wUj4nUVb
6DdrNQj9GA3O8lOF8ziuIj8K2uuUesJVlrUIjDsZyF8/kebE+ydZ2hn5GdoQ
0ChT0LWPb4CdzXLyHWW8j/nkJtBfqYElvxOOA4w5sHKr+Ss9EUP6x3xua3nG
g336PJNveAGkmjBpPMb5UoaFy5xDQRqQXVga3XQpheYiQf7XLRhaTI4S0TPK
haIyM7fnUi3Q2fnYfvcfCQVvLNG8M6gDiSbZLcKHanhwcjQqKA1Ds+qveOKs
i0BI+CXXZ8Eu4Owme3DWjoRGKFTzeL2a4PuxWd6qbgKcNTm+kfIRQ4JXhZr5
fpTB6ZtSVRpvGsB1fshV7TqGqLVptF4I1cCMm92PsxrdcO0+NXMykNCwPsN9
X5ZW8CqzzUrC56oui3XrWwr8fHGZVy9BHay5Uo+w/yyBkNFnveFtGPJ7oMgn
JpILXMN5Ehep+uCfrcTIXCgR6eqHd9g/7gRDRfHtxBft0Glb53wqj4Sq6Yud
FV42wsE4m2uEg4PwkELJcLFiDcnQeWhlu/YA26sO+W2Bbig2pm6aUCKhnJG4
61G/W+A5dTGnjGovhMcqsk1VE1HKLPv1mz0d0PZVLMDPqx9enougDDtGRISn
BmFSG91AIXFG+OuJIYi6/OR615U19PTQtwMjsn1QpNPMFbh/CChivor/UVpD
vQG6vRYX+qAqclSX90MCDGUe/9j8G0O/+AlDB4q84Qe8eNMfGQ7agw1kQzv4
eazSGe+qcgfGk4umVWYJsNSV6XoYf/70uWhR2RdB4DBwLnZdPQMuiBlqHtjj
Y8r3NRNV46Dp1/ZStFQeiKgkqfDOY0hAw23j5E4K+L816EuNLwJBLwdj2n4M
6RWY7HvplwM/Hxbe7aargIvu768NlmJo35mBtlGGQvi75GPyuxBBrtjqj2ic
p1XmO2Qo4HyL772+1LB4HXRMkPNHm2LIW1m7/6ZZNcwavio7r98IP9M0v9Tg
fPshH+tpdp5aeFrwfHr2QhEYRiotOg1gCJPiouq7nAP/ykkXerJaIMvDnils
noT4nlolK8k0wA1q1weXdDpAbZPIlfOJhF4imnjlnGZIyExieZrbDf61UW2/
GfH1Lk4lD5t2MKx3Uhsb7QUKSnHBT/ZEVOWm7Vqq0A1xVkSqffID0KCUx2Na
vob0k+/pvf3YC7/VPtRSLlRD8ol63flYDJnqremRcJx9MV9zWFOvAq9Izf3Z
IhhK2N2Q4k5rhrqfm5ddskNgWNXqsy3Oh3MCBuh1eT+By7TiYsLDOFDxyfQz
wOfRj28c2U5nA6HfZEDFxyEV9tH911mKz6P47zSrWkEx4BLzX6fzRA6U20ib
tS7jc2qMY+hgZDKM+uULkFsVQC1d6NZdnBfddM3yP9WUBdbO/7XoPy2FuLYH
DWdw/jwZL+6luZYPkubsxm6CKWCi9iph+ieGZA8VtCrERUPI2b+fVo63gOuz
R77dGN5X1fS/jv+uBz6PfYkcpZWQ+7CVazcD510VJ8xD/hRD/Je7b57YEuDg
DKtRPa6bVqYtRmX6K4E2yFDh/It6EIkpIAiqYaiWtMn+XJ4Ad9cm0lo5C/C5
5zn5eBxDxw85Kj12ygI358SKvffFTTBcV35Eh6F/KeQhdlfq4UmtfVz+C7x/
Twns/+tPRNvKDhrfj3SD5Mk8JwfKNvDaHyEQWUJCWauP+m9GNEHxuHlu2kQn
3C3LK8xUI6FDkyHFdbfawFsj7GSFYAn0KD+Y4sP72DMPz1SBR/nwJpN7tNCl
B7o9+kby6ohoh4ZGTki7C9yDx3gWhvogK8sxvJSJiAReveK1WOsB4+n82NMs
lRBALpB/MgdD6o6oIiu3GJrZI7j57pRD0V9tKHNcRLeSc8Yev5kH6dr5YYrn
tsDl2qzYI7uIdGM64wf/zYNDRSR5iHEQBNS3uy7heEg1rHgrPfoRtueNMC7P
aBBOvr/vFt7n/drLjUpZAmA+J4LlmnIySOfqiqduYOgCClTYR4yCX0xf756J
DgDBl2xvpfB5ERLLzpLU7AqRr47U5B7MAql9Hhyn8T5fHBef9Z9tEqgPan9t
r8yD3391H8RPYYhO3oOG9mYmFHr+3h5kjYTmiM28Lfx71SNXtYjS/rBuqX5B
i7UJzu4ceLv/CK6btieTog7UQ9n8rk3WfZzPWFn6mrbjfIMlW9d+Jw+Oh3tR
/r2UBKzBUesuOG/pc9kuEDsZBXFxbFxmD8vBDju070Yxhj5RuR+cmcZ19Nba
kSHWGrAif0kQwHnLUP3DkrUPFWC7aFhhwJoBfDoO9bcxDL20TuvgSEgEJQVk
LebdAS13f8wmmJHQf7/lWsVyWsEiJu8w71wtBLf65J8xwJD52PV4RucakLX5
fPbUmzzwuzPz89k0rve/oInbhzNBtnu+bWIA5/OZYl51PBjSZv12n2RaBwpe
ZvPFgj3Qav1nP2GAiLwCvNWDKbrgW0t8wl2eFpCofjy+MEZCXqSgHzW5jcBp
6/lYfbAdpL4zhhnhc61r4sA2871WcFH8ZnfkfhGc/DTeItGNIYY767c1XPNA
2tSAzc4c5y9+yV26O0TUNlDmfFOjEzhWqYclvvTC0L/ko4z3ichQK4Ba27gH
QGz2QNJIGUT28Rdl4n1VbO3TiHtCETBQPMvL+fIGyNXv//dLZhE9X8s2Kd2d
B0cRcssS/wBwH/ezlf63d3928lNejSuMsz/+KC3nDUWK6tdqmReRteHmpXne
BSjmHKg13o6AlDF9CzJ8XgQGGxAzRf1BXoh0qc0xEex3uJdZcV7B4zjUcsA9
EuSoSedWmKpBNFYhhBPv5y98aLwOWJfD8selbcn2dNiYo51OxOvVMfaawcg5
Ed57ZScZevrBKLVF4Sc8ngdPxL8QFVzhqJYW480HucAyavA2bg5DPtGBwRUM
GcCKCVtIEghgknewwO0lhpocv5KfGkXgrFJ75/JWGMSHs+s77/l8Qm7NLtn4
AY3vuYKsrEL4lvo0NgfX7/x37OeQWB58L9W6rmBTChypWtRr1Xvv17VxVvlR
CByvZr31cV6hgiYOZeLz5a+Xqe1NqTogK+h3cUpIgLNO5S8I+H65xDifOg1F
wKSiiRvbRhVUiTO/J+D7XeoK/D1lVA7NdJHa5uVNsLUdR6v3C+czQZc6Jzca
oEmU6cZLoTQw+TUteg+fpxkKujKXWhPggXT3YGUCAf5KSpmzWmLoy5RC72I5
gv3WlodSX9XDvdjW7W5ZDL0ZP0Btkl8LbfPqYWSENpCBlrXffiTk9lePXLGl
BSqOVjvnnc6FiXQ9X1l8Lv9DSTdejabDPravKeSxTcDjKB13c4uEds+v6fQu
NoBXv/k/szPdcE+j/34mzvNd7Z6vcVN1Qol3zd0SvjagOK1m4RBNQre8Sy08
37ZA/HMfQiFNFzSB4HlLPhK6yMtwTNu0A15PP8j8MVwATRSEQyn4/GUEQpt/
ay4UUrJJ7BT3wHNPOt1FX1w/6lCaSBC7QYPGm5KzrgcOmRVaXPEmovodrWqm
H90gQLnhhCtKqGPr8W6qwZAR0zZ/f2Uh+DMzOTNfDwYRb+f2rV8LuA56mv9U
eQFeb/txCklUgtrDX7bCybj+pfzC6etQBvVLqa/Inf2gtcZKxGMP54fajnDK
uoI5TexRmqkweKBEofUJx8lt2osz8uZ+MBV31ekEbQKMCtZ3iW/hzwco6rbf
jYD+1VP9Mnk14EM1tHgNn1/3GN5Z2lVUww+Ogo13WCq8lg7RDMbrOCwgu8OV
kwCOCrZnW17kQHKiamTlIoay/wbcz/2TBjhDy1vgrgfT50a+zldx/mO6eUbM
oxak9A1NjNUK4L8JCce933OpM+R/meKSC9L61A/eTxeDqoUFZ0EDhk70Ie5f
ZwtBz/818zyu41WoL73zYsDQo/MNkpRKDWA4nJtne7wSUrl0nuTieTi/NFD2
waIMCKoNsjflW+Hgz6fl9rkk5HjE75M+eQuIcXbMfT2UA0thiyZSS/i8GIi0
PtKVBiSeddbl0BqYX1c47Y7r8dygN3pOcTjv0gor9/TrhGNN6e8pJUgo4GSe
wjRvB4ja9+sxXK8DHz1ZoSca+HzvvORxm7kW7pkp76zfawStlGxDdkac19np
j9VeagCWtX1wo7YF3I95q0WWk9DZ4672J6qbweGI10NZUjdw9ckkZVYQkeZb
ba5Ot24QZw5UEnXpADfvbOYT6iSUpkz4axTVDr5nSr7NzHbD9eE+uqkqIpLk
u/vbzbkbdvrJuVZP10Pdooz/64QO5HvqZLh7KQkkrm1YiyeWQ/JGi8GNbAy1
dUqWcCaWgnEk/TW9HV84/uZcxEccJ7mpxw3nzrjBu+VhzhLOUPhx7M/VbzhO
0ijCC79+8AUmuscMLD1xMPRyU4oZ58n7GCszzdTC4Z1RZKJeGAJ6Lsu3Zh4Y
IogIl38kVMFQr9jzHr0UiJm6aM6F8zTblT/i6r/iYfdM+PaiWxY8sn31VBLX
3bcbJDi1GdLAbGQxSYuqDt6ptf8ncQevC0uhx5V1AizrvHnseTofXI6lzbvi
/E0o9o/sheEv0LjWJ1/lXQTNRlNt53D98nmh5CIbzvPGxq1EP2k1gFHK8rQ1
F94H4k9d3kivh8XsiwKGPuXQTWRKKMLzUKBfIoNCS+ERpXPp/E4zsC2ZPxRr
JaEDXz8Mhms2Q9/9okaui1lQ8mImLwqP08gI+8q2kApXdhcYg54j8NW8aPrc
E0O8EjdqSOlVYO1oLtzM0QGDuVvRWdok1H88to7eqB2ervUJHlKvhYCSprDy
hzg/j1e5TPAggNZYZzSNfANIH5DNrzyFofoqRmX+2Hq49VP7YIhfM5wrE3/l
10tCAvWWlX9ZmmGff8yOo2Q3mFEpUD2ZIaKfdgd23M92g0Ve8PLGhXaoZFuk
8jYnoRnJVLF3C21g2f6FzEe4G/SLEwLk54ho7lllRQ1XN1SfNLGJgyKQlLs1
+wjnJ4ufP/vdvl4Aan/BWvGSCBRGDjt3WMWhiYmZ9fo/GBwbVDGbVysD87bH
Db8L8P7WH2dqOFcCir0XdxhPhgJNwv6gfhwnxrdayrkT/KCQqj9QJzYYjt3V
VlLG+dsb66Vl2Xs+8OiiSzfmHQurolwGLTh+Uqv/G6QwCAO1q67ZcLga2m+p
+gYFYMj5xVKD7nwlXBWi4xuhS4a6U7fy9HEezmzQ3Z2mFQ8hfnoRDgsZYF9q
qyGzhqE48HsYL50Kwu021k3vY2B2PaXnFK4XXgdX0K8vhUL/9aGHVmfz4KRj
V2QFrt9Do2pOvOzIgW9V1kcVzQvBYzHSKroLQ4PsEwwLA/mwoveu++njevC8
6/CCTxRD1xx5G7O46uFSlwMD++UyQA8cs24VYki+yCBEd7QExMIOCjcuNEHn
Vwn5wK8kdOTvELttURM45zAJj8VlQIaPwLYvHqefTpx+47FUcEnmG0tdq4Lv
bwrSngXi5+iyo5FvdyUk3CeTZcX1wnxzREKEGYaUrn0/BowEmIkJvZZ+ux7m
Dk7ckBbDkIxDwrOjrPg5V84NLkzIhXCmejFtnK++PR54m1k+B/TghIiZRxOu
43g9wxZIyDi3vE3NqQmM3ExoSWJdcNXGKZ93PwmtH7kRYBvZBTbOOy5OzG2g
sXoim92NhI6SVCe+KrRBEnXoZePTXcAm20BVSUFCo0/GLwwFdIGe6UjvEm8h
7LO4VhuH87edybyyvtx8uKC7L0LjryKUfo6kp1KLQ306b16N4Pj5X+vfkl7a
ZHOXwp3JDsPPZRiyVzhxn2Xv97YOeBUpbdWCsoueqdJFDLl6k5zvLdUD/3RU
EJ15ILDKLUhn7N0rtC+5ciHfG7byVXyr6qKh8syc7N7/Lf9FWLsQ/EKh1ndf
t4BIAzyQ7WgzNltEgvuXn3vzzYNYnmDtKqqE75YrNbIRGLp6pJ3m1OlKOE5d
qNW/kAga24fpzXAdwWT8joe+IQ7K9n0xa6MNAJWq1IPt+Pe2vBfx+zDlA5ZY
WUa4YzpwxIzyLuE6ol/fmfqtcwrspNR0tQ9FwdUV5/VUPJ7QjnMdPGdDYU2P
H0TUciH59tdfT3C+/UnimXLiVDYE0ZYdtrIsALnjRQp3+zDUMBFlqqGaD596
652MAuqg/kfHmAnOf+JdaT6wptSBhcnLBXqaRFiPGZ3gw3UEecJLi9C7cSB4
WvehJnMp7B5u4hjA8xlscu2u6PkSuOj1LPT71XSw8czQFCZh6Lf7veyrhing
LqgfCnGVQPdhOOR7xF4fuFIWzVgJT/Xlc8WrauDGSE9LgNUe/2T6eT+hBmJ8
elz6XOrA7lnZb40rGNKln/d2jq4DQl9Jplv+F5hh+qZHmMHQgHpixsHH2aDE
QG2om9QI7075eodskhASOvh863cjWN+9TqHH2Qm5N788YT1JQjvHfiSQ/e0E
v2eUIWxsrXBCu/vnUCQJNXgTCvzyWsGP4e7bBsZOsMaQ6isuEnp62ZtbdKMT
FPV5D7VIFoAi5ZMSkX4MfRXhL+Pny4faj4JohN0OHrEaG+nXfUAct66GOu1i
/3M95Qu115dTJbDWN6x2FefDVY71uj2JxdAk6PLovnADjKSNxRng+PmsHqgY
i+NH/9Irg4W//tDgvhHUiePh1eEDP6v7feDVbQ9N7EIUhHOy2Yzidff4UrV4
djAEcptzK7T1rMEV2BL60AKyu1pPzua8AN8nd9d1witgseWxGYrD++dgz0s6
qwpw6H9GNb2YAAVH/yoq4/UtFK5XcVaMA4Ekzvus1oHgn7x8XRv/Xnmu+Nvk
hv5QuqZVP6CcBgO8kYUauL647OpyrGM0Ga7EbGfnB9QAbTa3RI8NzuvuDCys
u9eAueGzbn/jSFjcYi89hutZtuHJlgM2IaCdRm7CzP4Fnok3vE2ZxdC7yqyM
IfpsOBjnQ5sTlg/j5OQH7Abxfj6CvXjakQc/jN6pPxirhXjR2rWSazj/FFBL
m5Wsg+yp7PzkMwkg6HPj4Aoe//JbB+MgFAtLP+enVZlL4O8O1ZYjnufrdd7E
8chiOHNT0AE73QiMiU5jFOQYEqaxs2TOagSeB0yf7A+nwbPLflpe+L7Y9dUU
Y6qTIenNkn/Juwqgj2/l/i8e149G+wl2hhVwfO7Wp717Xjyqz6+nx+M8TdV1
acQd53/jkrZ17DVwstLxOONbnKfNdz9CcjUQ33soOrKzFsRPMr96fx3Hz/vE
T0KiePwZ6MSuZg7Y683rdOD66w7tjFx7ZBYoqVqkT441QAfZqdcnDmBI5Mzs
Njg3glA4m74kXwcIkd2NVpQkoTKuB8OR5p1AzmRuQpBpAbOB0ty3OSTURv3f
iRKhVrDR88jl4ewAflGftVeXSIjl57s2K+NOvB/2vTxinA/EQl8XcZwP3+iN
uPj5y//2u8b2u75qv1IMSMw/VLUWx8mngro0jmJgIBf7l2JvDc1MXJbZON6o
JJsvAY63d5l/btSaBgIz5a/y/3D89H05rpWv6w8ZahUMnoMR8Jzqma0CjgeR
8R/BrUIh8N5SqvNcSDmotiU4aqVgyETmj5fGQDl8m10dtaVKAGuZSIl9uB4U
8JTlqIqLBdhS3KC9kAq5pipGzusYuviQa9pfMRlkCBFnC1YQZD8uuL/zDkMH
pbMEJvhqQNXq7YfltmxYmxyh9Mf1Wugux8MT6llA56DBRDeSB4+aim/xjmDo
42Sp1ZBuHlD5vBy7fLkWEpQkuGxuYyjP9FWSe38tqClOvt4vXgyR5yocHfE8
PNax/OHIXAw/UxbLus0a4CbUPZc/iCEyHkrKlcuNwMf1mXecIhVu2yw5FOJx
/hqZ1GMQSIYKnlmv/nflMHj2dfgwvl9STf1h48ZycBKQ/B5N1gJvVHLD3QpI
iONeuVcHdSucQTtH5VkRdHJE9Oq6YEizWc3mWQ8CrdumpF3hWmjYevqCC+ex
i5IvLQI7asFuRvsOjUAD0ApbW2cx4eedt9uHi7kRdGO+TzfcaodLL9+33b5B
Qq0yEfNLSx1AXjKx42zXDCe4HTnyq0nI1Mrxc11RC2zUT2gcVW6Hy9qOT/67
SULf8rc+PJ7p+J84GVaJt+m1KYLdpeebjbieoi58+8A8rgjSBO4YBcu9hbq3
3IxeXxYQcZaT28B/AYoGLxSKa4eCYD6HLiXO60LGPnJK1AXDPnK7Rfa4cGjk
MFGIxnFCP8lj/y0oGOQprf+65paBza4Q4svE51EXIcFfuRyY/Ld3S+XigfnN
31uJOE76ahZ5j3XGAA/R4mGSXAp4+Piecsf1o6D09UD9yiSguFn0ab2/Gtxe
zylQf8TQj5TarX+pCJTW124kJmbB9orKhiSuKzn3x/LJxGeC6wOhkrcieUDb
op7wBtcFEWMWNkc2c6GjoYvknUmARD1F9yUdDAWxnbNKt68F7Z99nnrPisCK
INP7E8+DsyGkY+FFcNYx0aq/oR5M/N7aEPZ+B6fxlMV//Q0Q7+b78sPRFPid
a2FViMdpFcbAwpacBFPxv6s3I8rg6bFN9Sh8v6ub72yZpMohjm95h06xGTJ6
aKmO1ZHQPpr2JqGgFhg6GjmUxVYN3poCK3m4PvqRTPp57jyC6g3C5ZB4AozZ
BTe8e4Ah1pyouf+sa2Fwjvf6AZ964NX89jyaE4/Hmiv1cF4DBG2kcs77tkHb
wmvblkckdGbCruTjyw6gYvF6Mt/WBLd8TlaNt5OQlVfEA89rLTA+8uzvLbc2
HP9U/nl6JOQzf/iw69MOiLdZia06kAcRFx5ZUIzjumzf31mbydz/iR8bzZY5
Um0hNJ052tXVjPdnvvvsnqJF4DYv+lu15RN4Nk5HhnosoIiNm6GNxQuQ6U/7
yLI7GW48ZmBm+Y4hs3SWNx7/JQHVavYHFa8wcE192ryyN3dkE+fMaILhiuQy
FdNcKUwdps7R/4Lnk9rs12p9Gbh+kPTy942DiTvXcoS3MOT91fIk38EYeOJ0
pdLAJBksI4qkzPHPd1cdLZaWS4KsNZe+0zdCgTjTS3kKx60ux4OH2vzBsGDb
Z+4bmQkNZozvU/d+t/G8yoGJ/ZnQe+XSebawXBDauXfu3QSGpmi8ylQjcoGu
/8iVG4IEuE8mMKpuiO9Xmefud95auDpHmRlZVgjZfAHzm3geNs6/RPH8ReD6
5VVPhHg9BH5+wTLAjffhTmvSz9f4Ob8couMtnwx/NQ/vBOBxDnGnJ8zyJ8HK
gGH5125cd06tonp8v/1fv9eml5aBbBWrgptkFZzrLz0q44shKYePyarx1eC5
IbxjxE2Ag9Vt8z14PO4S33+c566Fa5cF2pMZMmGIIW/BdBnvY1wH7lvlZECL
/QW5NPJ6gH+inNI8+PNC0kpV9xrg/dfCPpnZVhjz/xhx+AUJHR5QE9Hd1wHf
OxoL7ESbYEjd2UJ7hIQ0s7vbCHM4jh9O1aWOtgJZ/b6yyb3ngyxcx3ba4ftm
2TcXq1wwUJof3MTzVrBS/KXe5X/j53+tvwnNfq93uhBaXi/JOuD6ndqI/qRI
ayGotgbuq85JAHHjuX9HCuYR8eXal0fvFmFzjHidjacGglV1eFq+k5BhQXH6
mFw7/BP4nBy9EAIM3p8VZPC6191doBX/GQSZkPZCXr0V5Arb2r94jaNGsdsq
bFOr4Hp/9O53wVKw9rWhZMH17KiO+flY9TJQY93Hg03FQu6ZMss0HG/nJN8y
nHoUDb+p2i7b4+duTpbM+17oGqoJhFufpEagtiT6p39SEngcmYkX3/v/Bt3n
9cTORHjyyHP5wpcwSDj0h7wOx/mrGzm8eR3B8C/x1UQsXp+onMLEZbxeQxI0
PEtWGSALPo6yh3LhkIRj4tWvOH+24qWyVMqFQMOipZPlNXCIg0AYNMXQiM27
BrlJAhzmF/5yPisW3ssI5WbhcQbkK76Lc42G90x39fazF8L9B/YfYvB8VgpV
GLXUF8L7bo8dPrxvXYulY+DH4+xJ53hnPZEI5gKskRUcpfCmI1ToOZ4HQ54O
6ecKZRDPqSncal4JJ+JmzDmDMJTvGUVNxVkNY5fymc7k14DV5nlrVVyfNvod
NCIfIcBllgxx1twMEJykOYbwff2+nb8WkJwBv0UCxytwvcBTZEpRLoLr8SvF
pwUoGkCK6kfwhsoeDtmfub4jIbm7Av9JRrfDPofLIsLJjeBs92D54RwJLXPe
GQ3yaAbxr6KS0nKtgL3a7bv8noQUCffHecPaQbHlw2wYcy6cL2ANPYrnLSZM
kD/73v/G4VxAQ0vs0UI4H7+pcQXPj+rRGJ+KtUIompIhVFu2gn8dIRszHEfP
SLOL95ZW4erQxdc6AW0gvMgrwoDX/e2aZyvt5RFoFWxj3CoOgyPpr1ApXl8C
y80nE2Qh8Jb6gnbTZglIkCfw9+P5bKTf2b2jVAbFhWaGo3i9ftX5NO/hqueq
3FxvUDR8CzTpM8LnXrVmmuo83h8m/kXTcoknQcHBY78snldCx5DM96lADGn/
ifC7KlgNchdpUiwqMmDo3SanH57naP7qL5q9GUAzKJOVTp8LXqp1nDuT+Fxm
IT2+9ywX3PmD7jTW1MD0nzybCyYYyvonVtxBWQu9Yc4siKUQaq+Vs8nieZiU
8DtMQyqETrvVmaagOuhz91zREsLn7CPVnn1CDXB/se3GLr4vc40b1XX4vjz2
lVEpqZbBa7eCQUJmIyjfG6vmniUhlQoCrXhUM1xhVNI64Izryh9TRqkBGOrk
PR31+Vk1MLN+WLOprYGvZudFyfF4DEsIuj00tfA7tvFHfmQdRLyWfyAjiOfN
orXqsVwDfMyndNR51gqfP9L5NrwmoQKnjPoTWDs0VIRXGRY2woEbJuY007h+
bJTy1atuBq6Yi20/n7TCz8QIWnFbEqKhe1ZOXG2H9mMJUSLjfTCckHrcyIyE
NttIAnE8oTD847t4U+ga9BgcbzzsM47SQhraHnWkQ0Agjq/fa8CVE/lfYtso
4pTNFJbbzoN3RIM83etECLsxxfP16ggK/8WTGtBZCC/ue539WT0MjipG5Wcc
iIiK+2IXuXYyVFsM7DMcIMJpFnoY1RlEqo9lQlKpS2FHvH+1KmsCWvXJGeau
ryHRCSyEziAHziisHd1WIcE1qv3P6cL7kKv39+kPAeVAme7aPupAgmq5Z6Pd
vL3oiVi8lDNDJWRwaWJH3BdAkcPXKclrAcHatf74zGKgUp4KKighgSCfNbnc
3W70yeoB07eUKlCdzsk+PUICyyq7E2G6nShBsv3T6ZpqWCXdZP6ZPgdF7K+l
ky4soXqkzR6fVA66KGWe7RcJYhMDqi4JtCPHZOdTNh0Iug7LPBxjI0KIr9h/
tmEjSHXg18rzy1Xw9wK2K0CNQdULge076a0oWyHHVkytBlLS6ifi6TGIDmhY
jhFtRV6UbgpBbjUgvPMg/+KpFThWwiX77cc0KtXQfXDdhADO5RmT9w5j0H+j
7LxWQQs68UlT83FVDeSi8wee4Ot+1uzlvBEtSJnNfop2pgZ+cNaQX2TEYJ0s
5XFoYQtKnk/ZktiugYY/J5UeUWGgORR8VkW5FV1ZGHiYQEYAlll2ukgdInTn
jKnJkA0jazKe4k4uAsjIRGxHLvVAiXFN60wxCXHmfqodehQM90T1oqNZh2Hf
LOPX9WgiaqK0TDc9kAzlZPm5L9qWIMicxpzRZBbxvx+aejTfCDF1k10JDuOg
q6Owax22hkrvtd9V6c8G9lCTPPGxKWB/nbc9eGQV9Xzt4bbNLAS2e+WJ7WSz
EJRrkKXpsYwYUzu9zl4th79XqLwOzy6Dx/j3FYnGafRBPcJFO7EZaP94RB2N
moMrxBa1G/xLaCGU2WJWCYFiYv2owAESqApEisaO9yEOXdk78v51MPtlQfOY
yAJIYFthxLAF5JXJHnPJohaeNFN6hksvwrUXm/pdRvNova+EzC+yHqanuC83
tazA1q6IewDNFKI76M116WA7hFx2HBV5tAQXgyzUFFZmkZSd9cwJkSY4+/Dt
B8vgNciw8KgZyB1BknkU2NPlFsC0M6q1zi9DW1t8dlrODIp+PjLYoNUCz6KU
D4pdnwHdE7uHCb+XUQf9odWKr9Vg+lPMIL9nGfJUdoYPpE6j+ipp1yuMbXBW
8sGg43ESdJaVdoQV9aJJNo/OuoEGOLTJPDf4ZAXSL0kaaIRMIcjlesjS1g4U
IblvymdXQO22yncX8a9oUzTSv+K/TqCpQaq/bq8C7+uoi58UJ5AQiyl7SFcX
mNKZa1fj/f6v94Ebit2jyO7JwkwQfzcUabBk8caugueWWd/tnDFUcJ7vX29m
N+g9oy1pY0+GjT9DCXu++qZLapeNdZ3A2PzbVRu9YqizpC3fu8eaXTGtbLkb
Cl6BF+aqTiJ4UsDzeM9Xj9lrYIyBicCieKn/3K0GGF60nxh9j6Flq6Mvad1z
4FnvtUPiA61wgztlywPvw6aN2/K7TEWQXXR6Kkq2G7brZH+w4voitOMdl93z
CmC48InB3KgP/GdTqtyFSQh7+4J8xJoAdL8f6kcODcBDs0xqjwQiUso55Owd
Wg/ZnQ2Sh5hHYMPf+Nfd5jV0+erFcz/rmmEKNZQcrx8D9g6mQsZvq0jzyEe6
Got2YA1fa1m06YTtw/NX5BZJKPWmBE2KWzkMnS10IshPQktEANl7ulU08MfN
7hCxC84JE47y604Bby1vmCf1CrrMu/IvuqIHmvZ/GvrmMQ2vTR/3MWNL6Pnl
R6+FX/eBjlCeOW/mDDx8PrKft3oRCVWdpG88MwD9HU31uyWzcKR0vq/WYQG9
MNBkEWschD8s3ypecfRD2M958prfRKRNNeLPTKgDNXPm5fShCGj4ZOW556tP
bdeD1nE78F1utCOfzoLD1yip9vSmQY0HkYktEAL2q76W0CqEDtFzJtdmMCR2
NpfGUCsWnr0pM/a8UQnsyj+H9nz1ds28B3py0oCSrPMHxloLBMhHByIxNF42
P60mkQfOHtXzF6Qa4chG0xDDY1zve7wkHIkphlG3gERT2jYYiw+aenkIQ+d9
mu7PilZBr/xgDcutUhgZNDbq78UQE6vnoTMNKcB+lZI4rDYOp3zaSp8nrCIn
L8WWlgNdwPFxe6n1RydMLnd4qVSTUN9yfaqWOQGe955KshHqBaWuqF0mSRKq
uam8PanVALJqHr60Pv3wYPEIy/s0ImL7ljhTv9gMNfMmBUXQAJaCAzu6L/B4
pg5XvmcphhFserp/bBBKhhUIJ6mJ6Pr0nTsreN3v3JS2s/SahquJrXQz6Uuo
te7bHe7GfvCJ8Wy5pjICgaWYR+Wer36KLvXe0W4Q6CVZU1SMwRdWYvXjJ6uI
9m7z3MJuD/R8KsuNdW2CY7W39uUrYYjKfobVjL0CBI/oONwQngQemovmRU9W
kLJyc/rCWh94Tuf1hd2ZgmGxryROuWV06S8528P5AdCiERdLEOmAKYPc9/GT
JHSVN6D3/mwN/LkycHB+KxA8Q/j093z1qcTJ2lbe11Bfl6y/G+MDFpQXGPd8
9QalUg5Uf6zBShG7Kp6XDIIGhwX3fPW/Hkfw1D71g9XeF23MtTlwX1S7ac9X
fw07KfKeLBIckF/6gcgiOOe8ejFyDEOM6NK7QL1kMDH5migfHQ9tT7zs93z1
caHqtKJG3nCTEC9gP1YBA2atZ+QJGMr8bXSpB8sGxVuGOr+uEKCWk1MxLgrn
V+2R8e11BVAxJBTbKZUOFG2+wnu+errSqh/OSmHAVhZp8EQM51/2Ofz0xhg6
SIqsm8sqg+XK1H+N8gXgMfRozgbHrcewd4X8sSQI+x2ho187AL8/FOqbXyOi
tsU/fCKENnjPf23bwqEZNKtn434IYKj60ONFluFqWKMxHio72gF50VZTB9pJ
qLpa6mU8bR3sj5+Lcf9cAp13O0e8ejCUHvhO4rdmJiyQnX+UH98NvCshndce
k1DsDZoWN/NGyJGbnQ1NrwFUo8zonoAhtWIPdvQE35cLgfPPxDBcmmJNW72w
hmJ1ztkcEu4Bfibd+q3yXsjZkSF/v4TH2WXsTj3eAt/8pijnmseh0J7pkPTY
CiqJ1end9O4DMX+NE9l/+mG0NjdM9BYRffIPbSEEdEDwvkCGoPtD0PTJROoq
PmdzjxnY81d3w0fOtFZ+xjrYh91gtnXE0E2np5sfZUqhSpdCbrtuBK7511qw
1qyiYMH511mEXhAz/mD/XmMcGMptss5UrKABr6QrT2f7YWJ/nsobkyYwl484
zyaDIZ6DxCEZtmqYZuG00mX3gVsf/j3d89WT68lqNbVaw3w7ybCN3hf6y3IH
9nz12wcTI/Ro34ClSpaLiUs8GGTq/7+v/vCR8NJUVW84FHFQYHszDbxLbb78
xut+PVBTPepUGFDyFAjstjeDGWeh++OjGJKDI5xv3xOgY/jtT5/UPLAx/Lx/
z1d/jNv2qAVvInwTXOHRSY0G5hhmbM9XzzeydLqz1RP4152WHy0VwzIVc2Vt
H4ZIKjgHWM2AKbGv1GWulWDLaU27rwzXuZsXG6N68+DLsBfFJw18rknY1uz5
6t2WhHi5zobA2npXX05rO4w0N4jcwPtPVxnlunl7PQyd7OscSSYAR5T41wBf
/Hn3heQCuRLY3JRy9DuWC7VTcvShKzhu3RzS9nz1wm5rHzipeiH11PLGFi0J
hb3XSA/RaYEAoQmSoms9aMnrETmNMKTpdvcWP30lvGvR5yDzb4YmKsZkbnYM
2SeIJ5ibEuBPlIqlO1Uh7OrqeR6dwNBzSYcMy900GM/vObn8sBcs+QJsTMaJ
SGztCIoqaoPJbOfr2Xfageq+kihdEwmZSf8ryIurh4S3ehbelRVQwhQxol+J
ofbZc+L/vPMg+N5fk4TnA8BhJ+Cdw0hEXxnuOjcwd8Og5CGjjCPdcOsEsXUL
x39nlOOjDVITrCuodLzuHobzDh9EwynWUOSJsIXNV73w8+WD+58Fe8Hn+fXO
P/NEVJL1n8FLXE9e6iudVjHth2ke5RMVqkQk+7bJ98XrLjDZ732nT6IGwsqW
r2/GYGj42tWmPV/97yWGa5vVg3BJyCpb33cN1dF2BnA29gDDRHBUockIxE1p
Xy2OWkWZH3vP2VP2Aw/Zv5N9CiNAfJAnMJqyii6F53+f3e6Dp9oULhQtdVB3
T2Yp9DmGTIIFTL+8q4DrkXc3A4t8wItC9/999WdOeDPrL9rCL/MMC8GP0eA3
eaRrz1evcFBfXbbUE+xHm9wmuZMhzmRRYc9Xr374uOV32hCYvSg89SOuAV6W
v9CjVMH7HvfI2VjZGvBg+xCayZgDjvXu1AxEDP2pddzU9IyH+m82dyrDC0Ah
edLNEOdLGh9+eZMK0uAfmatEk0spUNecfLfnq89V8ilzNMqFAn9DrY3LLRA+
qY1N/SMhPYrqwM+GdZCroX645EM18F/uYtnz1dNc/Pxm2roIWP7JUlsLdOE6
t0RSwY6Eai9zsIp54nPoVmQvXw8Byn5vyMV9xNDr6A0X6p9l0Oh3i3zBtgEG
TRT/3L6OoRSnZ+XMQjXQnl/N6KDRDbo/FqtCgISaGCjs61laQf66qtjZpWY4
dVT5uB4Fhs5Wxr/6KVcHdwyLV8d/lIBw0BWjCFxfj/vEiymJ5EL5Pc/j85R9
0MzGJiERRkQdxk8HZww64Xl6rMrZl+0QdGPKjzWPhPbvZzxv97IRhp1GeQ4e
HASF60WsXJVr6CenaTO7aw9kjokJHBXshjmZtANjSiQ0Z+TJ4rnnq5et0/py
vRf0O40v/akmonPmoq0b3R0w+/ZeX6dXPwiuv5n8eIyIRn9O1Dzd6IZL5lpv
FjiHoHWI7KworCHJkSKWNpk+CPN5zOm+bwg84q806OPz/cpBycj74n1A7ruR
bvkhAcLPkbT2fPURdGxEvSJv2Bax0fkdGQ6fVsO2BncwNDTMojxV5Q77srV1
9z9NADLN7gd7vvpp9t56uRdB8HDQb3BEPQO+bg093fPVd3w9IRaiGgf2czOL
I1J54CBwPJpnHkPBwQbo/k4K9K0v3iPGFwGvH40CTT+GZtRlMkf8cuARs4Xd
Cl0FjFT8DhooxVCffZL7P4ZCsFnpuxtTjOCcuMTnQJynLRx9YuaE8605guxn
L/E6qP0jrxNviqHvCrLx26bVkFYulXdHvxHievbxVON8+8TEr6OSPLUgSmCf
k5UogsdyHY6OA/jcxHp3bknnQO+dVJEf2S1w6rzrCad5Enom8CeCWbYB3sac
8+q81wHNARUfD7iT0J8ZQ6JjZjOoLKlZxeZ2A4uz8c4yIwmd+3P8GuvrdhhT
ThB4M9YLD/Y1zmvaExGNn9uoq2I3rIsFX6GEAahepG7cLV9DgyHC91hdeyFQ
jWoxbLEa3nvp9I/F4ufum0gJ3a8S2JWiCm5VrwJrsuKWTBF8/uo/YlVOawYh
0dW8L9khkFDy2WXPV8+gtxtuyfsJwLB7xulhHGhyfEve89XzXBf4+uRsIJAV
S/yydUgFxc3IxT1f/c4dpzmRoBiw+x1BUpjIAZWTJaF7vnrJV5cCTkcmg2+Q
m+s5qwIo1C/22/PVX0goDBNpygL5a7H7WJ+VQs1Q/t9TOH92QDbM/mv5MPx/
lN13PFb//z/wFNKQqIxKSESoEBnlaY9kVDYNpTSEzIhKtrJn9t5775e9t9Cw
s8d1NURmv9f1/f/9ud1+/7rV1Tmv8zrP5/15PDoXjeEZdd5kWKBVGSLl6utE
lTh2x0bB6uLJw8qnWsHD4mVGAZH0fqebDuMbDWBECDd6XFoJJcRrXdvpRJT9
jPNkBilX75FO1vKyFmLlX1Ln47kpX+gZ/cxAJXxrTq7JMm0AB22L2UvKRDR+
ryWcWaoWuPNL674xF4BDQkALKVdf8Ln0l8rbTGjQPxtdjOuBw9uGDLUDRNQS
eoWcERpgsHfqo6J5HzQ4NQd3+i8jcW10OQHX/1JjCaS+ux2iHZ4mzJcQ0GeW
4Zz3oc3QXavrbzvSBXQOxqv5ygQUXaj7wl69Hbi4S09p8ZXAzrFTQWdxHbMa
cgl4dCcfMgJKogzwfWxm2vTKvX4ZrS6Y/BXV6QZtdhOup0P9QJfecm2EbhlB
cqDevqVeiKY/saZ5rBIMHhYMnMomouO/R8+U5xbDyLDq3bKb5VAeV3em5M0s
KrmhpPL45TTsn14QlnluC2rHPrCQcvVkeswtpFx9Ddf9z70Pg8CFx8qelKuv
Y3j8VPWrK5Q+kL9A6RUFgoOZB0m5+pdXNygijgXAgz/WLZzySdDlWK9BytVb
s56O6lmKhO9ztvxrkQHQs0ThTMrVPxzOlY1ocYEW3Zm/32kywdNis5YV13nQ
vu3UbZsIbem7Pamq8sAt7E937DgRXWmaqKFVyQDHV3LnRxki4M9xhWxSrp73
Y9CjbXF/aHqp+3CEoRmy46X2r9ERUZ/twkPBvfi66BGecOoWA4V3R8ujDiJi
OrO/NWMrDw78Jt+1KpIINkTKPS7YLReCqfh+nYqErLKomwy3y3EdCPyrWoy9
rXuxnX+iCIgrgb+MGGrgRuiXD/zYLRbnxm6qvqsAQedWFkP6dHBW0z2kQcpR
ZEyL6sQlQPHasXNbPp3wdiOeyvYJAWUZbzpq5rSBmOaK4L/vdUBZuDrMYYjn
GgeeX8edauAyx0dF8Zd5wMD8tpuUq7f98e+ZOG0GZIhFj5sNNsL5pszLxWeJ
qFvp+JXYJ/VQZbm7T44Pz0kmZtJxA8so8wyVhRRFN4wf92/N5GgF6SdiSQeH
CehD/JNow5wmYAkJZZoa6oBRFls1adzXdByYH/VrtcE+owIOQZ0imBI+cpyU
qw+sbHv/0iUPrjy5FHjGpAcEucavOmwto03HUK4jql0ADSPpx3L64FeIfTSb
zjISEDXx2TLqhZafOv5Pv5SBdvnvX1m4rpp+UuDdxPV3YLV5aH/uS/jxWIGL
lKuvR1MfSbn6G2F8S17+AXB+Tf01KVdf4TR4N73GBZ4Nceh8k/KG4jt/g9HR
WbQYnDc9yzUDWpeDB8w2wmHgocBTUq7+7Tr31YqL/rB11pae4W0CGD2GMlKu
3iWNVeGQRwSc4NHofkRXDQyF906fxvV8fGMvm6Qlvq7S/1Lp2tPAwWRQLQlf
L0GeSCNf/PeLNHtH1bz84JxQWzEpV68ml6JPlHEBiupDszt6ufCI9vTluCki
as9+djWCOh0kX70ZlKiuBdvDSitF5ngePxhUST+AQPLOa2Gzv2Gw5fPvBilX
zyfppkJp4wcBJv1nljILYeIUs2QWnt9rjLY56AXyoChwVbTWCs8ZdKXjhGoi
Gjz0/FH7r0IQf71xTsGuEWKdUjZDcX/x1yc7JC5WDw7FoQ728fFA8TnAgpSr
/6A389F5KBxUKwz1HVaqQKbF4WsTPt8/siet/j4oB/dHDYr7KpuBbcWA68oq
AeVl7LUUXGsEfkvjsCieVEhNY+bVwf1UmPG0jkBrPOSoXkodi6mF8+rrg7IW
RLR7qlSRHPfFt72v9N+/aIBtLjkaUq6eUHR4KSq/DhQ75LbT8byYcDmHZ9EP
O4eW/nliayu42e3f9DydC7P7X/aTcvUPfpavvvmaBtvqPgbusc3Q//TjI96/
BKS+8DSceb4RuPbXLew7g738cjS1BTs/tPSXLDNlFzxy5Oi8dq4dCK2/jJ9F
EZCDgpAEm2MrPG04Kt++txtOdbzgyuImoEhJwZ3AR51AuNF3IfVLAfA5uvAl
4P4rcOtS8/H2XAi5Nl2fVdILujpp6hW+y0iCpVwiZ7kHLOccGlfqe4Gj7cgl
Ku9lpFEn1J3+uwfsGxdG6/aWwr5A4mRbDZ4X9h++rFxZCC3fzq4hpWBgzz9k
/md1Bm0Xee0ylZ+BlKOun2mEKqHlJiPPhSQi0s+an7F9VQZrJmWWxLd+MByU
w0/K1ZvIbMqwXHUBTvloCqHxMLAfKFcg5eqXhmJo7pr4gUGBnGL1vniI+Ctx
kPT+Q4qqYLVszXDo83/34kFuDaz/DPPXwv2LeWHMu7esGppEwtwHllPA5X0a
Uyi+jvsfafZdyoqHuw/TT+2YZQPxDEGRlKs3FeDY/ryZChzEV2Ku7A1w7H35
HTdpItKRiJdk8qyD2E1XfYJyAVTFJIsGDWGXasijUy65QOl9UefwRDGoXjEx
K2wkoq/tHb3LHIWgf0q5c9a0Cdy9tKJsqIlowXl+9ZtcIwRE/9xLebISouty
9xfgdSA3OPibz7QMxr9zZPNLtcG3E6tHX+USEIdxkasNWSscpZqXfUWbDemd
yT4ic7jPClH4mnanwqcjZAt/Q2rAy+yTdCiex9tNuI4lRVeDY/xKDIVPF5xX
U05WFyIg+fZp3xTOTtih3sUzrFQPpwPT6rXVcH0+vEuO4lgdJEp/NJnUbgK2
386zlDREpHgk//MH0UawLTU+6FPbCs8mF43TywlIqfzdpdKqFlC7H3PiNaEH
wlrfUfpXLKPRkhENZfcesPnqnVPlhF2cM5EkpYo9trH7uUdEB3z1q2OimeoB
xs2XbG1Vy4h14XPlmhPu+xoZvfanG6Dt3oT1vfhOZKdG5+FTSoBuqWbOsbhy
6BHIEriVRUQHu25VGsSXwvfAzQCbLV/QpRwJJeXqqfYWh6+dcYMXCuE3zZhD
4e7tITVSrl66KNdh4p0vVDVqK8/2xIKs+DVtUq7+p2s4g5ryR2hV+ipFCEdg
6mXxTMeT9H0c4owa9VXQvL+z2epeMqyysn9iwU5TcywR9l+NgzdUj3Ifu2fC
YqD0uDCeu2OTvndZU6fC9eCIJ/9I73df5GjjvoWv+x/RBx0/aqHF15bj6ul8
mOQdSHHFfpM8T0Fk+5wD9ULKhz55F8Hf/S8dOPD8IuRzb48ndp6atfUzSY1G
EFY+7fGKFe/bCxzk0WkN8JyvSvW1dzn8eiz0tQyvw5jhqqluaCkwfT2xTNxq
AZ5wQztSrv7yhRx27xstwD5DfklCOBOQH3csKVcvsXCg69BMCmR6bwgcMEfw
0ZeO/bYX7u/M3gxJGVUws+lgXMDUCRoaFDnftQnIjOuXhNP9DuD2U711UK0O
BHg/cWXcxnOEckyNpRf23qm46EHJRjA9sXSyjo2IjKZXt79FN4DMtueFVd8W
uNWksh7XR0AUhdApeqwF7lnnVRsL98DArxu74yaXkRzXh6plXL/k9R6Tiwh2
wPuydqZyEwKyDLvxgW+6HWYY3tZ68/WA+wP9BZupZdQQe05DmLUHhiIJO4ck
i+DeGTFdA+yTL5Mvy6aUCiBxc4/MLZELEMsupU7K1W/e2Pq/XP30ho373PUy
WEi2NFopICLLTWIH43QJlP9OcxpiCYXzHs0PSLn64fl/j5zi/cDsouGmZkww
HO94I0/K1V/ZYra/rOUDZ2xN43V8YkA7aJ88KVdfNeKncMAwDJ5qeJKP0VQD
j1vHeHQAKVcjzLzxvRK6rB+YeR1MAo7dYeSkXD1ngdEGjWYcBCSZNh+eSQfb
og+xpFy966ZvQpZ4Chiavije+yYaGgZ/V5Ny9YOnEevu+VBwcPLXNefIAybJ
686kXP2Sxl8Bv85s0M+9T/XMpBCYPaqPkXL1WrvA+vtAPgQ9nBFPfNAAY/nn
PTkv4v1/VflNOWsDJKu9c/4nVoadeWZLuZCIBtgq0d+vJQBvKJLlppsh7Fz0
SMkYnt+NWMb+FTTDQcHulxCbDuFbZwP98HEmFB8xTWZMgWIWfrtbi1VQ99DT
2ToQz3GDo5lXuytBX67I55dtLRCDqKK8n2A/7HfjGaWphb0j9AEdNxvAnTBH
IcaP67n+W0s6hgZwsq9OWIvHfWYiREcLe1Vh96OUh1LZcF6gKO2ARzPcm3wx
Uj5DQHQEq9ih183gccFk6o9gN0goi+79tZuAeKpo1goju8Fsb+4JuiPtwFBa
r6HoRkC+Wc7TTNLtMP5cf8TtTDfI2In0vyMnoMGsP5LsQd2Q0eaQd4i7EB5E
f7hNytXvvtdcPZCbDwwXKW26d2ThsflqyR7lWOTz57glKT//Xz8fshvlHGQv
hTfqzbZeZUTk+KU6L0C8BNb8E0xH1urgdWteoowwEdGcDpUcm2uAwKuWSX+e
BcL0qxwJUq6+Y2M0/Gq+N+yvb9Loro8CMt54QdJzy0XhrOpJv1BwLnok9O58
I/iKoRLdJ7PIRWHsURL3NHT/VBEMQJWwa2OSFcLx/XvWtZjpNO6jItaO3TMJ
4N/7lY2Uq6dVPXh/riEWXpQOSh47EAC3FhZ3k3L1j+NVHMLGfUBuYDIg7k0a
tAZQ8ZJy9ddePfQzdUoGqzCfuNGhSCgvuDVPytUT2z4oiHKEwrmff+fNSbn6
TC4mUq7eOtXg466JLKhMOchCZVEAq1b+l7T78Vwspb0+p5QPUx48E/b+9ZD7
mXfKGvtnwlX6ckRSPQgFbPeJUiXAhbaxnHN4jghZCH/+SyMWds2yLr84Wgo6
qv3q/Xg9NX8sWmUIlEDb/lv8XDJp4PWFyErK1T+k5shXvp8MKS7SF0diKmGf
GuOuFbwOOgyV9yNpKuHR6Btht6oakHLhaP1gSUSP4mNeV8TXwDuHl9M/39WD
k5UOy20JXA/lnH7SRdVD6pnBMvaCHPB43qFdM4mddtXqm/ODLGDQ/MW6lNAE
zJubl2PXCEj6onx4yHoTvHmclMbN3AVrjXJmp1gIKCL3I2PzFnZ+E12KJGMb
nD5/yGElAvdZ1iRd3dw2cOq+VCBN0wXD89rbb1kJyGtPe1H5ShcwlmWka10u
gJWwzRb+T/i+vu5XXsGVD3ZLj6J2H7eD4pq3vmr175CepnM4KT//Xz/vqTA4
asmG72O+XFkZ7OH2I7XzJQnFoFR5diObrxHy81W8NPH+cTd4fKUE75/zOldE
L+74wy1mA09Srn5PhsnZ/k8+8KOGok9FKBKWn8dpknL1Y1PyLwwHQ0Caxqqj
+64VcBuq3SLl6iNXitVIufr3rxjOq3+sgP4HD6+QcvXsiski7JYVIDoe94Nz
Nh72aDXsUsDX17InPmhOJhay+LgfEy0DgUsoRp2Uqz+CNmK3DP3hjc7ba7fk
U+FbwrCdOp4v+nIPtVz9mgQqV1gkTwXWwPCoUm6rNRH59vCuPfGsAc/2ZvfJ
hxHwLigsgpSrF5yNLJa3DgEKc2v26OM5wH19OibpOxH5MG2nCFNnwSNRqT0X
wvJBXL9E89Ug6fvQyf1mOvLg20D0Tti3Onhy0sQiT5GIMl6JD6mJYA+1OKep
nYmHcpUMbVKuPiVPKJAfxYD7fs7vR4+WwNKUf+tbvM5swx6v2yKKYa96b3Es
exPcEZei/ruLiNa+OQW8yWwCR36Pvn+HU0FoSWfPB3xef/Jj7nJUJ8HP49EM
VY4VIP3e6b1OHPZV4Pb52PsVIMLrsn+rvxXYiFfT2+Kw9yIHPBzd26D5zz4/
yuM1UJNrco7BgYiOqv6ZfCtZA58VhAf/dNVBr2gpq40SEakIBW1lXcRz7n39
S1S3smGO1qyrHc9fZKLP5Z5HZgJMUu++NdwIr61NxekpiehEt5y9i1MT/H77
jvs8VyewCsTfM75MQH23UPiLZ13wPurWd03xVuhU7uNPyCagO8RH5jK8bSBs
keIjeLIT/AMyaAJFCGhWTtNa1agLQswYhp8b5YPvlyd6wtjDCiPnZX5m/3eu
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
/9o6U4A9SaBir6hOb4b14IxAJ+xJ4q27ylewJ3nHLbduYE++0ZlOLp3rh5WE
ksUW7MnW7gFXFezJz6V99yu5a+CB3LjObexJtVEpdzbsyc335lT22JMppZyB
rNiT2+tKGjbYk/nqDUWd8q1gNM1jEYU9WShNdHBBTSCx+66UMfYkvc+Lgkns
SUr+bwt22JMy7TFPr2JPCoQJiCVjTx5gilrMw57c5aDz6Rj2ZOq3ZD2SJyUq
dX9PY09+zX8SnYc9aXDbIJLkSVMC3/NM7Mk+L+kUM+zJ0qWJOpInOy+El5zG
njz28dVt7qBkaDdZr1rG+6ononDXd+zJ3qQZr0jsyXSaC66kfhSrauVIeS4X
GF/m6UlgTz6fCfwjgD2ZaT0ioY09Gc+XRdmq4AyxOTq/q7AnSyLCm0ieXKhD
N95whsKdJ+Of+0jvWf104MvJJD9wKrCpdMGenFBecCR58gYn28V1Ix94uJun
rRx78gcu9m9wHXieGcx+F3vy5YLhvh/Yk36Nk0vCuG9yRBeoxGFP6l65F+GM
PRmxcnGXDfZk0rVWhR+iOXAJWZOVYE9qSn+1JHny7pbH/3nyiGDt809/60BU
XWZLHHtSIpXicDH2pNADva1W7MngZlcxkiflZXNKbmNPMhefOvmdvg60yNzs
u7EnmereXyh4Wgt70vIXd7AnCeSt50mebF/aaTqCPXk6AbnRf20HpTN7r1Zg
TwYY0i+35beD0JV/6QIKtZCmdfa2APakK6fPN/ffNSCn/k4ibKUJNj7WLxVj
Ty7SzcS0cDXDXtnLF780toH0SwfCXm8CUg+UoJM99t+eTA3YZb5I7gC5x3WK
SJ709opqIXnyV8+uHDvsyWZ2v0SSJ0+1kz3lxJ7MsyTePMASDv167qEkTx4P
+C1fhz0p99OhNxh7clsi/SPJk7uPcDxYno8GJpqa3GjsyclfFzd8sCcFI7V7
07AnK6NCCSexJzlL9i2SPAn8r//G/A9PXh0uzGplcIdzWW1nG7EnzSqFPXKx
J08qdOutDyRBbIjYAxq8Dw8meyR4GSTCgyfPDVywJ198sqcnebLQ5A+tJ/Zk
uE7f9CXsSYsmjmPMeD93RMUUrnFGw/5HKux12JOBOVY2JE8KRt6pmfgfnpSi
s7JO+x0HzHQPyYqwJ2dymlN6sSfJCmfuKWNPVlDvq2vGnsw8asMkJ9kBYoJK
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
zdIO+B95+BgT
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Lambda]\"", TraditionalForm], 
    FormBox[
    "\"1/\[CapitalDelta] (\\!\\(\\*SuperscriptBox[\\(K\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalJ]\\), \\(c\\)]\\) (K)\"", 
     TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->900,
  LabelStyle->{FontSize -> 20},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 1.}, {0.000046656298600308496`, 
   0.05351477449455676}, {-1.9999990463256836`, 0.20636749267578125`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.256888802354179, -0.9083259687889066, 0.1327375738953235},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.777740135524677*^9, 3.778289516470149*^9, 3.7786435545233545`*^9, 
   3.7787870193021746`*^9, 3.779293119655408*^9, 3.779293169346833*^9, 
   3.7792940626713457`*^9, {3.7798044145118575`*^9, 3.779804418708333*^9}, 
   3.779807036538355*^9, 3.7800955882138367`*^9, 3.780418467307369*^9, 
   3.7810582966846523`*^9, 3.781061628243744*^9, {3.781240732041932*^9, 
   3.7812407415171275`*^9}, {3.7812409615053225`*^9, 
   3.7812409872584343`*^9}, {3.781241021636503*^9, 3.7812410513718815`*^9}, 
   3.781241283480772*^9, {3.781241316546567*^9, 3.7812413257151394`*^9}, 
   3.781241489443801*^9, 3.781241746197129*^9, 3.781285445519124*^9, 
   3.7823345455487347`*^9, 3.782353235078872*^9, 3.78235377969208*^9, 
   3.7823538390146594`*^9, 3.7823566023670197`*^9, {3.7823571756447926`*^9, 
   3.782357194474841*^9}, 3.7869959960007343`*^9, 3.7870128043924437`*^9, 
   3.7870128427691326`*^9, 3.787013019376607*^9, 3.7870136794085855`*^9, 
   3.787013860492839*^9, 3.78701389735267*^9, {3.787014249525901*^9, 
   3.7870142910509596`*^9}, 3.787014828811844*^9, 3.7870149704119077`*^9, 
   3.787015030381408*^9, 3.7870151462375336`*^9, 3.787100571513015*^9, 
   3.7871016340812736`*^9, 3.787101800929311*^9, 3.7871021808890305`*^9, {
   3.787102442145915*^9, 3.7871024641788235`*^9}, 3.790045396160718*^9, 
   3.7900519072807784`*^9, 3.797114494104565*^9, 3.7971198211720695`*^9, {
   3.7971199798885527`*^9, 3.797119985854687*^9}, 3.79712002197904*^9, 
   3.7971201236237297`*^9, {3.7971202090707006`*^9, 3.797120224141252*^9}, 
   3.7971202546874*^9, 3.797817965529828*^9, 3.7978209274727025`*^9, 
   3.7979014759159555`*^9, 3.801267435048049*^9, 3.801306455248191*^9, 
   3.801327072999135*^9, 3.801623622886428*^9, {3.801882278604568*^9, 
   3.801882313583675*^9}, 3.802046954465295*^9, {3.8020480462208524`*^9, 
   3.8020480723042364`*^9}, 3.802048173349265*^9, 3.80204830996986*^9, 
   3.802999946893323*^9, 3.803001612243225*^9, 3.8030016877958145`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Determination", "Subsection",
 CellChangeTimes->{{3.801931342486289*^9, 3.801931354322246*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Determine", " ", "which", " ", "basis", " ", "state", " ", "the", " ", 
   "ground", " ", "states", " ", "form"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.801931347231104*^9, 3.801931392287868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Eigenstates", " ", "represented", " ", "in", " ", "the", " ", "basis", 
     " ", "of", " ", "the", " ", "two", " ", "lowest"}], "-", 
    RowBox[{"lying", " ", "doublets"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pStateEff", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mStateEff", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmmmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "mStateEff", ",", "mStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmmmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "mStateEff", ",", "mStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mpmmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "pStateEff", ",", "mStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmpmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "mStateEff", ",", "pStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmmpEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "mStateEff", ",", "mStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ppmmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "pStateEff", ",", "mStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmpmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "mStateEff", ",", "pStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmmpEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "mStateEff", ",", "mStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mppmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "pStateEff", ",", "pStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mpmpEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "pStateEff", ",", "mStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmppEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "mStateEff", ",", "pStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pppmEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "pStateEff", ",", "pStateEff", ",", "mStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ppmpEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "pStateEff", ",", "mStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pmppEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "mStateEff", ",", "pStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mpppEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "mStateEff", ",", "pStateEff", ",", "pStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ppppEff", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
       "pStateEff", ",", "pStateEff", ",", "pStateEff", ",", "pStateEff"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", "*", "\[Pi]", "*", 
        RowBox[{"\[ImaginaryI]", "/", "3"}]}], "]"}], "//", "N"}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Tetrahedron", " ", "basis", " ", "states", " ", "given", " ", "by", 
      " ", "\"\<Quantum spin configurations in \!\(\*SubscriptBox[\(Tb\), \(2\
\)]\)\!\(\*SubscriptBox[\(Ti\), \(2\)]\)\!\(\*SubscriptBox[\(O\), \
\(7\)]\)\>\"", " ", "by", " ", "Curnoe"}], ",", " ", 
     RowBox[{"doi", ":", 
      RowBox[{
       RowBox[{"10.1103", "/", "PhysRevB"}], ".75", ".212404"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "6"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
       "ppmmEff", "+", "pmpmEff", "+", "pmmpEff", "+", "mppmEff", "+", 
        "mpmpEff", "+", "mmppEff"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ep1Eff", "=", "ppppEff"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Em1Eff", "=", "mmmmEff"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ep2Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"pmmmEff", "+", "mpmmEff", "+", "mmpmEff", "+", "mmmpEff"}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Em2Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"pppmEff", "+", "ppmpEff", "+", "pmppEff", "+", "mpppEff"}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ep3Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "6"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"ppmmEff", "+", 
        RowBox[{"\[Epsilon]", "*", "pmpmEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmmpEff"}], "+", "mmppEff", 
        "+", 
        RowBox[{"\[Epsilon]", "*", "mpmpEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mppmEff"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Em3Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "6"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"ppmmEff", "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "\[Conjugate]"}], "*", "pmpmEff"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Epsilon]", "\[Conjugate]"}], "^", "2"}], "*", 
         "pmmpEff"}], "+", "mmppEff", "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "\[Conjugate]"}], "*", "mpmpEff"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Epsilon]", "\[Conjugate]"}], "^", "2"}], "*", 
         "mppmEff"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1x1Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Epsilon]", "^", "2"}]}], "*", "pppmEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "ppmpEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmppEff"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mpppEff"}], "+", 
        RowBox[{"\[Epsilon]", "*", "pmmmEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mpmmEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mmpmEff"}], "+", 
        RowBox[{"\[Epsilon]", "*", "mmmpEff"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1y1Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Epsilon]", "*", "pppmEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "ppmpEff"}], "+", 
        RowBox[{"\[Epsilon]", "*", "pmppEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mpppEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmmmEff"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mpmmEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmpmEff"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmmpEff"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1z1Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
       "pppmEff", "+", "ppmpEff", "-", "pmppEff", "-", "mpppEff", "+", 
        "pmmmEff", "+", "mpmmEff", "-", "mmpmEff", "-", "mmmpEff"}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1x2Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "2"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"pmmpEff", "-", "mppmEff"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1y2Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "2"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"pmpmEff", "-", "mpmpEff"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1z2Eff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"\[Sqrt]", "2"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"ppmmEff", "-", "mmppEff"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2xEff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Epsilon]", "^", "2"}]}], "*", "pppmEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "ppmpEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmppEff"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mpppEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "pmmmEff"}], "+", 
        RowBox[{"\[Epsilon]", "*", "mpmmEff"}], "+", 
        RowBox[{"\[Epsilon]", "*", "mmpmEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mmmpEff"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2yEff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Epsilon]", "*", "pppmEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "ppmpEff"}], "+", 
        RowBox[{"\[Epsilon]", "*", "pmppEff"}], "-", 
        RowBox[{"\[Epsilon]", "*", "mpppEff"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "pmmmEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mpmmEff"}], "-", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmpmEff"}], "+", 
        RowBox[{
         RowBox[{"\[Epsilon]", "^", "2"}], "*", "mmmpEff"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2zEff", "=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Sqrt]", "2"}]}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
       "pppmEff", "+", "ppmpEff", "-", "pmppEff", "-", "mpppEff", "-", 
        "pmmmEff", "-", "mpmmEff", "+", "mmpmEff", "+", "mmmpEff"}], 
       ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz1soQ3EABvCzk1Ayl8bDYrXxYjFhZQ8aQ3N5EXMppZjbSmulpFMzHj1I
pMQeTtqlRtuDLSuzU1MmJO2B5rpkDUVbXlySy/n+D1+/h6+++qR6U9coTVFU
MR8oLe3sseleNfuCEz18GDi023klCwlihPlzw5o+pweyuwkfpJcGA1DL/pzC
9lgoBhW+xyTUu4Y/YNFKts7BG+I4I7SEO+xQvmfwQd1RSRA6OvxhaOsdeoCS
QJi48L32BKNpy89kp9UsdPJSpuscSOeKCyDrbCGqpj/lcG13vQIuWkXV0DWt
VMK2BkYFNzKiROuMtp700R3iRl1tN+TiV8SbCQMD58fO5sl+SvG+yTvi2P6C
i5HgL6SPRYIt3p65/nR4Z6Ez4ao3JfPwNjeFKiHn9yhhsmhWDceqUlPwwJy/
DMfzGr3wVhwn3rvLX8551ZrXNyi7ZLIu8HeWFcJJ70shdBs1ZfAfLYf0FA==

  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", "/", "\[CapitalDelta]"}], " ", "points"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Inverse\[CapitalDelta]List", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.000046656298600308496", ",", "0.0009331259720062202", ",", 
       "0.0019595645412130644", ",", "0.0033125972006220836", ",", 
       "0.004992223950233283", ",", "0.0066718506998444775", ",", 
       "0.009984447900466563", ",", "0.01250388802488336", ",", "0.015", ",", 
       "0.01665629860031104", ",", "0.0175", ",", "0.020808709175738727", ",",
        "0.0225", ",", "0.025007776049766724", ",", "0.0275", ",", 
       "0.028506998444790047", ",", "0.03", ",", "0.0325", ",", 
       "0.03331259720062209", ",", "0.035", ",", "0.0375", ",", 
       "0.03998444790046657", ",", "0.0425", ",", "0.04544323483670297", ",", 
       "0.0475", ",", "0.05", ",", "0.05351477449455676"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]List", "=", 
     RowBox[{"1.", "/", "Inverse\[CapitalDelta]List"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Critical", " ", "\[ScriptCapitalJ]", " ", "points", " ", "signifying", 
      " ", "the", " ", "change", " ", "in", " ", "ground"}], "-", 
     RowBox[{"state", " ", "degeneracy", " ", 
      RowBox[{"(", 
       RowBox[{"change", " ", "of", " ", "phase"}], ")"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]List", "=", 
     RowBox[{"{", "0.0", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]List", "=", 
     RowBox[{"{", "100", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalJ]List", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", "0.01"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fidelityListEff", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "\[ScriptCapitalJ]List", "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[Lambda]List", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "\[CapitalDelta]List", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", "=", 
          RowBox[{
          "\[CapitalDelta]List", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"crystalFieldH", "=", 
          RowBox[{"HcfFull", "[", "\[CapitalDelta]", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "\[ScriptCapitalJ]List", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"\[ScriptCapitalJ]", "=", 
              RowBox[{
              "\[ScriptCapitalJ]List", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"H", "=", 
              RowBox[{"projectedHamiltonian", "[", 
               RowBox[{
               "\[CapitalDelta]", ",", "\[ScriptCapitalJ]", ",", 
                "\[ScriptCapitalD]", ",", 
                RowBox[{"\[Lambda]", "*", "\[ScriptCapitalQ]"}], ",", 
                "states"}], "]"}]}], ";"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"energies", ",", "energyKets"}], "}"}], "=", 
             RowBox[{"Transpose", "[", 
              RowBox[{"Sort", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"Eigensystem", "[", "H", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{
                   "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "<", 
                  RowBox[{"Re", "[", 
                   RowBox[{
                   "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "&"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"energyKets", "=", 
             RowBox[{"Chop", "[", 
              RowBox[{"energyKets", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "6"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "A1Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Ep3Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Em3Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"4", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "T1x2Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"5", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "T1y2Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"6", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "T1z2Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"7", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Ep1Eff"}], "]"}], "//", 
              "Chop"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
              RowBox[{"8", ",", "i", ",", "j", ",", "k"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{
                "energyKets", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ".", "Em1Eff"}], "]"}], "//", 
              "Chop"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8019447465356603`*^9, 3.801944854312714*^9}, {
   3.8019474221989603`*^9, 3.801947423173354*^9}, {3.8019474959836197`*^9, 
   3.8019475011668944`*^9}, {3.8019475511789083`*^9, 3.801947603017579*^9}, {
   3.8019477519255705`*^9, 3.801947894027135*^9}, {3.8019480232093725`*^9, 
   3.8019480911143045`*^9}, {3.8019488244242077`*^9, 3.801949037929413*^9}, {
   3.801949466492858*^9, 3.801949595272847*^9}, {3.8019496651182036`*^9, 
   3.8019497416972218`*^9}, {3.8019499710418253`*^9, 
   3.8019499741789694`*^9}, {3.8019500127807064`*^9, 3.801950020531841*^9}, {
   3.8019503238838806`*^9, 3.80195033482605*^9}, {3.801950376814454*^9, 
   3.801950378238967*^9}, {3.801950551764553*^9, 3.8019505728039055`*^9}, {
   3.8019506086438665`*^9, 3.8019506256396065`*^9}, {3.8019506597890973`*^9, 
   3.801950662719681*^9}, {3.801950714202832*^9, 3.801950717682575*^9}, {
   3.8019508817261505`*^9, 3.80195088680905*^9}, {3.801951179263166*^9, 
   3.801951257284769*^9}, {3.8019682009052935`*^9, 3.801968243442241*^9}, {
   3.801968646926055*^9, 3.8019686731726923`*^9}, {3.8019687086328373`*^9, 
   3.8019687126447673`*^9}, {3.801968899484115*^9, 3.801968900363948*^9}, {
   3.8019689409772778`*^9, 3.8019689417489595`*^9}, {3.8019690522844777`*^9, 
   3.801969079665043*^9}, {3.801969112424893*^9, 3.801969134709461*^9}, {
   3.8019695508739443`*^9, 3.8019695573632746`*^9}, 3.8019702100365076`*^9, {
   3.801970242626371*^9, 3.8019703017210407`*^9}, {3.8019703416552286`*^9, 
   3.801970422027598*^9}, {3.8019706326163473`*^9, 3.801970650053569*^9}, 
   3.801970979083866*^9, {3.801971244370846*^9, 3.8019713111238184`*^9}, {
   3.8019718226606746`*^9, 3.801971834425634*^9}, {3.8019734553061695`*^9, 
   3.801973483625146*^9}, {3.802048880000612*^9, 3.802048919438905*^9}, {
   3.8020504249673147`*^9, 3.8020504489595165`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fidelity Plots", "Subsection",
 CellChangeTimes->{{3.8019709848402123`*^9, 3.801970986924445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Phase", " ", "boundary", " ", "plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"minX", "=", 
     RowBox[{"Min", "[", "\[ScriptCapitalJ]List", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxX", "=", 
     RowBox[{"Max", "[", "\[ScriptCapitalJ]List", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minY", "=", 
     RowBox[{
      RowBox[{"Min", "[", "fidelityListEff", "]"}], "-", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxY", "=", 
     RowBox[{
      RowBox[{"Max", "[", "fidelityListEff", "]"}], "+", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataEff", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotEff", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(+\)], \((3)\)]\)\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(-\)], \
\((3)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(1  x\)], \
\((2)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(1  y\)], \
\((2)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(1  z\)], \
\((2)\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(+\)], \((1)\)]\)\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(E\), \(-\)], \
\((1)\)]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"n", "=", "1"}], ",", 
     RowBox[{"n", "\[LessEqual]", "8"}], ",", 
     RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
       "dataEff", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"\[ScriptCapitalJ]List", ",", 
          RowBox[{"fidelityListEff", "\[LeftDoubleBracket]", 
           RowBox[{"n", ",", "1", ",", "1", ",", "All"}], 
           "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "plotEff", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
         "dataEff", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"minX", ",", "maxX"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"ColorData", "[", 
           RowBox[{"3", ",", "n"}], "]"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<|\[LeftAngleBracket]\!\(\*SubscriptBox[\(\[Psi]\), \
\(0\)]\)|\>\"", "<>", 
            RowBox[{
            "legend", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
            "<>", "\"\<\[RightAngleBracket]\!\(\*SuperscriptBox[\(|\), \(2\)]\
\)\>\""}], "}"}]}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"plotEff", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<\[Lambda] = 0, 1/\[CapitalDelta] = 0.01\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[ScriptCapitalJ] (K)\>\"", ",", 
        "\"\<|\[LeftAngleBracket]\!\(\*SubscriptBox[\(\[Psi]\), \(0\)]\)|\
\[Square]\[RightAngleBracket]\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8019705667948275`*^9, 3.8019705970849285`*^9}, {
  3.8019709206755047`*^9, 3.8019709285770454`*^9}, {3.8019709752260866`*^9, 
  3.8019711810292015`*^9}, {3.801971426964219*^9, 3.8019714813499346`*^9}, {
  3.8019715442996235`*^9, 3.801971555773082*^9}, {3.801971619124426*^9, 
  3.8019717829353604`*^9}, {3.801971874746458*^9, 3.8019718984444265`*^9}, {
  3.801971944861559*^9, 3.8019719483188705`*^9}, {3.801971981201395*^9, 
  3.801971987034896*^9}, {3.8019720379115543`*^9, 3.801972038366596*^9}, {
  3.801972112413104*^9, 3.801972130245485*^9}, {3.801972260017295*^9, 
  3.8019722688558607`*^9}, {3.801972302960285*^9, 3.80197232044959*^9}, {
  3.8019723905906754`*^9, 3.801972439746997*^9}, {3.8019734899796762`*^9, 
  3.8019735354025497`*^9}, {3.80201937056802*^9, 3.8020194246109695`*^9}, {
  3.8020503613092318`*^9, 3.802050409937394*^9}, {3.8020505164289117`*^9, 
  3.802050516729928*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0., 0., 0.]], 
         LineBox[CompressedData["
1:eJxdmEtoXGUUx2/bjRRBFxVcSFXctK7qAxE0M9nVhQVbXUYooiJCsS4EqS6y
aEt3teBCi5RAWh8oJYKghdJJa31U0pI+E2tbJ89OMnnM687ceZs5/y//g/+7
mf57vnvuOed3vnPvlyff+mDPOxujKDq2IYp6v+EaxU8hPTG8v2/zRDezrk/v
nDqw5bTrQ/ndv2w95Hrg6IV424Dr5+zqZjYEvdkcuu552znVoV5ztuaxk9kY
tLk76vZ37erQf585dL3FAnS91Asv36Y2dxdcH/+yd7n+0By6fsUCdP24JdzO
dO1aTVd77uIW47081rtaXH+yV77hFtd/YgG2mM8eS7iV6QT7diug349f9w8e
Td4PHk3h0RQeTeHRpD/wcA0eDeHhGjwa9AcerlPmsEF/4NEQHnX6A4+68HC7
lW9/XXi4HTxcg0fC9eCRCI+E9QaPRHgkjB88EuHh68GjRr7gURMeNeHh68Gj
JvujJvujyvvBo0r7Z1bAqvBwO3i4Bg/X4BELj1h4xMIjFh6uLbytseyPCu2G
Y6zC+oJHRfaHrwePCp8PHhXhUSFP8CjLvCrTP3iUhUdZeJSFh9vBoyQ8XINH
SeZVSXiU6A88SqwHeBSpwaPI+8GjKDxcg4dr8CjK/ijw+eBRoB08CswHPArC
oyA8CsKjIPVfZT6o9yrtqO9qph3iQT1XGB/qtyLz3TXqsyz1WJZ+dDvyXaLd
cB5wbeXZtsT1t6yf8rQftP5x/az1S57rp83hovTDovB3O3gvCN8F4bnA+oFf
TuZZTuZXTnjkeD943Jf+v896g8d9mf/z0s/z5AUe88JjTnjMCY854TErPGYZ
D3jMCo8Z4TFDO3jMCI9p4eEaPKZlHk7J/JsSHm4Hj6zwyMp+yQqPrNT/X6n3
PZnX97ge9bwr+/cO16Ned6Q+/9CetfBv0/6y5X+b9i8s37+pK+Zwkvo1C3CS
z//B+mmC9gcwgOn/beuXW5zPo9YfN7n+CeuHm+zPTy3hG/Q/ae6uZzYF+/PG
9zrt4HlN9tNV4XVV3jfjjAf3jcs8vyL9e1nqO8b1qOdf1KjfJWrU60+pzx/U
qMdvzOdjy/8i799h+f7K9TnL7zzjH7IAR7l+xOI/5/W1eM96/1t8Z1iPyOL5
mc8ftOf/xPUFe96PtI+a/9O0D5m/76hx/0lqrD/BeGD/XNYflP0RRevro0fM
npb707teOt/3+0NvpiL7ADzB+8Lz05ui/m/SZ4+nBhHf+ntpPf70ev5Z5Ed7
yJ/PC/WhRr5nuD7UN/3/+pyjPfChRj3P01/gK8+/6PGiP5jfw+gf6tBfa3q4
e+2xj1KI7xLtoT/T0eD7A8/sPpbagf6lPfQ3NeK/Qo1rnPpb7B/qsL+okZ/r
sD+pX8T+pQ77mxr9f4M6zAePD/OD+j3MF+owf6hHMJ+kXpPUCeYbdZh/1P2Y
j1JP10cwX6nD/KUex3yWet+lfhTznTrMf+q9eD8Ijyz1G3i/UIf3j+SXFV5T
1F/h/UYd3n/UeD9MC89pqYdrzOcZ6vB+Ft4zUq9Zasx/1+H7QPphTurp+iK+
P6jD94n0y7zU2/WD+P6hDt9H0k9reujVkRe2n0jhf3PCIyc81nT/vkNff38q
BR454bEgPBaEx4LwWBQea3pw35HXz55Kgcei8MgLj7zwyAuPJeGxJDyWhMey
8FgWHsvCY0V4rAiPFeGxKjxWhYdrXP4eeRrnE+pwfpH8CsLL9RWcj9LR3l1j
Tx09mQrnJ8m/KDyLUg/X4fxGHc53wrso9SpRh/MjdThfSj+UpJ6u8T3sOpxv
pV/KUm/Xh3F+pg7na+mnsvCoCI+K8KgIj4rwqAgP1+HvC8IjFh6x8IiFRyw8
YuERC4+q8KgKj6rwqAqPqvCoCo+a8KgJj5rwqAmPmvCoCY9EeCTCIxEeifBI
hEciPBLhURcedeFRFx514VEXHnXh0RAeDeHREB4N4dEQHg3h0RQeTeHRFB5N
4dEUHk3h0RIeLeHREh4t4dESHi3h0RIebeHRFh5t4dEWHm3h0RYeHeHRER4d
4dERHh3h0REeXeHRFR5d4dEVHl3h0RUeUf/6P/4DLoJ2kQ==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
         LineBox[CompressedData["
1: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
H/fRRfBbsvRsc534f4aGQpA=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.996078431372549, 0.9882352941176471, 0.03529411764705882]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
         LineBox[CompressedData["
1:eJxd1zuMVGUUwPHRyhALC0ysUDuwImphIUqHpRJKCmPU2ImdQQsLMHZoYqHG
EBO2wMRsMCFREgMLrlHMslkE2VUB57GPec+9M/d95yFzvm/PMf/bwD+7e+d+
5/fNnblPv/Hu0bcerlQqnz1Uqcz/9cfS7n/Wz504tGd9dmW3F4/UTu5dtD7d
ee3Hfaetj5+5Fu8/bv2cHNZ75ITW87MdqU21H5zswRmt5XRnrN+Ww/qQnNB6
r1ygdXd+eZ2JtpzumvVXX84P6/fkhNavyAVaPykLtk7mp4vH2jdW5of1wnx8
56w/kAu0PioLtj4gA7R2h7XzKOFRwqOERwmPEh4lPAp4FPAo4GH9kpywgEcB
jxweOTysZXwncnjk8MjhkcEjg0cGjwweGTwyeGTwSOGRwiOFRwqPFB4pPBJ4
WH8qA0zgkcAjgUcCjxgeMTxieMTwsJbL2xfDI9IWjpUIHhE8InhE8IjgEcFj
BI8RPEbwGMFjBI8RPIbwGMJjCI8hPIbwGMIjhEcIjxAeITxCeITwCOARwCOA
RwCPAB4BPALMf4B5DzDfAebZx/z6mFcf8+lhHj2sv4f1drWF86S1jGe/9R3Z
Tx3tU7J/rJ+V/WJdlxO2sR/a8G/DuwXfFjxb8GvCqwmfJjya8NiBxw48duCx
DY9teGzDYwseW/DYgscmPDbhsQmPBjwa8GjAow6POjzq8KjBowaPGjyq8KjC
owqPKub/L+Z9H/O9j3new/zuYl53MZ9/tKty+X9rvyjrt/5C1vuXdiQn3NB+
VS7Q+jvZT+vaj7gbsPabsl/uaC/J/vhT+ynZD9YfyoJva2/I6W5pPy++t+D5
B/xuwusmfNbgsYb5r2LeNzDfFczzd8zvOub1G+bzK+bxi/b7sv5l7YOy3p+1
m7K+q9rfyAUuaV+Q679s85Xr/cnmJdd3ydYv1/OD9kfy+he1A3m97+165fyL
9vpyvm/x9wv4/bP4+efoU/D43/G4/Pxl/L22+wJ4Fj9fsHbXp+2vX7vq1oe/
v2jnd/PRduu9pO3ni/Nftt93Ptpunle1vS9ef9nO5/aH9mNu/2j7/YXru27r
c/vTXs/tX22/v3H9q7Z+Oda0z7v3j7Z/f2F91v79qf2Ce/9q+/e3ttv/t22+
7v6AeVi/4+4v2v7+o33B3Z8wrw3tzN3ftP39T/uwuz9intafuPurtr//aq+5
+zPmfU/7CXd/1/b3f+3X3ecDPKrax9zni7b//MH6qvCqaX/tPt+0/eeftvt8
qMOzjnlYu/tzQ9t/PsO7gXltarv7v7X/foD9sIV5Wi+77x/a/vsJ9ss25m39
qPv+o+2/H2E/7cCjCY8mPJrwaMKjBY8WPFrwaMOjDY82PDrw6MCjA48uPLrw
6MKjB48ePHrw6MOjD48+PAbwGMBjAI9A+xn3fKLtn1+wvgBe1qvu+UjbPz9h
/SE8Q8zD2j+/afvnO3iHmNdQ2z8/avvnS+yHIeZp7b4PW/vnW+yXEeZt/bF7
ftb2z9fYTyN4RPCI4BHBI4JHBI8IHhE8YnjE8IjhEcMjhkcMjwQeCTwSeCTw
SOCRwCOFRwqPFB4pPFJ4pPDI4JHBI4NHBo8MHhk8Mnjk8MjhkcMjh0cOjxwe
BTwKeBTwKOBRwKOARwmPEh4lPEp4lPAo4TGGxxgeY3iM4TGGxxgeY3hM4DGB
xwQeE3hM4DGBxxQeU3hM4TGFxxQeU3jM4DGDxwweM3jM4DGDR+Xw7n/+AxTw
rVo=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
         LineBox[CompressedData["
1:eJxd1zuMVGUUwPHRyhALC0ysUDuwImphIUqHpRJKCmPU2ImdQQsLMHZoYqHG
EBO2wMRsMCFREgMLrlHMslkE2VUB57GPec+9M/d95yFzvm/PMf/bwD+7e+d+
5/fNnblPv/Hu0bcerlQqnz1Uqcz/9cfS7n/Wz504tGd9dmW3F4/UTu5dtD7d
ee3Hfaetj5+5Fu8/bv2cHNZ75ITW87MdqU21H5zswRmt5XRnrN+Ww/qQnNB6
r1ygdXd+eZ2JtpzumvVXX84P6/fkhNavyAVaPykLtk7mp4vH2jdW5of1wnx8
56w/kAu0PioLtj4gA7R2h7XzKOFRwqOERwmPEh4lPAp4FPAo4GH9kpywgEcB
jxweOTysZXwncnjk8MjhkcEjg0cGjwweGTwyeGTwSOGRwiOFRwqPFB4pPBJ4
WH8qA0zgkcAjgUcCjxgeMTxieMTwsJbL2xfDI9IWjpUIHhE8InhE8IjgEcFj
BI8RPEbwGMFjBI8RPIbwGMJjCI8hPIbwGMIjhEcIjxAeITxCeITwCOARwCOA
RwCPAB4BPALMf4B5DzDfAebZx/z6mFcf8+lhHj2sv4f1drWF86S1jGe/9R3Z
Tx3tU7J/rJ+V/WJdlxO2sR/a8G/DuwXfFjxb8GvCqwmfJjya8NiBxw48duCx
DY9teGzDYwseW/DYgscmPDbhsQmPBjwa8GjAow6POjzq8KjBowaPGjyq8KjC
owqPKub/L+Z9H/O9j3new/zuYl53MZ9/tKty+X9rvyjrt/5C1vuXdiQn3NB+
VS7Q+jvZT+vaj7gbsPabsl/uaC/J/vhT+ynZD9YfyoJva2/I6W5pPy++t+D5
B/xuwusmfNbgsYb5r2LeNzDfFczzd8zvOub1G+bzK+bxi/b7sv5l7YOy3p+1
m7K+q9rfyAUuaV+Q679s85Xr/cnmJdd3ydYv1/OD9kfy+he1A3m97+165fyL
9vpyvm/x9wv4/bP4+efoU/D43/G4/Pxl/L22+wJ4Fj9fsHbXp+2vX7vq1oe/
v2jnd/PRduu9pO3ni/Nftt93Ptpunle1vS9ef9nO5/aH9mNu/2j7/YXru27r
c/vTXs/tX22/v3H9q7Z+Oda0z7v3j7Z/f2F91v79qf2Ce/9q+/e3ttv/t22+
7v6AeVi/4+4v2v7+o33B3Z8wrw3tzN3ftP39T/uwuz9intafuPurtr//aq+5
+zPmfU/7CXd/1/b3f+3X3ecDPKrax9zni7b//MH6qvCqaX/tPt+0/eeftvt8
qMOzjnlYu/tzQ9t/PsO7gXltarv7v7X/foD9sIV5Wi+77x/a/vsJ9ss25m39
qPv+o+2/H2E/7cCjCY8mPJrwaMKjBY8WPFrwaMOjDY82PDrw6MCjA48uPLrw
6MKjB48ePHrw6MOjD48+PAbwGMBjAI9A+xn3fKLtn1+wvgBe1qvu+UjbPz9h
/SE8Q8zD2j+/afvnO3iHmNdQ2z8/avvnS+yHIeZp7b4PW/vnW+yXEeZt/bF7
ftb2z9fYTyN4RPCI4BHBI4JHBI8IHhE8YnjE8IjhEcMjhkcMjwQeCTwSeCTw
SOCRwCOFRwqPFB4pPFJ4pPDI4JHBI4NHBo8MHhk8Mnjk8MjhkcMjh0cOjxwe
BTwKeBTwKOBRwKOARwmPEh4lPEp4lPAo4TGGxxgeY3iM4TGGxxgeY3hM4DGB
xwQeE3hM4DGBxxQeU3hM4TGFxxQeU3jM4DGDxwweM3jM4DGDR+Xw7n/+AxTw
rVo=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
         LineBox[CompressedData["
1:eJxd1zuMVGUUwPHRyhALC0ysUDuwImphIUqHpRJKCmPU2ImdQQsLMHZoYqHG
EBO2wMRsMCFREgMLrlHMslkE2VUB57GPec+9M/d95yFzvm/PMf/bwD+7e+d+
5/fNnblPv/Hu0bcerlQqnz1Uqcz/9cfS7n/Wz504tGd9dmW3F4/UTu5dtD7d
ee3Hfaetj5+5Fu8/bv2cHNZ75ITW87MdqU21H5zswRmt5XRnrN+Ww/qQnNB6
r1ygdXd+eZ2JtpzumvVXX84P6/fkhNavyAVaPykLtk7mp4vH2jdW5of1wnx8
56w/kAu0PioLtj4gA7R2h7XzKOFRwqOERwmPEh4lPAp4FPAo4GH9kpywgEcB
jxweOTysZXwncnjk8MjhkcEjg0cGjwweGTwyeGTwSOGRwiOFRwqPFB4pPBJ4
WH8qA0zgkcAjgUcCjxgeMTxieMTwsJbL2xfDI9IWjpUIHhE8InhE8IjgEcFj
BI8RPEbwGMFjBI8RPIbwGMJjCI8hPIbwGMIjhEcIjxAeITxCeITwCOARwCOA
RwCPAB4BPALMf4B5DzDfAebZx/z6mFcf8+lhHj2sv4f1drWF86S1jGe/9R3Z
Tx3tU7J/rJ+V/WJdlxO2sR/a8G/DuwXfFjxb8GvCqwmfJjya8NiBxw48duCx
DY9teGzDYwseW/DYgscmPDbhsQmPBjwa8GjAow6POjzq8KjBowaPGjyq8KjC
owqPKub/L+Z9H/O9j3new/zuYl53MZ9/tKty+X9rvyjrt/5C1vuXdiQn3NB+
VS7Q+jvZT+vaj7gbsPabsl/uaC/J/vhT+ynZD9YfyoJva2/I6W5pPy++t+D5
B/xuwusmfNbgsYb5r2LeNzDfFczzd8zvOub1G+bzK+bxi/b7sv5l7YOy3p+1
m7K+q9rfyAUuaV+Q679s85Xr/cnmJdd3ydYv1/OD9kfy+he1A3m97+165fyL
9vpyvm/x9wv4/bP4+efoU/D43/G4/Pxl/L22+wJ4Fj9fsHbXp+2vX7vq1oe/
v2jnd/PRduu9pO3ni/Nftt93Ptpunle1vS9ef9nO5/aH9mNu/2j7/YXru27r
c/vTXs/tX22/v3H9q7Z+Oda0z7v3j7Z/f2F91v79qf2Ce/9q+/e3ttv/t22+
7v6AeVi/4+4v2v7+o33B3Z8wrw3tzN3ftP39T/uwuz9intafuPurtr//aq+5
+zPmfU/7CXd/1/b3f+3X3ecDPKrax9zni7b//MH6qvCqaX/tPt+0/eeftvt8
qMOzjnlYu/tzQ9t/PsO7gXltarv7v7X/foD9sIV5Wi+77x/a/vsJ9ss25m39
qPv+o+2/H2E/7cCjCY8mPJrwaMKjBY8WPFrwaMOjDY82PDrw6MCjA48uPLrw
6MKjB48ePHrw6MOjD48+PAbwGMBjAI9A+xn3fKLtn1+wvgBe1qvu+UjbPz9h
/SE8Q8zD2j+/afvnO3iHmNdQ2z8/avvnS+yHIeZp7b4PW/vnW+yXEeZt/bF7
ftb2z9fYTyN4RPCI4BHBI4JHBI8IHhE8YnjE8IjhEcMjhkcMjwQeCTwSeCTw
SOCRwCOFRwqPFB4pPFJ4pPDI4JHBI4NHBo8MHhk8Mnjk8MjhkcMjh0cOjxwe
BTwKeBTwKOBRwKOARwmPEh4lPEp4lPAo4TGGxxgeY3iM4TGGxxgeY3hM4DGB
xwQeE3hM4DGBxxQeU3hM4TGFxxQeU3jM4DGDxwweM3jM4DGDR+Xw7n/+AxTw
rVo=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.15294117647058825`, 0.11372549019607843`, 0.49019607843137253`]], 
         LineBox[CompressedData["
1:eJxdmHtwFdUdx1MK6lC0QQQdtQSqHQgjJVAVkccPZBCrw8NURyVpYXxVcTAJ
Km0DnYIQccYIdtrRmtFoB8pDI0MlVSIGEySATsSg5iEPuUluwk1ukvvau3fv
7n14cp6d7/4Dn5y9Z8/5fX7nt+fs5EdLCp8YkZOT8/ef5OQM/yuvBvWf9l2l
80e3Zz9TfGBpZ/k1BwxXBO8/PLHCcPHOY/GpxYZ/wy/Do3mHhod7W9qZ0cw6
Yz0a5t3tNPwkvwzP5x0avoYP0PDA8PCCac28u2OGq94cvgyX8Q4N38MHaDiP
T9iwPdxdPKX5q+bhy/Du4fDtMryRD9BwIZ+w4XweQMPiMix8eODDAx8e+PDA
hwc+PPDhgg8XfLjgw/AC3qELPlzwkQQfSfBhmIevNAk+kuAjCT4c8OGADwd8
OODDAR8O+HDARwJ8JMBHAnwkwEcCfCTAhw0+DL/GA2iDDxt82ODDBh9x8BEH
H3HwEQcfhvnwJsbBh6WZ62i2wIcFPizwYYEPC3xY4CMGPmLgIwY+YuAjBj5i
4CMKPqLgIwo+ouAjCj6i4CMCPiLgIwI+IuAjAj4i4CMMPsLgIww+wuAjDD7C
4CMM8Q9BvEMQ3xDEcwjiNwTxGoL4DEI8BmH+gzDfAc1cZ7lhHp6phtt4PgU1
b+P5Y3gWzxfDXbzDfsiHfvDfD777wG8f+OwDfwHwFQA/AfARAB+XwMcl8HEJ
fPSCj17w0Qs+esBHD/joAR9+8OEHH37w0Q0+usFHN/joAh9d4KMLfHSCj07w
0Qk+fODDBz584MMH8b8I8f4B4vsDxPMCxO88xOs8xOecZh8f/lnN8/j8Df+L
z/d7zRbvsEPzSj5AwzU8n9o1XyEKsObHeb60aW7g+dGqeRLPB8Ob+IS/09zB
u/tW863c77fg8xvwdwZ8nQE/LeCjBeJ/GuL9FcS3GeL5JcTvC4jXKYjPSYhH
k+Y/8/kf11zA5/u55gCfX6Pmd/kAGzQf5OM/auLLx/upiRcfX52ZPx/Px5o3
8+fXag7z5/3XjJf3f8A8n/e3H36/G+6vhvZ/Am8DH/93jeftBL+nVTdVrn9+
3QoSG8BqGuW8n3dkzUMkn085j405s/hn+bRZjE//Xo5fs0/MD/qv1Szjo1nM
t06zjC/0f9TcL/xoFvFs1Cz9wvOPm/5EftDbvTXlsy+GKFfkD/266tnEq4kQ
yfyiQyd3NpzwQiTG94WZn8hPaq+MbcikQ1Qg8le3y/yG8Z828+dXi+Z9Yv1o
lusL5mdYrk/Nd4j1q1mubzrfULtgZjZEIv+/M/EV9QHiYfgpUV80y/qj+aCo
T5pl/dLsiPqmWdY/zQtFfYR4Gn5Z1FfNsv5SaNYjL05l82kR9RnifUHzdaK+
a5b1X/Ma8X4AHz4KHv1LMpf1/4B4v+h2+f6B+fnAVyf572t7Pp0J0Vvi/abb
5ftPs3g/dIHPLoiHYVGfu+m93R/NPsf6l+9n8N0N8fJrFvXfsNwfQD70QDwN
Hxf7D81yfwL50gvxNjxG7H80y/0R5NMlilx1tvYFNj/x1wB1ljXfty6jfASo
6rW8Tx5nLPdn1FJZli1iLHwE6Owfqm/4HWO5v6PP59x81b3aRx/46AMf/fTg
pyWB6ex+ub+ka/2+gpsZCx/9tG7/4WXXMxY+gpR9Y8eCXO0jSPuWXBhxGWPh
I0j5D86v8lh9kPtfqq5eNDLCWPgYoCeDKxb2Mpb7Z+rffsXyc4yFj0HwMQg+
Bsnu/OWqOna/3L/T4q//se8DxsLHEN01bkvTvxnL/T/4CIGPEI1fN2loE7tf
+AjR5OmVVJpW94VpzXu3FT/GeJo4n+jfy/ML5FuY6vN7Suamla8wJQ+NOzSd
8WlxPqIpMw7X5zGW5ycqK7y4c6yef4Ryi09N+Wla+YxAPCIUDd6/pycVInl+
o7yaqZVtjOX5jmoPzrz1JGN5/qPGF9a//XFKxStKb1VsObWXsTw/0qNLzn74
BmN5vqTftg4UbU+pfIhCfkfpzpVezxOsXeyHozS3YunJBxjL8y2s3xjEO0a3
Lbr7WB67/yVxfqbCTbteupKxPF/T9LUDOZ6n8ilGG9eOKgh4yodFhf71V7d6
yodFe9a/s7eRsTzfk//wyMEPPJVvFq2+ckv3m57yYenxCB8W3fD6ux2lnvJh
0YnV+a1FnvIRh3oXBx9xan96f8P1nvIRp2krpxWN9JSPOPVuvbZq0FU+4rQ8
8fTGNlf5sHV/8vsKtW5/5Ma9rvJh05f11e07XOXDpnGj62ZscFV+2zSmZcEv
fu8qHza1FZTvWewqHwl6bs0tx/JdtX4T1Dzp/ZKfM5bfj/TzhY8EXda0ZOP3
SeUjQf9bXdJen1Q+zP3icmjOKwO/qkgqHw6VP3zvhKeSyocD68Ow/H4GPhxK
3jihY8hRPhzacNc3d37tKB9J8JGkmhVu0Q7WLr/v6Xb5/U+z/D4I9TBJ/kDZ
R6Mc5cMFHy5dfXv+kfqE8mHahQ+XomNT+c8llA/TLnwYlt9HqbT93MyMrXx4
sD48Ck3MvFNjq/Vh2uX3WfIvmjPiYVv58GhZ7d+23WKr9ZHS9wsfKahXKeq+
/dmx/4mr9ZECHykav3X22rvjql6Zdvl9muYuy8v1W8pHGnyk6U/hma1/tZSP
NPhI08Gul7eOs9T6SIOPNF3XRN27Y8pHhpr+2Nb1TEzVq4y+X36/J+vElFV2
VK2PDA1N6GisiyofGfCRoRm1247Mi6r1kYV6laV5n12+/JOIWh9ZWB9ZGtjs
FM6KqPVh2oWPLKyPnIXJ4qX9q8Ih+hEZUWVF
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
         LineBox[CompressedData["
1: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
vavC8CdFvZwk
          "]]}}}, {}, {}, {{}, {}}}}, {
    PlotLabel -> 
     FormBox["\"\[Lambda] = 0, 1/\[CapitalDelta] = 0.01\"", TraditionalForm], 
     AxesLabel -> {
       FormBox["\"\[ScriptCapitalJ] (K)\"", TraditionalForm], 
       FormBox[
       "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(0\\)]\\)|\[Square]\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\)\"", TraditionalForm]}, ImageSize -> 800, 
     LabelStyle -> {FontSize -> 20}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2., 2.}, {-0.1, 1.1000000000000008`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2., 2.}, {-0.1, 1.1000000000000008`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SubscriptBox[\\(A\\), \
\\(1\\)]\\)\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\)\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(+\\)], \\((3)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6640522875816994, 0.24052287581699347`, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.996078431372549, 0.3607843137254902, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(-\\)], \\((3)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6640522875816994, 0.6588235294117648, 
                    0.023529411764705882`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.996078431372549, 0.9882352941176471, \
0.03529411764705882]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(1  x\\)], \\((2)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(1  y\\)], \\((2)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(1  z\\)], \\((2)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(+\\)], \\((1)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1019607843137255, 0.0758169934640523, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15294117647058825, 0.11372549019607843, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15294117647058825`, 0.11372549019607843`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"|\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(0\\)]\
\\)|\\!\\(\\*SuperscriptBox[SubscriptBox[\\(E\\), \\(-\\)], \\((1)\\)]\\)\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8019711814924912`*^9, 3.8019714437137146`*^9, 3.801971482184147*^9, {
   3.801971788835229*^9, 3.801971806165318*^9}, 3.8019719065813093`*^9, {
   3.8019721021670055`*^9, 3.8019721254858756`*^9}, {3.801972240798213*^9, 
   3.8019722700122695`*^9}, {3.80197230944905*^9, 3.80197232131466*^9}, {
   3.8019724236008887`*^9, 3.801972440402108*^9}, 3.8020193916660223`*^9, {
   3.8020194255509624`*^9, 3.802019431853141*^9}, 3.802047593900301*^9, 
   3.802050415291074*^9, {3.802050493040114*^9, 3.802050517315979*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 110, 1, 122, "Title"],
Cell[693, 25, 212, 4, 37, "Input"],
Cell[908, 31, 257, 5, 37, "Input"],
Cell[CellGroupData[{
Cell[1190, 40, 101, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[1316, 45, 101, 1, 58, "Subsection"],
Cell[1420, 48, 3945, 102, 398, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[5402, 155, 108, 1, 47, "Subsection"],
Cell[5513, 158, 3773, 107, 472, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9323, 270, 166, 2, 47, "Subsection"],
Cell[9492, 274, 11806, 279, 1104, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[21335, 558, 116, 1, 47, "Subsection"],
Cell[21454, 561, 26109, 630, 3230, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[47600, 1196, 277, 8, 47, "Subsection"],
Cell[47880, 1206, 5755, 102, 730, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[53672, 1313, 407, 12, 47, "Subsection"],
Cell[54082, 1327, 8270, 150, 187, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62389, 1482, 354, 9, 58, "Subsection"],
Cell[62746, 1493, 574, 12, 62, "Input"],
Cell[63323, 1507, 1755, 51, 230, "Input"],
Cell[65081, 1560, 39886, 1067, 4213, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[105004, 2632, 211, 6, 47, "Subsection"],
Cell[CellGroupData[{
Cell[105240, 2642, 22778, 458, 2126, "Input"],
Cell[CellGroupData[{
Cell[128043, 3104, 150, 2, 26, "Print"],
Cell[128196, 3108, 149, 2, 26, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128406, 3117, 208, 3, 58, "Subsection"],
Cell[CellGroupData[{
Cell[128639, 3124, 8919, 162, 287, "Input"],
Cell[137561, 3288, 365571, 5978, 488, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[503181, 9272, 107, 1, 58, "Subsection"],
Cell[503291, 9275, 252, 5, 126, "Input"],
Cell[503546, 9282, 13141, 345, 3974, "Input"],
Cell[516690, 9629, 11429, 250, 3313, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[528156, 9884, 104, 1, 47, "Subsection"],
Cell[CellGroupData[{
Cell[528285, 9889, 5066, 120, 1513, "Input"],
Cell[533354, 10011, 77986, 1487, 2258, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[611401, 11505, 108, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[611534, 11510, 101, 1, 58, "Subsection"],
Cell[611638, 11513, 3945, 102, 686, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[615620, 11620, 219, 3, 47, "Subsection"],
Cell[615842, 11625, 6381, 167, 510, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[622260, 11797, 116, 1, 47, "Subsection"],
Cell[622379, 11800, 8923, 259, 1428, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[631339, 12064, 107, 1, 47, "Subsection"],
Cell[631449, 12067, 2992, 69, 894, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[634478, 12141, 108, 1, 47, "Subsection"],
Cell[634589, 12144, 39634, 984, 4732, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[674260, 13133, 113, 1, 47, "Subsection"],
Cell[674376, 13136, 619, 11, 52, "Input"],
Cell[674998, 13149, 15279, 354, 1376, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[690314, 13508, 211, 6, 47, "Subsection"],
Cell[CellGroupData[{
Cell[690550, 13518, 22469, 439, 1910, "Input"],
Cell[CellGroupData[{
Cell[713044, 13961, 292, 4, 26, "Print"],
Cell[713339, 13967, 292, 4, 26, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[713692, 13978, 208, 3, 58, "Subsection"],
Cell[CellGroupData[{
Cell[713925, 13985, 9032, 164, 238, "Input"],
Cell[722960, 14151, 341843, 5588, 511, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064852, 19745, 107, 1, 58, "Subsection"],
Cell[1064962, 19748, 252, 5, 52, "Input"],
Cell[1065217, 19755, 12999, 357, 1598, "Input"],
Cell[1078219, 20114, 11458, 247, 1298, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1089714, 20366, 104, 1, 47, "Subsection"],
Cell[CellGroupData[{
Cell[1089843, 20371, 5205, 123, 609, "Input"],
Cell[1095051, 20496, 73801, 1419, 909, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

